Delivered-To: headius@headius.com
Received: by 10.152.9.8 with SMTP id v8csp34013laa;
        Sat, 26 Oct 2013 13:15:44 -0700 (PDT)
X-Received: by 10.182.66.164 with SMTP id g4mr8140770obt.47.1382818543753;
        Sat, 26 Oct 2013 13:15:43 -0700 (PDT)
Return-Path: <ruby-ffi+bncBD2JT35HSQCBB3OFWCJQKGQEIUFZ64I@googlegroups.com>
Received: from mail-ob0-x240.google.com (mail-ob0-x240.google.com [2607:f8b0:4003:c01::240])
        by mx.google.com with ESMTPS id f9si5468846obv.75.2013.10.26.13.15.43
        for <headius@headius.com>
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Sat, 26 Oct 2013 13:15:43 -0700 (PDT)
Received-SPF: pass (google.com: domain of ruby-ffi+bncBD2JT35HSQCBB3OFWCJQKGQEIUFZ64I@googlegroups.com designates 2607:f8b0:4003:c01::240 as permitted sender)
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of ruby-ffi+bncBD2JT35HSQCBB3OFWCJQKGQEIUFZ64I@googlegroups.com designates 2607:f8b0:4003:c01::240 as permitted sender) smtp.mail=ruby-ffi+bncBD2JT35HSQCBB3OFWCJQKGQEIUFZ64I@googlegroups.com;
       dkim=pass header.i=@gmail.com;
       dmarc=pass (p=NONE dis=NONE) header.from=gmail.com
Received: by mail-ob0-f192.google.com with SMTP id vb8sf542813obc.19
        for <headius@headius.com>; Sat, 26 Oct 2013 13:15:43 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=20120806;
        h=date:from:to:message-id:in-reply-to:references:subject:mime-version
         :x-original-sender:reply-to:precedence:mailing-list:list-id
         :list-post:list-help:list-archive:sender:list-subscribe
         :list-unsubscribe:content-type;
        bh=NjBMXX16tLdCLeLMdUnIECFveTfXmlIb+RRzwsFWl5g=;
        b=hulbbct0/aBN3Ldg/CcYXQq8gadeiYw2r1GfnTUbb+ggi+MbqAOVjqDDVUqTsfrBLd
         gC0PUhAAjoooBqAY/FEVAlHvkvEMSVfQ78WNo1f+JhOczJ0F4+OWL5lfblFz2z3NVeqH
         kWibE2l2KsAVAaAWV7AzpfOT7oHlylUH/QB4xA0iweTwu/uEulmpVjGyjoH+8r8Asji3
         OfNfbMzIsno+1korE0aLfh2S0pDiotE4eD8/kN8sC3EB8eGusMbCAX3N2mKYPdhGd1Kf
         UbTkIfDFCD3BR4oKb5EShhLHnigBQIbyhV9PYdJW/+xQPRIB4/2z5hNm1I4tGkLbbw0D
         D2bA==
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=date:from:to:message-id:in-reply-to:references:subject:mime-version
         :x-original-sender:reply-to:precedence:mailing-list:list-id
         :list-post:list-help:list-archive:sender:list-subscribe
         :list-unsubscribe:content-type;
        bh=NjBMXX16tLdCLeLMdUnIECFveTfXmlIb+RRzwsFWl5g=;
        b=jU1khXwlVDSlrzTFPG5h2MnfcIc7STdl3Wh3AB9G0rdCvzLQGTaYBPxw7fbOhT7pE5
         D1eZ+WkUUjEFcn0Lu+U8VQdTSMnmBQGGsWTkpFncH4Azb+P4D1ap4gC8BNK1Kj1vtKR+
         WcF8iUz9inX+GsNrU5jiKB5b1mmdJSRUN1v5HG8LoM7X5UXFE4CV2ILFhmbHj5xsiCk3
         EDkE+wVuIcghT7fUND2qZh/9slhkagsGECogzY1Be+Fp9HhiOQAdSMM/FSRVFz76UL4i
         1Q/dx+b5KHs2K8XX6BSuwjRQQh+B4Fgmh8hqR+dszqH3kobNt9yWej+3SihfWa0b3NAC
         NEPQ==
X-Received: by 10.49.5.167 with SMTP id t7mr360320qet.7.1382818543137;
        Sat, 26 Oct 2013 13:15:43 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.49.98.35 with SMTP id ef3ls1503325qeb.76.gmail; Sat, 26 Oct
 2013 13:15:41 -0700 (PDT)
X-Received: by 10.49.27.137 with SMTP id t9mr845qeg.34.1382818541741;
        Sat, 26 Oct 2013 13:15:41 -0700 (PDT)
Date: Sat, 26 Oct 2013 13:15:41 -0700 (PDT)
From: patrick.hemmer@gmail.com
To: ruby-ffi@googlegroups.com
Message-Id: <9653d653-7259-46bb-8844-9adff1fb803c@googlegroups.com>
In-Reply-To: <9fb78255-b89a-4eec-a6ea-47d700d339f8@googlegroups.com>
References: <c7bff424-0ba4-41ce-9424-b6c045174fac@googlegroups.com>
 <9fb78255-b89a-4eec-a6ea-47d700d339f8@googlegroups.com>
Subject: [ruby-ffi] Re: Segfault when using threads
MIME-Version: 1.0
X-Original-Sender: patrickhemmer@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
X-Google-Group-Id: 238405446264
List-Post: <http://groups.google.com/group/ruby-ffi/post>, <mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe>, <mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe>, <mailto:googlegroups-manage+238405446264+unsubscribe@googlegroups.com>
Content-Type: multipart/alternative; 
	boundary="----=_Part_153_17090047.1382818541322"

------=_Part_153_17090047.1382818541322
Content-Type: text/plain; charset=ISO-8859-1

I could have sworn when I tried doing everything on the thread that it 
worked. But I just tried it again and it segfaults.

When I look at ruby's source code, it looks like it allocates a 512kb stack 
for threads. When I go into corosync and look at the size of the buffer 
it's allocating on the stack, it's 1mb.
So the reason it works on the main thread is that the main thread has an 
8mb stack.

I don't suppose there's any way to work around this behavior? If not I'm 
fairly well hosed and can only run cpg_dispatch on the main thread :-(

Thank you for that. I don't know that I would have found that otherwise.

-Patrick


On Saturday, October 26, 2013 8:06:14 AM UTC-4, Wayne Meissner wrote:
>
>
> Try moving all the initialization into the new thread as well, to isolate 
> any cross-threading issues (some libraries have thread-local data, so if 
> you init an object on one thread, but access from another, it could be only 
> partially initialized).
>
> If that *still* segfaults, then it could be the library - see 
> http://lists.corosync.org/pipermail/discuss/2013-April/002514.html
>  - non-main threads get a smaller and fixed size stack, whereas the main 
> thread gets a growable stack.
>
>
>
>
> On Saturday, 26 October 2013 16:15:25 UTC+11, patrick...@gmail.com wrote:
>>
>> Ok, the subject probably sounds like I've got some variable not being 
>> locked or whatnot, but I highly doubt that's the case :-)
>>
>> So, what I've got going on is that I'm developing a gem for interfacing 
>> with corosync <http://corosync.github.io/corosync/>. In single threaded 
>> mode, it works perfectly. But as soon as I call the corosync library from 
>> within a thread, it blows up (sigsegv). The interesting part is that in my 
>> test case, I'm not even doing anything in the main thread other than 
>> waiting for the new thread to complete. No modifying of shared variables or 
>> anything.
>>
>> This is the code:
>>
>>> require 'corosync/cpg'
>>> cpg = Corosync::CPG.new('mygroup')
>>> #cpg.dispatch(0) # this line runs perfectly
>>> Thread.new { cpg.dispatch(0) }.join # this line segfaults
>>
>>
>> Move the comment from line 3 to line 4 and it runs fine.
>>
>> This is the ruby stack trace:
>>
>>> test.rb:4:in `block in <main>'
>>> /home/phemmer/git/ruby-corosync/lib/corosync/cpg.rb:145:in `dispatch'
>>> /home/phemmer/git/ruby-corosync/lib/corosync/cpg.rb:145:in `cpg_dispatch'
>>
>>
>>
>> When I throw GDB on it, this is what the stack trace looks like:
>>
>>> [New Thread 0x7ffff7ff9700 (LWP 30441)]
>>> [New Thread 0x7ffff7ecf700 (LWP 30442)]
>>> [New Thread 0x7fffeef7b700 (LWP 30443)]
>>> Program received signal SIGSEGV, Segmentation fault.
>>> [Switching to Thread 0x7fffeef7b700 (LWP 30443)]
>>> 0x00007fffefae4c86 in hdb_handle_get (instance=0x7fffeee78580, 
>>> handle_in=7749363892505018368, 
>>>     handle_database=0x7fffefce7060 <cpg_handle_t_db>) at 
>>> ../include/corosync/hdb.h:110
>>> 110 ../include/corosync/hdb.h: No such file or directory.
>>> (gdb) where
>>> #0  0x00007fffefae4c86 in hdb_handle_get (instance=0x7fffeee78580, 
>>> handle_in=7749363892505018368, 
>>>     handle_database=0x7fffefce7060 <cpg_handle_t_db>) at 
>>> ../include/corosync/hdb.h:110
>>> #1  cpg_dispatch (handle=7749363892505018368, 
>>> dispatch_types=CS_DISPATCH_ONE_NONBLOCKING)
>>>     at cpg.c:357
>>> #2  0x00007fffefef1010 in ffi_call_unix64 () from /usr/lib64/libffi.so.6
>>> #3  0x00007fffefef0a8a in ffi_call () from /usr/lib64/libffi.so.6
>>> #4  0x00007ffff0101f3e in rbffi_CallFunction ()
>>>    from /home/phemmer/.gem/ruby/1.9.1/gems/ffi-1.9.0/lib/ffi_c.so
>>> #5  0x00007ffff0105956 in custom_trampoline ()
>>>    from /home/phemmer/.gem/ruby/1.9.1/gems/ffi-1.9.0/lib/ffi_c.so
>>> #6  0x00007ffff7af9898 in call_cfunc (func=0x7ffff7fee0d8, recv=9748160, 
>>> len=-1, argc=2, 
>>>     argv=0x7fffeef7c070) at vm_insnhelper.c:317
>>> #7  0x00007ffff7afa1b6 in vm_call_cfunc (th=0x837840, 
>>> reg_cfp=0x7fffef07beb0, num=2, recv=9748160, 
>>>     blockptr=0x0, me=0x87c420) at vm_insnhelper.c:404
>>> #8  0x00007ffff7afa893 in vm_call_method (th=0x837840, 
>>> cfp=0x7fffef07beb0, num=2, blockptr=0x0, 
>>>     flag=0, id=15088, me=0x87c420, recv=9748160) at vm_insnhelper.c:530
>>> #9  0x00007ffff7b001ab in vm_exec_core (th=0x837840, initial=0) at 
>>> insns.def:1018
>>> #10 0x00007ffff7b0d5a5 in vm_exec (th=0x837840) at vm.c:1236
>>> #11 0x00007ffff7b0beff in invoke_block_from_c (th=0x837840, 
>>> block=0x607ad0, self=6711000, argc=0, 
>>>     argv=0xa8e7e8, blockptr=0x0, cref=0x0) at vm.c:640
>>> #12 0x00007ffff7b0c111 in rb_vm_invoke_proc (th=0x837840, proc=0x607ad0, 
>>> self=6711000, argc=0, 
>>>     argv=0xa8e7e8, blockptr=0x0) at vm.c:686
>>> #13 0x00007ffff7b12eaa in thread_start_func_2 (th=0x837840, 
>>> stack_start=0x7fffeef7c000)
>>>     at thread.c:466
>>> #14 0x00007ffff7b11b88 in thread_start_func_1 (th_ptr=0x837840) at 
>>> thread_pthread.c:657
>>> #15 0x00007ffff73ba03a in start_thread () from /lib64/libpthread.so.0
>>> #16 0x00007ffff76b740d in clone () from /lib64/libc.so.6
>>
>> (hdb_handle_get hdb.h:110 is found here<https://github.com/corosync/corosync/blob/v2.3.2/include/corosync/hdb.h#L110>
>> )
>> (cpg_dispatch cpg.c:357 is found here<https://github.com/corosync/corosync/blob/v2.3.2/lib/cpg.c#L357>
>> )
>>
>>
>> The corosync gem currently lives at 
>> http://github.com/phemmer/ruby-corosync
>> For the libraries, I'm running libffi 3.0.11, corosync 2.3.2<https://github.com/corosync/corosync/tree/v2.3.2>, 
>> and libqb 0.14.4 <https://github.com/ClusterLabs/libqb/tree/v0.14.4>.
>> I'm using MRI ruby 1.9.3p448 and ffi gem 1.9.0.
>>
>> Any ideas and help would be appreciated. I've been pounding my head on 
>> the desk all day long.
>>
>> -Patrick
>>
>

-- 

--- 
You received this message because you are subscribed to the Google Groups "ruby-ffi" group.
To unsubscribe from this group and stop receiving emails from it, send an email to ruby-ffi+unsubscribe@googlegroups.com.
For more options, visit https://groups.google.com/groups/opt_out.

------=_Part_153_17090047.1382818541322
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>I could have sworn when I tried doing everything on t=
he thread that it worked. But I just tried it again and it segfaults.</div>=
<div><br></div><div>When I look at ruby's source code, it looks like it all=
ocates a 512kb stack for threads. When I go into corosync and look at the s=
ize of the buffer it's allocating on the stack, it's 1mb.</div><div>So the =
reason it works on the main thread is that the main thread has an 8mb stack=
.</div><div><br></div><div>I don't suppose there's any way to work around t=
his behavior? If not I'm fairly well hosed and can only run cpg_dispatch on=
 the main thread :-(</div><div><br></div><div>Thank you for that. I don't k=
now that I would have found that otherwise.<br></div><div><br></div><div>-P=
atrick</div><div><br></div><div><br>On Saturday, October 26, 2013 8:06:14 A=
M UTC-4, Wayne Meissner wrote:<blockquote class=3D"gmail_quote" style=3D"ma=
rgin: 0;margin-left: 0.8ex;border-left: 1px #ccc solid;padding-left: 1ex;">=
<div dir=3D"ltr"><div><br></div><div>Try moving all the initialization into=
 the new thread as well, to isolate any cross-threading issues (some librar=
ies have thread-local data, so if you init an object on one thread, but acc=
ess from another, it could be only partially initialized).</div><div><br></=
div><div>If that *still* segfaults, then it could be the library - see <a h=
ref=3D"http://lists.corosync.org/pipermail/discuss/2013-April/002514.html" =
target=3D"_blank">http://lists.corosync.org/<wbr>pipermail/discuss/2013-Apr=
il/<wbr>002514.html</a></div><div>&nbsp;- non-main threads get a smaller an=
d fixed size stack, whereas the main thread gets a growable stack.</div><di=
v><br></div><div><br></div><div><br><br>On Saturday, 26 October 2013 16:15:=
25 UTC+11, <a>patrick...@gmail.com</a>  wrote:<blockquote class=3D"gmail_qu=
ote" style=3D"margin:0;margin-left:0.8ex;border-left:1px #ccc solid;padding=
-left:1ex"><div dir=3D"ltr">Ok, the subject probably sounds like I've got s=
ome variable not being locked or whatnot, but I highly doubt that's the cas=
e :-)<div><br></div><div>So, what I've got going on is that I'm developing =
a gem for interfacing with <a href=3D"http://corosync.github.io/corosync/" =
target=3D"_blank">corosync</a>. In single threaded mode, it works perfectly=
. But as soon as I call the corosync library from within a thread, it blows=
 up (sigsegv). The interesting part is that in my test case, I'm not even d=
oing anything in the main thread other than waiting for the new thread to c=
omplete. No modifying of shared variables or anything.</div><div><br></div>=
<div>This is the code:</div><div><blockquote class=3D"gmail_quote" style=3D=
"margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,2=
04,204);border-left-style:solid;padding-left:1ex"><font face=3D"courier new=
, monospace" color=3D"#660000">require 'corosync/cpg'<br></font><font face=
=3D"courier new, monospace" color=3D"#660000">cpg =3D Corosync::CPG.new('my=
group')<br></font><font face=3D"courier new, monospace" color=3D"#660000">#=
cpg.dispatch(0) # this line runs perfectly<br></font><font face=3D"courier =
new, monospace" color=3D"#660000">Thread.new { cpg.dispatch(0) }.join # thi=
s line segfaults</font></blockquote></div><div><br></div><div>Move the comm=
ent from line 3 to line 4 and it runs fine.</div><div><br></div><div>This i=
s the ruby stack trace:</div><div><blockquote class=3D"gmail_quote" style=
=3D"margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(20=
4,204,204);border-left-style:solid;padding-left:1ex"><font face=3D"courier =
new, monospace"><font color=3D"#660000">test.rb:4:in `block in &lt;main&gt;=
'<br></font><font color=3D"#660000">/home/phemmer/git/ruby-<wbr>corosync/li=
b/corosync/cpg.rb:<wbr>145:in `dispatch'<br></font><font color=3D"#660000">=
/home/phemmer/git/ruby-<wbr>corosync/lib/corosync/cpg.rb:<wbr>145:in `cpg_d=
ispatch'</font></font></blockquote></div><div><br></div><div><br></div><div=
>When I throw GDB on it, this is what the stack trace looks like:</div><div=
><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border=
-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;=
padding-left:1ex"><font face=3D"courier new, monospace"><font color=3D"#660=
000">[New Thread 0x7ffff7ff9700 (LWP 30441)]<br></font><font color=3D"#6600=
00">[New Thread 0x7ffff7ecf700 (LWP 30442)]<br></font><font color=3D"#66000=
0">[New Thread 0x7fffeef7b700 (LWP 30443)]</font><font color=3D"#660000"><b=
r></font><font color=3D"#660000">Program received signal SIGSEGV, Segmentat=
ion fault.<br></font><font color=3D"#660000">[Switching to Thread 0x7fffeef=
7b700 (LWP 30443)]<br></font><font color=3D"#660000">0x00007fffefae4c86 in =
hdb_handle_get (instance=3D0x7fffeee78580, handle_in=3D7749363892505018368,=
<wbr>&nbsp;<br></font><font color=3D"#660000">&nbsp; &nbsp; handle_database=
=3D0x7fffefce7060 &lt;cpg_handle_t_db&gt;) at ../include/corosync/hdb.h:110=
<br></font><font color=3D"#660000">110<span style=3D"white-space:pre">	</sp=
an>../include/corosync/hdb.h: No such file or directory.<br></font><font co=
lor=3D"#660000">(gdb) where<br></font><font color=3D"#660000">#0 &nbsp;0x00=
007fffefae4c86 in hdb_handle_get (instance=3D0x7fffeee78580, handle_in=3D77=
49363892505018368,<wbr>&nbsp;<br></font><font color=3D"#660000">&nbsp; &nbs=
p; handle_database=3D0x7fffefce7060 &lt;cpg_handle_t_db&gt;) at ../include/=
corosync/hdb.h:110<br></font><font color=3D"#660000">#1 &nbsp;cpg_dispatch =
(handle=3D7749363892505018368, dispatch_types=3DCS_DISPATCH_<wbr>ONE_NONBLO=
CKING)<br></font><font color=3D"#660000">&nbsp; &nbsp; at cpg.c:357<br></fo=
nt><font color=3D"#660000">#2 &nbsp;0x00007fffefef1010 in ffi_call_unix64 (=
) from /usr/lib64/libffi.so.6<br></font><font color=3D"#660000">#3 &nbsp;0x=
00007fffefef0a8a in ffi_call () from /usr/lib64/libffi.so.6<br></font><font=
 color=3D"#660000">#4 &nbsp;0x00007ffff0101f3e in rbffi_CallFunction ()<br>=
</font><font color=3D"#660000">&nbsp; &nbsp;from /home/phemmer/.gem/ruby/1.=
9.1/<wbr>gems/ffi-1.9.0/lib/ffi_c.so<br></font><font color=3D"#660000">#5 &=
nbsp;0x00007ffff0105956 in custom_trampoline ()<br></font><font color=3D"#6=
60000">&nbsp; &nbsp;from /home/phemmer/.gem/ruby/1.9.1/<wbr>gems/ffi-1.9.0/=
lib/ffi_c.so<br></font><font color=3D"#660000">#6 &nbsp;0x00007ffff7af9898 =
in call_cfunc (func=3D0x7ffff7fee0d8, recv=3D9748160, len=3D-1, argc=3D2,&n=
bsp;<br></font><font color=3D"#660000">&nbsp; &nbsp; argv=3D0x7fffeef7c070)=
 at vm_insnhelper.c:317<br></font><font color=3D"#660000">#7 &nbsp;0x00007f=
fff7afa1b6 in vm_call_cfunc (th=3D0x837840, reg_cfp=3D0x7fffef07beb0, num=
=3D2, recv=3D9748160,&nbsp;<br></font><font color=3D"#660000">&nbsp; &nbsp;=
 blockptr=3D0x0, me=3D0x87c420) at vm_insnhelper.c:404<br></font><font colo=
r=3D"#660000">#8 &nbsp;0x00007ffff7afa893 in vm_call_method (th=3D0x837840,=
 cfp=3D0x7fffef07beb0, num=3D2, blockptr=3D0x0,&nbsp;<br></font><font color=
=3D"#660000">&nbsp; &nbsp; flag=3D0, id=3D15088, me=3D0x87c420, recv=3D9748=
160) at vm_insnhelper.c:530<br></font><font color=3D"#660000">#9 &nbsp;0x00=
007ffff7b001ab in vm_exec_core (th=3D0x837840, initial=3D0) at insns.def:10=
18<br></font><font color=3D"#660000">#10 0x00007ffff7b0d5a5 in vm_exec (th=
=3D0x837840) at vm.c:1236<br></font><font color=3D"#660000">#11 0x00007ffff=
7b0beff in invoke_block_from_c (th=3D0x837840, block=3D0x607ad0, self=3D671=
1000, argc=3D0,&nbsp;<br></font><font color=3D"#660000">&nbsp; &nbsp; argv=
=3D0xa8e7e8, blockptr=3D0x0, cref=3D0x0) at vm.c:640<br></font><font color=
=3D"#660000">#12 0x00007ffff7b0c111 in rb_vm_invoke_proc (th=3D0x837840, pr=
oc=3D0x607ad0, self=3D6711000, argc=3D0,&nbsp;<br></font><font color=3D"#66=
0000">&nbsp; &nbsp; argv=3D0xa8e7e8, blockptr=3D0x0) at vm.c:686<br></font>=
<font color=3D"#660000">#13 0x00007ffff7b12eaa in thread_start_func_2 (th=
=3D0x837840, stack_start=3D0x7fffeef7c000)<br></font><font color=3D"#660000=
">&nbsp; &nbsp; at thread.c:466<br></font><font color=3D"#660000">#14 0x000=
07ffff7b11b88 in thread_start_func_1 (th_ptr=3D0x837840) at thread_pthread.=
c:657<br></font><font color=3D"#660000">#15 0x00007ffff73ba03a in start_thr=
ead () from /lib64/libpthread.so.0<br></font><font color=3D"#660000">#16 0x=
00007ffff76b740d in clone () from /lib64/libc.so.6</font></font></blockquot=
e></div><div>(hdb_handle_get hdb.h:110 is found <a href=3D"https://github.c=
om/corosync/corosync/blob/v2.3.2/include/corosync/hdb.h#L110" target=3D"_bl=
ank">here</a>)<br></div><div>(cpg_dispatch&nbsp;cpg.c:357 is found <a href=
=3D"https://github.com/corosync/corosync/blob/v2.3.2/lib/cpg.c#L357" target=
=3D"_blank">here</a>)<br></div><div><br></div><div><br></div><div>The coros=
ync gem currently lives at <a href=3D"http://github.com/phemmer/ruby-corosy=
nc" target=3D"_blank">http://github.com/phemmer/<wbr>ruby-corosync</a></div=
><div>For the libraries, I'm running libffi 3.0.11,&nbsp;<a href=3D"https:/=
/github.com/corosync/corosync/tree/v2.3.2" target=3D"_blank">corosync 2.3.2=
</a>, and <a href=3D"https://github.com/ClusterLabs/libqb/tree/v0.14.4" tar=
get=3D"_blank">libqb 0.14.4</a>.</div><div>I'm using MRI ruby 1.9.3p448 and=
 ffi gem 1.9.0.</div><div><br></div><div>Any ideas and help would be apprec=
iated. I've been pounding my head on the desk all day long.</div><div><br><=
/div><div>-Patrick</div></div></blockquote></div></div></blockquote></div><=
/div>

<p></p>

-- <br />
&nbsp;<br />
--- <br />
You received this message because you are subscribed to the Google Groups &=
quot;ruby-ffi&quot; group.<br />
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to ruby-ffi+unsubscribe@googlegroups.com.<br />
For more options, visit <a href=3D"https://groups.google.com/groups/opt_out=
">https://groups.google.com/groups/opt_out</a>.<br />

------=_Part_153_17090047.1382818541322--
