Delivered-To: headius@headius.com
Received: by 10.142.217.20 with SMTP id p20cs64823wfg;
        Sat, 14 Nov 2009 02:12:41 -0800 (PST)
Received: by 10.115.80.7 with SMTP id h7mr1262462wal.60.1258193561129;
        Sat, 14 Nov 2009 02:12:41 -0800 (PST)
Return-Path: <grbounce-oS_-awUAAACicsVXPUFstTOYQmrUJNfw=headius=headius.com@googlegroups.com>
Received: from mail-pz0-f148.google.com (mail-pz0-f148.google.com [209.85.222.148])
        by mx.google.com with ESMTP id 13si3888820pzk.127.2009.11.14.02.12.40;
        Sat, 14 Nov 2009 02:12:40 -0800 (PST)
Received-SPF: pass (google.com: domain of grbounce-oS_-awUAAACicsVXPUFstTOYQmrUJNfw=headius=headius.com@googlegroups.com designates 209.85.222.148 as permitted sender) client-ip=209.85.222.148;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of grbounce-oS_-awUAAACicsVXPUFstTOYQmrUJNfw=headius=headius.com@googlegroups.com designates 209.85.222.148 as permitted sender) smtp.mail=grbounce-oS_-awUAAACicsVXPUFstTOYQmrUJNfw=headius=headius.com@googlegroups.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by pzk12 with SMTP id 12so679490pzk.13
        for <headius@headius.com>; Sat, 14 Nov 2009 02:12:39 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:received:x-sender:x-apparently-to
         :received:received:received:received-spf:received:dkim-signature
         :domainkey-signature:mime-version:received:in-reply-to:references
         :date:message-id:subject:from:to:content-type:reply-to:sender
         :precedence:x-google-loop:mailing-list:list-id:list-post:list-help
         :list-unsubscribe:x-beenthere-env:x-beenthere;
        bh=THIoDA9dqwFnVUvd4/n98XA3G/n++HEWmpUM3zNHkB0=;
        b=s0X07yjqE6rlCd7C6wQhfts8PMzeTuHLfT4r3DQFBPThxFsIXQumR/9k14jGGfckkF
         A5dpPOZJZ4NZfd6UaFpLyQdcFB1QL4r2CH1+wchiV32cxDovT/sOJvgNUJ4ScNk2IwAh
         N0J23Q6MQqzeNEYMnGA2aspLMgUu9/1+ee56Q=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-sender:x-apparently-to:received-spf:authentication-results
         :dkim-signature:domainkey-signature:mime-version:in-reply-to
         :references:date:message-id:subject:from:to:content-type:reply-to
         :sender:precedence:x-google-loop:mailing-list:list-id:list-post
         :list-help:list-unsubscribe:x-beenthere-env:x-beenthere;
        b=TWRDcGeP6mEcntzNx91teKGSwFKWKtxZPaK+TN0l5RDq+U8TXAvx9gq65D4R/ijYmF
         evAq/CXrEBH6Wtt3BPoSHahKmq0gLc//xmcYo9f4DU38Ua0jcM2ANRyKEvQnAUFEcMnz
         yRvfpMr//NlSyouqtWtk15V/BzFATR06U7rKk=
Received: by 10.140.162.10 with SMTP id k10mr179075rve.13.1258193557785;
        Sat, 14 Nov 2009 02:12:37 -0800 (PST)
Received: by 10.106.154.17 with SMTP id b17gr116pre.0;
	Sat, 14 Nov 2009 02:12:37 -0800 (PST)
X-Sender: wmeissner@gmail.com
X-Apparently-To: ruby-ffi@googlegroups.com
Received: by 10.114.189.22 with SMTP id m22mr1094589waf.7.1258193556772; Sat, 14 Nov 2009 02:12:36 -0800 (PST)
Received: by 10.114.189.22 with SMTP id m22mr1094588waf.7.1258193556750; Sat, 14 Nov 2009 02:12:36 -0800 (PST)
Return-Path: <wmeissner@gmail.com>
Received: from mail-pw0-f58.google.com (mail-pw0-f58.google.com [209.85.160.58]) by gmr-mx.google.com with ESMTP id 3si1277339pxi.8.2009.11.14.02.12.35; Sat, 14 Nov 2009 02:12:35 -0800 (PST)
Received-SPF: pass (google.com: domain of wmeissner@gmail.com designates 209.85.160.58 as permitted sender) client-ip=209.85.160.58;
Received: by mail-pw0-f58.google.com with SMTP id 21so2505767pwi.17 for <ruby-ffi@googlegroups.com>; Sat, 14 Nov 2009 02:12:35 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=gamma; h=domainkey-signature:mime-version:received:in-reply-to:references :date:message-id:subject:from:to:content-type; bh=7fia6/iHKZK+N4+fOxhPbQcHWxSIzFxB+8GWGJdTYIk=; b=JMsq8XP7iLApV0ngbclZMj0QUz6rdLkwV7nZvikPNNy/fBqfqCC1NOEV1SHjzJA5YU I5+SfR6/faSmTKxUGgACS0KhbzHpQrcROXiw8zOF3Li6biYXewXr/d1nzsjZ8JQKxpyi JAYe1zWLL9P3ah1lG2y7QFQQX6zhsTlp7WJVE=
DomainKey-Signature: a=rsa-sha1; c=nofws; d=gmail.com; s=gamma; h=mime-version:in-reply-to:references:date:message-id:subject:from:to :content-type; b=DoS8OFP8QMj238Q/IC2xe1jwb7DA5Gm4Lw1AijXYapai3i1vea6zi/tOrVw6lZv/ho FOhJBBVS6rg0JL6A2Rwkw8vk9/Vplg/BjdAAZYNzQPWtIvf9CdekG2Veot95l/oKcwUd fC3QYYZOwKAvXpSmE9v2mYlJBrFjDOmMV/k/I=
MIME-Version: 1.0
Received: by 10.140.225.9 with SMTP id x9mr291040rvg.175.1258193554965; Sat,  14 Nov 2009 02:12:34 -0800 (PST)
In-Reply-To: <bf2f536c0911140130i1654d8a6ve8db4ca6a414cd7a@mail.gmail.com>
References: <bf2f536c0911131859h3f15b1a0k2a6aad45ab323bfe@mail.gmail.com> <4ccee320911132053k2dc05322tfedde4d3144193bb@mail.gmail.com> <bf2f536c0911140130i1654d8a6ve8db4ca6a414cd7a@mail.gmail.com>
Date: Sat, 14 Nov 2009 20:12:34 +1000
Message-ID: <4ccee320911140212g4be7aafao66e5872be75ccae5@mail.gmail.com>
Subject: [ruby-ffi] Re: New wiki page: Enums. Please improve and correct.
From: Wayne Meissner <wmeissner@gmail.com>
To: ruby-ffi@googlegroups.com
Content-Type: text/plain; charset=ISO-8859-1
Reply-To: ruby-ffi@googlegroups.com
Sender: ruby-ffi@googlegroups.com
Precedence: bulk
X-Google-Loop: groups
Mailing-List: list ruby-ffi@googlegroups.com;
	contact ruby-ffi+owner@googlegroups.com
List-Id: <ruby-ffi.googlegroups.com>
List-Post: <mailto:ruby-ffi@googlegroups.com>
List-Help: <mailto:ruby-ffi+help@googlegroups.com>
List-Unsubscribe: <http://googlegroups.com/group/ruby-ffi/subscribe>,
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
X-BeenThere-Env: ruby-ffi@googlegroups.com
X-BeenThere: ruby-ffi@googlegroups.com


2009/11/14 John Croisant <jacius@gmail.com>:
> But, I thought you could use the enum name as a type, even in structs.
> I haven't tried it yet, but it certainly feels like that _should_ be
> supported, from a library user's perspective. Even if that doesn't
> work yet, "enum_type(:my_enum)" would work, right?

The problem is that Struct.layout() needs to be able to resolve the
module that encloses the Struct subclass definition, to be able to
lookup any custom typedefs (e.g. callbacks, enums).

e.g.
Module Foo
  typedef :int, :my_int
  class MyStruct < FFI::Struct
    layout :a, :my_int
  end
end

It kinda-sorta works, but is not rock solid, so I discourage its use.


> P.S. Does FFI enforce the validity of values used where a particular
> enum type is expected? In other words, if a function (or struct) is
> expecting an enum that can be only :a, :b, or :c, would passing :d
> cause it to raise an error?

Passing :d should raise an error, since it will try to look it up in
the enum table and fail.
