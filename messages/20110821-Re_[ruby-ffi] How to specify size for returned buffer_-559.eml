Delivered-To: headius@headius.com
Received: by 10.14.28.203 with SMTP id g51cs80919eea;
        Sun, 21 Aug 2011 10:58:33 -0700 (PDT)
Received: by 10.216.229.224 with SMTP id h74mr1187370weq.66.1313949512872;
        Sun, 21 Aug 2011 10:58:32 -0700 (PDT)
Return-Path: <ruby-ffi+bncCP397LbnChDDjsXyBBoEKaaJuw@googlegroups.com>
Received: from mail-wy0-f190.google.com (mail-wy0-f190.google.com [74.125.82.190])
        by mx.google.com with ESMTPS id h10si13677597wee.24.2011.08.21.10.58.31
        (version=TLSv1/SSLv3 cipher=OTHER);
        Sun, 21 Aug 2011 10:58:31 -0700 (PDT)
Received-SPF: pass (google.com: domain of ruby-ffi+bncCP397LbnChDDjsXyBBoEKaaJuw@googlegroups.com designates 74.125.82.190 as permitted sender) client-ip=74.125.82.190;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncCP397LbnChDDjsXyBBoEKaaJuw@googlegroups.com designates 74.125.82.190 as permitted sender) smtp.mail=ruby-ffi+bncCP397LbnChDDjsXyBBoEKaaJuw@googlegroups.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by wyi11 with SMTP id 11sf17983474wyi.7
        for <headius@headius.com>; Sun, 21 Aug 2011 10:58:31 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:message-id:date:from:user-agent
         :mime-version:to:subject:references:in-reply-to:x-virus-scanned
         :x-original-sender:x-original-authentication-results:reply-to
         :precedence:mailing-list:list-id:x-google-group-id:list-post
         :list-help:list-archive:sender:list-subscribe:list-unsubscribe
         :content-type:content-transfer-encoding;
        bh=G/MrrZsK6Eh+lCpXnyA4SlMsoIoD+cSfxyZHUaRbMy4=;
        b=aEI+fYf0EkmJ/im2yrJ77Cj7FVZbHSsUfuM9FNtoQtPUAUpiFsXFUG4kxFx97OWvYm
         3juO61pHTjGvJXPju2BKV8RqWzwAT0PEXlqml7mk/oI1ztWjlCt/aWxChxPVpvYhk/rj
         pwvGYqM4kOTqe3bRaWP1TVxP2hG9aEgkxoPCA=
Received: by 10.216.56.73 with SMTP id l51mr505092wec.12.1313949507025;
        Sun, 21 Aug 2011 10:58:27 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.14.45.226 with SMTP id p74ls606396eeb.4.gmail; Sun, 21 Aug
 2011 10:58:26 -0700 (PDT)
Received: by 10.14.147.138 with SMTP id t10mr262751eej.1.1313949506171;
        Sun, 21 Aug 2011 10:58:26 -0700 (PDT)
Received: by 10.14.147.138 with SMTP id t10mr262750eej.1.1313949506156;
        Sun, 21 Aug 2011 10:58:26 -0700 (PDT)
Received: from smtp-vbr13.xs4all.nl (smtp-vbr13.xs4all.nl [194.109.24.33])
        by gmr-mx.google.com with ESMTP id y12si7861012eem.1.2011.08.21.10.58.24;
        Sun, 21 Aug 2011 10:58:25 -0700 (PDT)
Received-SPF: neutral (google.com: 194.109.24.33 is neither permitted nor denied by best guess record for domain of matijs@matijs.net) client-ip=194.109.24.33;
Received: from [10.0.0.20] (mvz.xs4all.nl [83.163.118.181])
	(authenticated bits=0)
	by smtp-vbr13.xs4all.nl (8.13.8/8.13.8) with ESMTP id p7LHwJiv020280
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <ruby-ffi@googlegroups.com>; Sun, 21 Aug 2011 19:58:24 +0200 (CEST)
	(envelope-from matijs@matijs.net)
Message-ID: <4E51473A.1070906@matijs.net>
Date: Sun, 21 Aug 2011 19:58:18 +0200
From: Matijs van Zuijlen <matijs@matijs.net>
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.18) Gecko/20110626 Icedove/3.1.11
MIME-Version: 1.0
To: ruby-ffi@googlegroups.com
Subject: Re: [ruby-ffi] How to specify size for returned buffer?
References: <ddd2bf7b-ecd4-4cea-9694-721194d096a8@p5g2000vbl.googlegroups.com>
In-Reply-To: <ddd2bf7b-ecd4-4cea-9694-721194d096a8@p5g2000vbl.googlegroups.com>
X-Virus-Scanned: by XS4ALL Virus Scanner
X-Original-Sender: matijs@matijs.net
X-Original-Authentication-Results: gmr-mx.google.com; spf=neutral (google.com:
 194.109.24.33 is neither permitted nor denied by best guess record for domain
 of matijs@matijs.net) smtp.mail=matijs@matijs.net
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
X-Google-Group-Id: 238405446264
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, <mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, <mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>,
 <mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Hi cfis,

On 08/20/2011 06:57 AM, cfis wrote:
> I'm trying to wrap FreeImage (http://freeimage.sourceforge.net/) and
> it has this function:
>
> DLL_API BOOL DLL_CALLCONV FreeImage_AcquireMemory(FIMEMORY *stream,
> BYTE **data, DWORD *size_in_bytes);
>
> The way this works is you hand FreeImage a pointer (data) which it
> then allocates memory for and returns the size in the size_in_bytes
> out parameter.  I've attached example C code from the FreeImage docs
> in case it helps.
>
> So I'm not sure how to wrap this function.  So far I have this:
>
> FreeImage.attach_function('FreeImage_AcquireMemory',
> [:pointer, :pointer, :uint], :bool)

Since all the arguments in C are pointers, the argument specification should 
read [:pointer, :pointer, :pointer].

> buffer = MemoryPointer.new(:pointer)
> size_ptr = MemoryPointer.new(:uint)
> FreeImage.FreeImage_AcquireMemory(self, buffer, size);

The call would then be

   FreeImage.FreeImage_AcquireMemory(self, buffer, size_ptr)

But perhaps you were doing that already and didn't copy and paste properly?

> What I would then like to do is something like:
>
> buffer.size = size_ptr.read_pointer()
>
> But buffer doesn't have any such API.

There really is no need to do that. Besides, the call would be size_ptr.read_uint.

What you want to do is:

   size = size_ptr.read_uint
   data_ptr = buffer.read_pointer

And then you can read data using:

   data_ptr.get_uint8(offset)

Making sure that offset < size.

> Any help appreciated.
>
> Thanks,
>
> Charlie

HTH,
-- 
Matijs
