Delivered-To: headius@headius.com
Received: by 10.151.141.21 with SMTP id t21cs72998ybn;
        Mon, 29 Mar 2010 12:07:10 -0700 (PDT)
Received: by 10.204.2.196 with SMTP id 4mr1784370bkk.121.1269889630148;
        Mon, 29 Mar 2010 12:07:10 -0700 (PDT)
Return-Path: <3WfqwSwkJCFAE4w0AA5w9y4s03.u649CtG-xx0y66y3wy96C7A.u64@groups.bounces.google.com>
Received: from mail-yw0-f159.google.com (mail-yw0-f159.google.com [209.85.211.159])
        by mx.google.com with ESMTP id a10si14383497bkc.66.2010.03.29.12.07.08;
        Mon, 29 Mar 2010 12:07:09 -0700 (PDT)
Received-SPF: pass (google.com: domain of 3WfqwSwkJCFAE4w0AA5w9y4s03.u649CtG-xx0y66y3wy96C7A.u64@groups.bounces.google.com designates 209.85.211.159 as permitted sender) client-ip=209.85.211.159;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 3WfqwSwkJCFAE4w0AA5w9y4s03.u649CtG-xx0y66y3wy96C7A.u64@groups.bounces.google.com designates 209.85.211.159 as permitted sender) smtp.mail=3WfqwSwkJCFAE4w0AA5w9y4s03.u649CtG-xx0y66y3wy96C7A.u64@groups.bounces.google.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by ywh31 with SMTP id 31sf5455466ywh.13
        for <headius@headius.com>; Mon, 29 Mar 2010 12:07:06 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:received:received
         :received:received-spf:received:mime-version:received:in-reply-to
         :references:date:received:message-id:subject:from:to
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :x-thread-url:x-message-url:sender:list-subscribe:list-unsubscribe
         :content-type:content-transfer-encoding;
        bh=c1pAHQ9Wd9JgRSy3SJyDbqp+XLWYWKFwjsG6cLT+J64=;
        b=YnVxixyKhrXUlR5eYtKVktKzOkzFMyMN4fBHmdBqD72ach76LVC+ehzdi9M6yuiYHf
         jfgkVsA3sp7I+s9mDstDWgSpIfDmcvGYzONJTL96NhyRRjpc9alfB6uQGg/9sdwwY7Rm
         Ui96ZptzrrTEHRfjKF/cZTMhDFiDq7ZabS7gc=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:in-reply-to:references:date
         :message-id:subject:from:to:x-original-authentication-results
         :x-original-sender:reply-to:precedence:mailing-list:list-id
         :list-post:list-help:list-archive:x-thread-url:x-message-url:sender
         :list-subscribe:list-unsubscribe:content-type
         :content-transfer-encoding;
        b=oAVd0motsQszJJ4fIJlR3bVJObiHMbacZF3VLi2rSMIzOsYcDIhu5UzWc1pehgwOGR
         yp1HbBTCeCRUYKUksbS50txEgE6gPokZbT4SnuhSVWVtDS9NqvWJqUyMZGH9zU51SRmN
         GzEdy2ijCWXVwQFa3lvwJJR0d9l/4YCrYEUb0=
Received: by 10.150.242.4 with SMTP id p4mr277756ybh.3.1269889625529;
        Mon, 29 Mar 2010 12:07:05 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.231.122.100 with SMTP id k36ls521852ibr.0.p; Mon, 29 Mar 2010 
	12:07:04 -0700 (PDT)
Received: by 10.231.190.16 with SMTP id dg16mr346817ibb.5.1269889624329;
        Mon, 29 Mar 2010 12:07:04 -0700 (PDT)
Received: by 10.231.190.16 with SMTP id dg16mr346816ibb.5.1269889624307;
        Mon, 29 Mar 2010 12:07:04 -0700 (PDT)
Return-Path: <wmeissner@gmail.com>
Received: from mail-pw0-f46.google.com (mail-pw0-f46.google.com [209.85.160.46])
        by gmr-mx.google.com with ESMTP id 24si572705iwn.5.2010.03.29.12.07.03;
        Mon, 29 Mar 2010 12:07:03 -0700 (PDT)
Received-SPF: pass (google.com: domain of wmeissner@gmail.com designates 209.85.160.46 as permitted sender) client-ip=209.85.160.46;
Received: by mail-pw0-f46.google.com with SMTP id 5so6678917pwi.5
        for <ruby-ffi@googlegroups.com>; Mon, 29 Mar 2010 12:07:03 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.140.125.16 with HTTP; Mon, 29 Mar 2010 12:07:02 -0700 (PDT)
In-Reply-To: <1a2dd4711003291023i3fcd1b0bl847da833aeb6f3ae@mail.gmail.com>
References: <1a2dd4711003291023i3fcd1b0bl847da833aeb6f3ae@mail.gmail.com>
Date: Tue, 30 Mar 2010 05:07:02 +1000
Received: by 10.140.251.5 with SMTP id y5mr1594543rvh.228.1269889622760; Mon, 
	29 Mar 2010 12:07:02 -0700 (PDT)
Message-ID: <4ccee321003291207y6c75c4d3x26eb981eceda8552@mail.gmail.com>
Subject: Re: [ruby-ffi] Is there any way we can use string type as return 
	parameter?
From: Wayne Meissner <wmeissner@gmail.com>
To: ruby-ffi@googlegroups.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of wmeissner@gmail.com designates 209.85.160.46 as permitted sender) 
	smtp.mail=wmeissner@gmail.com; dkim=pass (test mode) header.i=@gmail.com
X-Original-Sender: wmeissner@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/54f8558cb8661a3b
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/917217293e199093
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

2010/3/30 Jes=FAs Garc=EDa S=E1ez <blaxter@gmail.com>:
> Hi,
>
> when is it posible to define a "string" type safely? I think, the only
> situation is for const char * input parameter. Because otherwise we are
> gonna have memory leaks.
>
> For example, for a function like:
>
> char *foo();
>
> if we attach it with:
>
> attach_function :foo, :foo, [], :string
>
> We are gonna have a nice memory leak because nobody is gonna release that
> string. When we call "foo" method in ruby, we get a String object, we can=
not
> (or I don't know how) get the actual char pointer to release it (either f=
rom
> ruby or with another attached function where we pass the pointer and that
> function calls free, delete o whatever is necessary).

The only way to do this currently is to declare the return type as
:pointer, read the string yourself, and explicitly free the pointer
using the appropriate native method.

To unsubscribe from this group, send email to ruby-ffi+unsubscribegooglegro=
ups.com or reply to this email with the words "REMOVE ME" as the subject.
