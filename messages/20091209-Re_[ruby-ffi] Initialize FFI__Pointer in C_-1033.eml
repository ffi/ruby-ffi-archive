Delivered-To: headius@headius.com
Received: by 10.114.184.4 with SMTP id h4cs701393waf;
        Tue, 8 Dec 2009 23:04:35 -0800 (PST)
Received: by 10.114.86.2 with SMTP id j2mr17657254wab.159.1260342274920;
        Tue, 08 Dec 2009 23:04:34 -0800 (PST)
Return-Path: <3AUwfSwkJCLctjbfppkbodjXfi.ZljorYv-ccfdlldibdolrmp.Zlj@listserv.bounces.google.com>
Received: from mail-pz0-f148.google.com (mail-pz0-f148.google.com [209.85.222.148])
        by mx.google.com with ESMTP id 6si39190789pzk.35.2009.12.08.23.04.34;
        Tue, 08 Dec 2009 23:04:34 -0800 (PST)
Received-SPF: pass (google.com: domain of 3AUwfSwkJCLctjbfppkbodjXfi.ZljorYv-ccfdlldibdolrmp.Zlj@listserv.bounces.google.com designates 209.85.222.148 as permitted sender) client-ip=209.85.222.148;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 3AUwfSwkJCLctjbfppkbodjXfi.ZljorYv-ccfdlldibdolrmp.Zlj@listserv.bounces.google.com designates 209.85.222.148 as permitted sender) smtp.mail=3AUwfSwkJCLctjbfppkbodjXfi.ZljorYv-ccfdlldibdolrmp.Zlj@listserv.bounces.google.com
Received: by pzk12 with SMTP id 12sf335218pzk.13
        for <headius@headius.com>; Tue, 08 Dec 2009 23:04:34 -0800 (PST)
Received: by 10.140.83.9 with SMTP id g9mr54311rvb.14.1260342273766;
        Tue, 08 Dec 2009 23:04:33 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.140.55.16 with SMTP id d16ls32625rva.0.p; Tue, 08 Dec 2009 
	23:04:33 -0800 (PST)
Received: by 10.141.124.15 with SMTP id b15mr162564rvn.9.1260342272840;
        Tue, 08 Dec 2009 23:04:32 -0800 (PST)
Received: by 10.141.124.15 with SMTP id b15mr162558rvn.9.1260342271107;
        Tue, 08 Dec 2009 23:04:31 -0800 (PST)
Return-Path: <wmeissner@gmail.com>
Received: from mail-pw0-f46.google.com (mail-pw0-f46.google.com [209.85.160.46])
        by gmr-mx.google.com with ESMTP id 38si98362pxi.3.2009.12.08.23.04.30;
        Tue, 08 Dec 2009 23:04:30 -0800 (PST)
Received-SPF: pass (google.com: domain of wmeissner@gmail.com designates 209.85.160.46 as permitted sender) client-ip=209.85.160.46;
Received: by pwj16 with SMTP id 16so1637868pwj.5
        for <ruby-ffi@googlegroups.com>; Tue, 08 Dec 2009 23:04:30 -0800 (PST)
MIME-Version: 1.0
Received: by 10.141.14.6 with SMTP id r6mr70097rvi.214.1260342270020; Tue, 08 
	Dec 2009 23:04:30 -0800 (PST)
In-Reply-To: <4c3f8117-e7a8-4919-96ea-57d4541634dd@n35g2000yqm.googlegroups.com>
References: <4c3f8117-e7a8-4919-96ea-57d4541634dd@n35g2000yqm.googlegroups.com>
Date: Wed, 9 Dec 2009 17:04:29 +1000
Message-ID: <4ccee320912082304s1f889c1di41cd612f29a1d39c@mail.gmail.com>
Subject: Re: [ruby-ffi] Initialize FFI::Pointer in C?
From: Wayne Meissner <wmeissner@gmail.com>
To: ruby-ffi@googlegroups.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of wmeissner@gmail.com designates 209.85.160.46 as permitted sender) 
	smtp.mail=wmeissner@gmail.com; dkim=pass (test mode) header.i=@gmail.com
X-Original-Sender: wmeissner@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/e9af8945b7d9ce71
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/68e23f0cbd7d8afd
Sender: ruby-ffi@googlegroups.com
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Really, don't use the C api - it will break at some point, since it is
not intended in any way to be a public api.

Use a FFI callback to call from C to ruby.

http://wiki.github.com/ffi/ffi/examples has a callback example, as
does http://wiki.github.com/ffi/ffi/windows-examples



2009/12/9 Simon Chiang <simon.a.chiang@gmail.com>:
> I'm building a callback to ruby from an extension and I would like to
> pass back pointers much like an attached function that returns
> a :pointer. =A0Basically something like this:
>
> =A0int RubyCallback(void *thing)
> =A0{
> =A0 =A0VALUE ffi_pointer =3D rbffi_Pointer_NewInstance(thing);
> =A0 =A0VALUE ruby_module =3D rb_const_get(rb_cObject, rb_intern
> ("SomeModule"));
> =A0 =A0VALUE ruby_result =3D rb_funcall(ruby_module, rb_intern("callback"=
),
> 1, ffi_pointer);
>
> =A0 =A0long result =3D FIX2INT(ruby_result);
> =A0 =A0return(result);
> =A0}
>
> And then in ruby:
>
> =A0module SomeModule
> =A0 =A0module_function
>
> =A0 =A0def callback(ptr)
> =A0 =A0 =A0 ptr.inspect =A0 =A0 =A0 =A0 # =3D> shows this to be an FFI::P=
ointer
> =A0 =A0end
> =A0end
>
> A method like this works on OS X with ffi-0.5.0 (pre snow-lepoard,
> I'll get the version if necessary) but results in a segfault on snow
> leopard 10.6.2. =A0The segfault is triggered upon inspect. =A0I don't kno=
w
> how FFI works... I really only got this working by taking a guess at
> what rbffi_Pointer_NewInstance does. =A0Any ideas what's going wrong on
> 10.6.2 and/or how I can do this better?
>
