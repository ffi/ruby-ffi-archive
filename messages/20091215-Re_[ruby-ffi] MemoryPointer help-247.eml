Delivered-To: headius@headius.com
Received: by 10.100.134.8 with SMTP id h8cs179826and;
        Tue, 15 Dec 2009 08:05:44 -0800 (PST)
Received: by 10.101.136.12 with SMTP id o12mr10057235ann.26.1260893144541;
        Tue, 15 Dec 2009 08:05:44 -0800 (PST)
Return-Path: <317MnSwcJCP0xmf1s97lrfnq.htrwzg3-kknlttlqjlwtzux.htr@listserv.bounces.google.com>
Received: from mail-yw0-f144.google.com (mail-yw0-f144.google.com [209.85.211.144])
        by mx.google.com with ESMTP id 7si23214226yxe.95.2009.12.15.08.05.44;
        Tue, 15 Dec 2009 08:05:44 -0800 (PST)
Received-SPF: pass (google.com: domain of 317MnSwcJCP0xmf1s97lrfnq.htrwzg3-kknlttlqjlwtzux.htr@listserv.bounces.google.com designates 209.85.211.144 as permitted sender) client-ip=209.85.211.144;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 317MnSwcJCP0xmf1s97lrfnq.htrwzg3-kknlttlqjlwtzux.htr@listserv.bounces.google.com designates 209.85.211.144 as permitted sender) smtp.mail=317MnSwcJCP0xmf1s97lrfnq.htrwzg3-kknlttlqjlwtzux.htr@listserv.bounces.google.com
Received: by ywh8 with SMTP id 8sf23866ywh.3
        for <headius@headius.com>; Tue, 15 Dec 2009 08:05:44 -0800 (PST)
Received: by 10.91.215.18 with SMTP id s18mr41428agq.31.1260893143497;
        Tue, 15 Dec 2009 08:05:43 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.87.58.29 with SMTP id l29ls832648fgk.3.p; Tue, 15 Dec 2009 
	08:05:41 -0800 (PST)
Received: by 10.86.211.35 with SMTP id j35mr119630fgg.12.1260893141314;
        Tue, 15 Dec 2009 08:05:41 -0800 (PST)
Received: by 10.86.211.35 with SMTP id j35mr119629fgg.12.1260893141285;
        Tue, 15 Dec 2009 08:05:41 -0800 (PST)
Return-Path: <shawn42@gmail.com>
Received: from mail-bw0-f224.google.com (mail-bw0-f224.google.com [209.85.218.224])
        by gmr-mx.google.com with ESMTP id 11si386593fxm.2.2009.12.15.08.05.40;
        Tue, 15 Dec 2009 08:05:40 -0800 (PST)
Received-SPF: pass (google.com: domain of shawn42@gmail.com designates 209.85.218.224 as permitted sender) client-ip=209.85.218.224;
Received: by bwz24 with SMTP id 24so13876bwz.30
        for <ruby-ffi@googlegroups.com>; Tue, 15 Dec 2009 08:05:40 -0800 (PST)
MIME-Version: 1.0
Received: by 10.204.24.15 with SMTP id t15mr1186035bkb.113.1260893139956; Tue, 
	15 Dec 2009 08:05:39 -0800 (PST)
In-Reply-To: <bf2f536c0912141247r4df3cf1fu80d5bb98282c7814@mail.gmail.com>
References: <c410d2f20912141042g2f255903k8678b4da6ed4f06d@mail.gmail.com> 
	<bf2f536c0912141247r4df3cf1fu80d5bb98282c7814@mail.gmail.com>
From: Shawn Anderson <shawn42@gmail.com>
Date: Tue, 15 Dec 2009 11:05:19 -0500
Message-ID: <c410d2f20912150805t62a758c3t9ccf1af3b9ba76df@mail.gmail.com>
Subject: Re: [ruby-ffi] MemoryPointer help
To: ruby-ffi@googlegroups.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of shawn42@gmail.com designates 209.85.218.224 as permitted sender) 
	smtp.mail=shawn42@gmail.com; dkim=pass (test mode) header.i=@gmail.com
X-Original-Sender: shawn42@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/56d08bb8d7b55f4d
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/438177d54c443695
Sender: ruby-ffi@googlegroups.com
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
Content-Type: multipart/alternative; boundary=00032555bc9ab4f681047ac68f7d

--00032555bc9ab4f681047ac68f7d
Content-Type: text/plain; charset=ISO-8859-1

Ok, thanks.  I just wanted to make sure I was using it correctly.

/Shawn

On Mon, Dec 14, 2009 at 3:47 PM, John Croisant <jacius@gmail.com> wrote:

> On Mon, Dec 14, 2009 at 12:42 PM, Shawn Anderson <shawn42@gmail.com>
> wrote:
> > I have a struct that has a void* data, I use MemoryPointer to alloc some
> mem
> > and assign:
> > mem = FFI::MemoryPointer.new(:long)
> > @struct.data = mem
> >
> > Struct says around in my app, but I was seeing strange GC behavior.  Is
> > assigning the mem pointer to the struct good enough to keep it around?
> > I was seeing my struct.data being corrupted over time.
> >
> > adding
> > @mem = mem
> >
> > fixed the problem.  Am I using MemoryPointer correctly?
>
> @struct.data = mem doesn't actually store the MemoryPointer instance
> in the struct, it just sets @struct.data to the pointer address. That
> means the MemoryPointer instance is being garbage collected after it
> goes out of scope, and the memory is freed when the MemoryPointer is
> garbage collected.
>
> So yes, you should do something like @mem = mem to keep the
> MemoryPointer alive until it is supposed be freed. :)
>
> - John
>

--00032555bc9ab4f681047ac68f7d
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Ok, thanks.=A0 I just wanted to make sure I was using it correctly.<br><br>=
/Shawn<br><br><div class=3D"gmail_quote">On Mon, Dec 14, 2009 at 3:47 PM, J=
ohn Croisant <span dir=3D"ltr">&lt;<a href=3D"mailto:jacius@gmail.com">jaci=
us@gmail.com</a>&gt;</span> wrote:<br>

<blockquote class=3D"gmail_quote" style=3D"border-left: 1px solid rgb(204, =
204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;"><div><div></div><=
div class=3D"h5">On Mon, Dec 14, 2009 at 12:42 PM, Shawn Anderson &lt;<a hr=
ef=3D"mailto:shawn42@gmail.com">shawn42@gmail.com</a>&gt; wrote:<br>


&gt; I have a struct that has a void* data, I use MemoryPointer to alloc so=
me mem<br>
&gt; and assign:<br>
&gt; mem =3D FFI::MemoryPointer.new(:long)<br>
&gt; @struct.data =3D mem<br>
&gt;<br>
&gt; Struct says around in my app, but I was seeing strange GC behavior.=A0=
 Is<br>
&gt; assigning the mem pointer to the struct good enough to keep it around?=
<br>
&gt; I was seeing my struct.data being corrupted over time.<br>
&gt;<br>
&gt; adding<br>
&gt; @mem =3D mem<br>
&gt;<br>
&gt; fixed the problem.=A0 Am I using MemoryPointer correctly?<br>
<br>
</div></div>@struct.data =3D mem doesn&#39;t actually store the MemoryPoint=
er instance<br>
in the struct, it just sets @struct.data to the pointer address. That<br>
means the MemoryPointer instance is being garbage collected after it<br>
goes out of scope, and the memory is freed when the MemoryPointer is<br>
garbage collected.<br>
<br>
So yes, you should do something like @mem =3D mem to keep the<br>
MemoryPointer alive until it is supposed be freed. :)<br>
<font color=3D"#888888"><br>
- John<br>
</font></blockquote></div><br>

--00032555bc9ab4f681047ac68f7d--
