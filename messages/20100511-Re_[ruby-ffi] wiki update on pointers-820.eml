Delivered-To: headius@headius.com
Received: by 10.229.186.206 with SMTP id ct14cs28429qcb;
        Tue, 11 May 2010 17:18:32 -0700 (PDT)
Received: by 10.140.251.11 with SMTP id y11mr4374491rvh.279.1273623511606;
        Tue, 11 May 2010 17:18:31 -0700 (PDT)
Return-Path: <ruby-ffi+bncCJ2jt8vbBhDU56ffBBoE1ffRnw@googlegroups.com>
Received: from mail-pw0-f62.google.com (mail-pw0-f62.google.com [209.85.160.62])
        by mx.google.com with ESMTP id r27si14680690rvq.1.2010.05.11.17.18.30;
        Tue, 11 May 2010 17:18:30 -0700 (PDT)
Received-SPF: pass (google.com: domain of ruby-ffi+bncCJ2jt8vbBhDU56ffBBoE1ffRnw@googlegroups.com designates 209.85.160.62 as permitted sender) client-ip=209.85.160.62;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncCJ2jt8vbBhDU56ffBBoE1ffRnw@googlegroups.com designates 209.85.160.62 as permitted sender) smtp.mail=ruby-ffi+bncCJ2jt8vbBhDU56ffBBoE1ffRnw@googlegroups.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by pwi10 with SMTP id 10sf2039338pwi.7
        for <headius@headius.com>; Tue, 11 May 2010 17:18:30 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:received:received
         :received:received-spf:mime-version:received
         :x-proofpoint-spam-details:x-proofpoint-virus-version:subject:from
         :in-reply-to:date:message-id:references:to:x-mailer
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :sender:list-subscribe:list-unsubscribe:content-transfer-encoding
         :content-type;
        bh=neONiJuzIrPoLtK4OeK29xIk+hUVfuTUlKY/ZFatfd8=;
        b=j0XOGR+P0o9rEh5fQ97X27wIsbP/PsvOyzC3W8vGsKa1L5YFmXocIPrd6xWxbN+Vf7
         iQGF5UlI/twcYG4Xbx88pLq+CrrLuv6ptECjakQIN27A+b2eqUYDv3SrbGVh7PenIW/2
         XyiVAycX/RYXpWB+MqrfFg1x5/l4/WbfqSJ9k=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:x-proofpoint-spam-details
         :x-proofpoint-virus-version:subject:from:in-reply-to:date:message-id
         :references:to:x-mailer:x-original-authentication-results
         :x-original-sender:reply-to:precedence:mailing-list:list-id
         :list-post:list-help:list-archive:sender:list-subscribe
         :list-unsubscribe:content-transfer-encoding:content-type;
        b=ZsdTSTO3+YCHmUFxKYgomcRcTr33sFgGQTHFHGZeryuQEiv08fkvo/dbO9TnxjIDkx
         aRwiRNROi6Vugyc2qENS9+bScP9JI6/ZCGuD5DZtbGuhxTkGE97PV36kCfJ/RDoWMO1I
         63Aczf32Fnj2nd8CHV79Iui39B6zWOzsIQ3iE=
Received: by 10.115.81.10 with SMTP id i10mr897367wal.28.1273623508175;
        Tue, 11 May 2010 17:18:28 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.115.135.31 with SMTP id m31ls25334221wan.1.p; Tue, 11 May 2010 
	17:18:27 -0700 (PDT)
Received: by 10.114.242.13 with SMTP id p13mr1583958wah.7.1273623507345;
        Tue, 11 May 2010 17:18:27 -0700 (PDT)
Received: by 10.114.242.13 with SMTP id p13mr1583957wah.7.1273623507297;
        Tue, 11 May 2010 17:18:27 -0700 (PDT)
Return-Path: <cremes.devlist@mac.com>
Received: from asmtpout029.mac.com (asmtpout029.mac.com [17.148.16.104])
        by gmr-mx.google.com with ESMTP id 25si1142093pzk.4.2010.05.11.17.18.27;
        Tue, 11 May 2010 17:18:27 -0700 (PDT)
Received-SPF: pass (google.com: domain of cremes.devlist@mac.com designates 17.148.16.104 as permitted sender) client-ip=17.148.16.104;
MIME-version: 1.0
Received: from adsl-75-21-66-250.dsl.chcgil.sbcglobal.net
 (adsl-75-21-66-250.dsl.chcgil.sbcglobal.net [75.21.66.250])
 by asmtp029.mac.com
 (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec 16 2008; 32bit))
 with ESMTPSA id <0L2A004PL66NGZ80@asmtp029.mac.com> for
 ruby-ffi@googlegroups.com; Tue, 11 May 2010 17:18:25 -0700 (PDT)
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0
 ipscore=0 phishscore=0 bulkscore=0 adultscore=0 classifier=spam adjust=0
 reason=mlx engine=6.0.2-1004200000 definitions=main-1005110162
X-Proofpoint-Virus-Version: vendor=fsecure
 engine=1.12.8161:2.4.5,1.2.40,4.0.166
 definitions=2010-05-11_06:2010-02-06,2010-05-11,2010-05-11 signatures=0
Subject: Re: [ruby-ffi] wiki update on pointers
From: Chuck Remes <cremes.devlist@mac.com>
In-reply-to: <AANLkTimj6wdQE7XlMqjyHnBp-Gk1wscD7oMfrO4jIgFK@mail.gmail.com>
Date: Tue, 11 May 2010 19:18:22 -0500
Message-id: <F46E80B2-8931-40A3-AC77-05B989215D3A@mac.com>
References: <383FE988-D919-4629-AD7C-E115AB5315CB@mac.com>
 <AANLkTimXt6BzR1H-xcRkr31EMs3YB2MldzKsmXgo46FJ@mail.gmail.com>
 <224206B2-6123-47C2-B82B-3EA6F0C7BCB6@mac.com>
 <AANLkTimj6wdQE7XlMqjyHnBp-Gk1wscD7oMfrO4jIgFK@mail.gmail.com>
To: ruby-ffi@googlegroups.com
X-Mailer: Apple Mail (2.1078)
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of cremes.devlist@mac.com designates 17.148.16.104 as permitted 
	sender) smtp.mail=cremes.devlist@mac.com
X-Original-Sender: cremes.devlist@mac.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-transfer-encoding: 7BIT
Content-type: text/plain; charset=us-ascii

Way ahead of you, Wayne. You may recognize some of the text on that page...

BTW, I would like to add some rdoc to the classes but I don't know how to do that for methods that are part of the C extension and have no ruby equivalent. I'll look into the rdoc syntax and see if there's a way I can achieve that. Any problem with that?

cr

On May 11, 2010, at 6:09 PM, Wayne Meissner wrote:

> Well, now that you are wise in the way of pointers, please go ahead
> and fix the damn page :-)
> 
> If something on the wiki doesn't look right, fix it - its a wiki after
> all.  (and if your changes aren't right, in theory someone else will
> rip your stuff out ... ad infinitum).
> 
> 
> 
> On 12 May 2010 08:59, Chuck Remes <cremes.devlist@mac.com> wrote:
>> I'll make the modifications for #1 and #2.
>> 
>> The text at the top (#3) was put there by someone else. I just added to the page. It didn't look right to me, but it's been there for a while so I didn't touch it. :)
>> 
>> cr
>> 
>> On May 11, 2010, at 5:33 PM, Wayne Meissner wrote:
>> 
>>> It looks pretty good.
>>> 
>>> A couple of nits:
>>> 
>>> 1) The LibC module can just use:
>>>   ffi_lib FFI::Library::LIBC
>>> 
>>> ffi knows that means "whatever the libc on this system is supposed to
>>> be", since its a pretty common library people want to map in, and the
>>> name differs across platforms (e.g. on linux, its libc.so.6, macos is
>>> libc.dylib, windows is msvcrt.dll, aix is something weird, etc.
>>> 
>>> 2) The first arg to MemoryPointer.new can in fact be either a symbol,
>>> or anything that responds to #size.
>>> e.g.
>>>  class S < FFI::Struct
>>>    layout :i, :int
>>>  end
>>>  FFI::MemoryPointer.new(S, 1, false)  # Will allocate space for one
>>> instance of S, without clearing the memory first
>>> 
>>> 3) The bit at the top about copying pointers is ... confusing.  A
>>> pointer is merely a Fixnum that holds a native memory address, so
>>> there is no need to do anything special to "copy" a pointer - just
>>> assign it to a like you would any other Fixnum.  Think of "Pointer" as
>>> "fixnum with methods to read/write the native memory at the address".
>>> 
>>> The example:
>>> 
>>> b = MemoryPointer.new(:pointer).write_pointer(some_pointer.read_pointer)
>>> 
>>> Doesn't do what you think.  It reads a pointer from the memory
>>> pointed-to by some_pointer, allocates a new chunk of memory, and
>>> writes that pointer value into that memory - it doesn't copy the value
>>> of some_pointer to a new pointer.
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> On 12 May 2010 02:02, Chuck Remes <cremes.devlist@mac.com> wrote:
>>>> I just wrote an update to the wiki page on pointers at http://wiki.github.com/ffi/ffi/pointers
>>>> 
>>>> I'd appreciate it if someone more knowledgeable would check it over (the bottom section under the sub-heading) and verify that what I wrote is correct. It seems to be working for me but I've been wrong before! :)
>>>> 
>>>> cr
>>>> 
>>>> 
>> 
>> 

