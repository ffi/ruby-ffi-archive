Delivered-To: headius@headius.com
Received: by 10.204.70.83 with SMTP id c19cs230657bkj;
        Tue, 9 Nov 2010 17:56:23 -0800 (PST)
Received: by 10.229.232.205 with SMTP id jv13mr7051479qcb.68.1289354182278;
        Tue, 09 Nov 2010 17:56:22 -0800 (PST)
Return-Path: <ruby-ffi+bncCPS3mqGKCBDD9-fmBBoE66qFOQ@googlegroups.com>
Received: from mail-qw0-f62.google.com (mail-qw0-f62.google.com [209.85.216.62])
        by mx.google.com with ESMTP id f37si138266qcs.207.2010.11.09.17.56.20;
        Tue, 09 Nov 2010 17:56:21 -0800 (PST)
Received-SPF: pass (google.com: domain of ruby-ffi+bncCPS3mqGKCBDD9-fmBBoE66qFOQ@googlegroups.com designates 209.85.216.62 as permitted sender) client-ip=209.85.216.62;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncCPS3mqGKCBDD9-fmBBoE66qFOQ@googlegroups.com designates 209.85.216.62 as permitted sender) smtp.mail=ruby-ffi+bncCPS3mqGKCBDD9-fmBBoE66qFOQ@googlegroups.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by qwj9 with SMTP id 9sf169018qwj.7
        for <headius@headius.com>; Tue, 09 Nov 2010 17:56:20 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:received:received
         :received:received-spf:received:mime-version:received:received
         :in-reply-to:references:date:message-id:subject:from:to
         :x-original-sender:x-original-authentication-results:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :sender:list-subscribe:list-unsubscribe:content-type
         :content-transfer-encoding;
        bh=y1jy0fwYv8aqykkabyWUYJS5cnEqwzdIRSTfpaAuCHU=;
        b=dn/21KzxbENa7DfQRhXS1Zu9YYp0U1MtaH+FK4XWLADQYQDHjCFNOPKJ0iQAaRlEA2
         9IEKqo557eLPH2ySBWy5KFFVVYFwpwJ/7ocdyhLmvtKoaS+QqNzCvoLGumXLVn+bJRTG
         yPlJ/YmXhgltq8NaLgjDund8ZcHdaKVIojpPc=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:in-reply-to:references:date
         :message-id:subject:from:to:x-original-sender
         :x-original-authentication-results:reply-to:precedence:mailing-list
         :list-id:list-post:list-help:list-archive:sender:list-subscribe
         :list-unsubscribe:content-type:content-transfer-encoding;
        b=QdSHNsUwDDSWpWxmEowe+E5dFY2K9rqPmE5uExrX3aJOxBJ13qjfnI82ZI4MsmfU0N
         avOCr/4negtb7CaQ9AzEtCdakY3ap7yStJ7rMtnuw/qwxo7H8J7rmajUOX0AEt0mHlj9
         k6vzo7+2AmZzc6mKXZGb0yY9nf1X+btveYGSk=
Received: by 10.229.140.196 with SMTP id j4mr651651qcu.32.1289354179095;
        Tue, 09 Nov 2010 17:56:19 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.229.69.77 with SMTP id y13ls73038qci.3.p; Tue, 09 Nov 2010
 17:56:18 -0800 (PST)
Received: by 10.229.246.137 with SMTP id ly9mr956952qcb.17.1289354178615;
        Tue, 09 Nov 2010 17:56:18 -0800 (PST)
Received: by 10.229.246.137 with SMTP id ly9mr956951qcb.17.1289354178589;
        Tue, 09 Nov 2010 17:56:18 -0800 (PST)
Received: from mail-qy0-f171.google.com (mail-qy0-f171.google.com [209.85.216.171])
        by gmr-mx.google.com with ESMTP id s17si52060qcq.5.2010.11.09.17.56.17;
        Tue, 09 Nov 2010 17:56:17 -0800 (PST)
Received-SPF: pass (google.com: domain of wmeissner@gmail.com designates 209.85.216.171 as permitted sender) client-ip=209.85.216.171;
Received: by mail-qy0-f171.google.com with SMTP id 38so2317823qyk.9
        for <ruby-ffi@googlegroups.com>; Tue, 09 Nov 2010 17:56:17 -0800 (PST)
MIME-Version: 1.0
Received: by 10.229.233.142 with SMTP id jy14mr2774951qcb.2.1289354177275;
 Tue, 09 Nov 2010 17:56:17 -0800 (PST)
Received: by 10.229.251.143 with HTTP; Tue, 9 Nov 2010 17:56:17 -0800 (PST)
In-Reply-To: <932132f1-bd9d-4f6b-b449-46132b0c6a4c@k14g2000pre.googlegroups.com>
References: <932132f1-bd9d-4f6b-b449-46132b0c6a4c@k14g2000pre.googlegroups.com>
Date: Wed, 10 Nov 2010 11:56:17 +1000
Message-ID: <AANLkTimOqwh_sjX2eis=e_=sekvu3ncu8mL3LKs9E8iN@mail.gmail.com>
Subject: Re: [ruby-ffi] Passing a String Pointer to Callback Procs -- How to append?
From: Wayne Meissner <wmeissner@gmail.com>
To: ruby-ffi@googlegroups.com
X-Original-Sender: wmeissner@gmail.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com:
 domain of wmeissner@gmail.com designates 209.85.216.171 as permitted sender)
 smtp.mail=wmeissner@gmail.com; dkim=pass (test mode) header.i=@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, <mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, <mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>,
 <mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

You can't pass ruby objects through C callbacks with FFI, so any
variables you want to access from the callback have to be visible to
the Proc when you create it.

You seem to be mostly doing it correct with your data_handler() method
- i.e. the _string parameter to data_handler() will be visible inside
the proc callback, and you can just append the data to it.  The
handler parameter to the callback will not be used (and is most likely
nil anyway).

I would change the first parameter (stream) of the curl handler to be
of type pointer though, and get the data out like so:

   _string << stream.get_string(0, size)

I'm not sure if curl guarantees that the buffer is NUL terminated, but
I suspect not, since it is binary data, so you only want to copy out
as many bytes as curl indicates are ready (the size param).

One _VERY_ important thing to remember, always keep a reference to the
proc returned by data_handler somewhere - e.g. as an @variable in each
Request instance.  FFI dynamically generates native code for the
callback, and you need to keep a strong reference to it to avoid it
being prematurely collected, and crashing the VM.  Stashing the proc
somewhere for the lifetime of the Request instance should suffice.


On 9 November 2010 10:30, Scott Gonyea <gonyea@gmail.com> wrote:
> I'm having a really painful time figuring this out. =A0I jumped onto
> what NoKarma had already begun, with his curl-ffi library, and started
> running with it. =A0I'm trying to emulate the ruby extension layers used
> in some different Curl gems (Streamly and Patron, atm).
>
> Curl wants you to pass a method reference, which it will then
> callback. =A0You can see examples used in Streamly and Patron:
>
> Streamly, lines 29-83:
> https://github.com/aitrus/streamly/blob/master/ext/streamly.c#L29
>
> Patron, lines 59-75 (Much simpler):
> https://github.com/aitrus/patron/blob/master/ext/patron/session_ext.c#L59
>
> Basically, they're allocating a buffer and providing a callback + that
> buffer, which is sent to the callback. I've added this callback to
> CurlFFI and I have the Proc working, etc... But I cannot seem to get
> it to append to the string.
>
> Callback Additions to CurlFFI:
> https://github.com/aitrus/curl_ffi/blob/master/lib/bindings.rb#L923
> https://github.com/aitrus/curl_ffi/blob/master/lib/bindings.rb#L926
>
> I'll delete 926, as it's not necessary (I think).
>
> Procs that get called:
> https://github.com/aitrus/streamly/blob/master/lib/streamly/request.rb#L1=
1
>
> I suppose the last resort can be to call C libraries, allocating /
> freeing a string. =A0But that makes me think I'm doing it wrong. =A0I
> can't imagine that I'm doing anything overly interesting with my code.
>
> Scott
>
