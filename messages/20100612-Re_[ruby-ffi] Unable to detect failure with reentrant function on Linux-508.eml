Delivered-To: headius@headius.com
Received: by 10.229.228.137 with SMTP id je9cs25589qcb;
        Sat, 12 Jun 2010 20:24:47 -0700 (PDT)
Received: by 10.220.123.9 with SMTP id n9mr1428932vcr.129.1276399486210;
        Sat, 12 Jun 2010 20:24:46 -0700 (PDT)
Return-Path: <ruby-ffi+bncCPS3mqGKCBD8ntHgBBoEXRJM-w@googlegroups.com>
Received: from mail-vw0-f62.google.com (mail-vw0-f62.google.com [209.85.212.62])
        by mx.google.com with ESMTP id m14si1528716vcs.199.2010.06.12.20.24.45;
        Sat, 12 Jun 2010 20:24:45 -0700 (PDT)
Received-SPF: pass (google.com: domain of ruby-ffi+bncCPS3mqGKCBD8ntHgBBoEXRJM-w@googlegroups.com designates 209.85.212.62 as permitted sender) client-ip=209.85.212.62;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncCPS3mqGKCBD8ntHgBBoEXRJM-w@googlegroups.com designates 209.85.212.62 as permitted sender) smtp.mail=ruby-ffi+bncCPS3mqGKCBD8ntHgBBoEXRJM-w@googlegroups.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by vws12 with SMTP id 12sf771562vws.7
        for <headius@headius.com>; Sat, 12 Jun 2010 20:24:44 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:received:received
         :received:received-spf:received:mime-version:received:received
         :in-reply-to:references:date:message-id:subject:from:to
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :sender:list-subscribe:list-unsubscribe:content-type
         :content-transfer-encoding;
        bh=QyJsnIt2gFXMQoUi+Hsx+h+sHjig00w0dzMzbbclJo8=;
        b=38gX+IvI4U/GHid0D1GwuluolXAfJC6TrCIqIevgLgJQGW8t0gVHD3JfYZEdhDiHcR
         avQRFEgeI1isFjVlRh33DlYkwO9oybPAqiq/5B5Ld7YfpxkrIBWjhM5mENSn+UYuROhd
         ptAXnk652GBmOaPbrVsxMHm+JEAWFEOWR7sUc=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:in-reply-to:references:date
         :message-id:subject:from:to:x-original-authentication-results
         :x-original-sender:reply-to:precedence:mailing-list:list-id
         :list-post:list-help:list-archive:sender:list-subscribe
         :list-unsubscribe:content-type:content-transfer-encoding;
        b=Eh+hd/9E4W2UrFNaZKJA/LZl3k22gm7pz0Do3JFUpRSK3Ur/+FwbcmVrf6bDGIpAhI
         MG5MQj3LEhNQWx5rAui71XEIysXIaX2dZdgZZz+1vCrpW8+91Ag6Lzc/ARsdaEdIveqX
         fKRzpgcNaEkP6uIOM61RhfrG44zY8tgVDo2pY=
Received: by 10.220.125.16 with SMTP id w16mr109591vcr.36.1276399484731;
        Sat, 12 Jun 2010 20:24:44 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.220.80.27 with SMTP id r27ls383592vck.0.p; Sat, 12 Jun 2010 
	20:24:44 -0700 (PDT)
Received: by 10.220.200.133 with SMTP id ew5mr50628vcb.12.1276399484317;
        Sat, 12 Jun 2010 20:24:44 -0700 (PDT)
Received: by 10.220.200.133 with SMTP id ew5mr50627vcb.12.1276399484290;
        Sat, 12 Jun 2010 20:24:44 -0700 (PDT)
Received: from mail-vw0-f52.google.com (mail-vw0-f52.google.com [209.85.212.52])
        by gmr-mx.google.com with ESMTP id f8si357496vca.12.2010.06.12.20.24.43;
        Sat, 12 Jun 2010 20:24:43 -0700 (PDT)
Received-SPF: pass (google.com: domain of wmeissner@gmail.com designates 209.85.212.52 as permitted sender) client-ip=209.85.212.52;
Received: by vws3 with SMTP id 3so231776vws.25
        for <ruby-ffi@googlegroups.com>; Sat, 12 Jun 2010 20:24:43 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.220.125.106 with SMTP id x42mr1451132vcr.26.1276399483077; 
	Sat, 12 Jun 2010 20:24:43 -0700 (PDT)
Received: by 10.220.186.129 with HTTP; Sat, 12 Jun 2010 20:24:43 -0700 (PDT)
In-Reply-To: <9f216bde-2460-425a-ba66-f2091f876c9b@h13g2000yqm.googlegroups.com>
References: <9f216bde-2460-425a-ba66-f2091f876c9b@h13g2000yqm.googlegroups.com>
Date: Sun, 13 Jun 2010 13:24:43 +1000
Message-ID: <AANLkTikcOz9vMY6bvxJ7jxsTDYRmwZPmnkXdbQdhb_5I@mail.gmail.com>
Subject: Re: [ruby-ffi] Unable to detect failure with reentrant function on 
	Linux
From: Wayne Meissner <wmeissner@gmail.com>
To: ruby-ffi@googlegroups.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of wmeissner@gmail.com designates 209.85.212.52 as permitted sender) 
	smtp.mail=wmeissner@gmail.com; dkim=pass (test mode) header.i=@gmail.com
X-Original-Sender: wmeissner@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

A couple of things:
1) You should map getprotobynumber_r as:

attach_function 'getprotobynumber_r', [:int, :pointer, :pointer,
:long, :pointer], :int

2) and call it like so:


# getprotobynumber_r will use the buffer you pass in as the allocation
area for the names
# of the protocol, so allocate some native memory for it.

namebuf  =3D FFI::MemoryPointer.new(:char, 1024, false)
pstruct =3D ProtocolStruct.new
ptr =3D FFI::MemoryPointer.new(:pointer)

rc =3D getprotobynumber_r(protocol, pstruct, namebuf, 1024, qptr)

3) a return val of 0 signifies success, and pstruct will be filled out
with the data.  For non-zero returns, you should probably check errno,
and raise an exception if it is anything other than the not-found
case.

return rc =3D=3D 0 && !qptr.get_pointer(0).null? ? pstruct[:p_name] : nil

Note: the signature for getprotobynumber_r is different across linux,
solaris and aix, so its a bit nasty, unless you only care about linux,
or you have code for each of those cases.


On 13 June 2010 12:38, Daniel Berger <djberg96@gmail.com> wrote:
> Hi,
>
> Ruby 1.8.6
> FFI 0.6.3
>
> I cannot seem to detect a failure with getprotobynumber_r on Linux
> when I intentionally pass it a bogus value. Instead, it returns the
> last value of /etc/protocols.
>
> What am I doing wrong?
>
> require 'ffi'
>
> module Net
> =A0class Proto
> =A0 =A0extend FFI::Library
>
> =A0 =A0unless RUBY_PLATFORM =3D=3D 'java' && JRUBY_VERSION.to_f < 1.5
> =A0 =A0 =A0ffi_lib(FFI::Library::LIBC)
> =A0 =A0end
>
> =A0 =A0class ProtocolStruct < FFI::Struct
> =A0 =A0 =A0layout(
> =A0 =A0 =A0 =A0:p_name, =A0 =A0:string,
> =A0 =A0 =A0 =A0:p_aliases, :pointer,
> =A0 =A0 =A0 =A0:p_proto, =A0 :int
> =A0 =A0 =A0)
> =A0 =A0end
>
> =A0 =A0attach_function 'setprotoent', [:int], :void
> =A0 =A0attach_function 'endprotoent', [], :void
> =A0 =A0attach_function 'getprotobynumber_r',
> [:int, :pointer, :string, :long, :pointer], :int
>
> =A0 =A0def self.getprotobynumber(protocol)
> =A0 =A0 =A0raise TypeError unless protocol.is_a?(Integer)
>
> =A0 =A0 =A0pptr =3D FFI::MemoryPointer.new(ProtocolStruct.size)
> =A0 =A0 =A0qptr =3D FFI::MemoryPointer.new(ProtocolStruct.size)
> =A0 =A0 =A0buf =A0=3D 1.chr * 1024
>
> =A0 =A0 =A0begin
> =A0 =A0 =A0 =A0setprotoent(0)
> =A0 =A0 =A0 =A0int =3D getprotobynumber_r(protocol, pptr, buf, buf.size, =
qptr)
> =A0 =A0 =A0ensure
> =A0 =A0 =A0 =A0endprotoent()
> =A0 =A0 =A0end
>
> =A0 =A0 =A0int > 0 || qptr.null? ? nil : ProtocolStruct.new(pptr)[:p_name=
]
> =A0 =A0end
> =A0end
> end
>
> p Net::Proto.getprotobynumber(999999999) # should be nil
>
> Regards,
>
> Dan
