Delivered-To: headius@headius.com
Received: by 10.114.184.4 with SMTP id h4cs25834waf;
        Sat, 12 Dec 2009 13:03:25 -0800 (PST)
Received: by 10.142.5.35 with SMTP id 35mr1848679wfe.69.1260651804739;
        Sat, 12 Dec 2009 13:03:24 -0800 (PST)
Return-Path: <3GwUkSwAACI8ADuH-yy1z77z4xzA7D8B.v75@listserv.bounces.google.com>
Received: from mail-pz0-f148.google.com (mail-pz0-f148.google.com [209.85.222.148])
        by mx.google.com with ESMTP id 3si3971223pxi.53.2009.12.12.13.03.24;
        Sat, 12 Dec 2009 13:03:24 -0800 (PST)
Received-SPF: pass (google.com: domain of 3GwUkSwAACI8ADuH-yy1z77z4xzA7D8B.v75@listserv.bounces.google.com designates 209.85.222.148 as permitted sender) client-ip=209.85.222.148;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 3GwUkSwAACI8ADuH-yy1z77z4xzA7D8B.v75@listserv.bounces.google.com designates 209.85.222.148 as permitted sender) smtp.mail=3GwUkSwAACI8ADuH-yy1z77z4xzA7D8B.v75@listserv.bounces.google.com
Received: by pzk12 with SMTP id 12sf1208537pzk.13
        for <headius@headius.com>; Sat, 12 Dec 2009 13:03:24 -0800 (PST)
Received: by 10.141.124.12 with SMTP id b12mr379922rvn.3.1260651803678;
        Sat, 12 Dec 2009 13:03:23 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.140.55.16 with SMTP id d16ls1004813rva.0.p; Sat, 12 Dec 2009 
	13:03:22 -0800 (PST)
Received: by 10.141.124.1 with SMTP id b1mr587509rvn.1.1260651802749;
        Sat, 12 Dec 2009 13:03:22 -0800 (PST)
Received: by 10.142.249.38 with SMTP id w38mr555650wfh.8.1260641187912;
        Sat, 12 Dec 2009 10:06:27 -0800 (PST)
Received: by 10.142.249.38 with SMTP id w38mr555649wfh.8.1260641187892;
        Sat, 12 Dec 2009 10:06:27 -0800 (PST)
Return-Path: <stephen.bannasch@deanbrook.org>
Received: from deanbrook.org (deanbrook.org [72.52.70.192])
        by gmr-mx.google.com with SMTP id 24si589213pzk.14.2009.12.12.10.06.27;
        Sat, 12 Dec 2009 10:06:27 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of stephen.bannasch@deanbrook.org designates 72.52.70.192 as permitted sender) client-ip=72.52.70.192;
Received: from ::ffff:71.123.118.50 ([71.123.118.50]) by deanbrook.org for <ruby-ffi@googlegroups.com>; Sat, 12 Dec 2009 10:06:23 -0800
Mime-Version: 1.0
Message-Id: <p06240810c749876100b5@[192.168.1.106]>
Date: Sat, 12 Dec 2009 13:06:16 -0500
To: ruby-ffi@googlegroups.com
From: Stephen Bannasch <stephen.bannasch@deanbrook.org>
Subject: [ruby-ffi] basic question: function expects pointer to string buffer, 
	returns string
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/a9128eed1d8e83c7
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/da8592a388a67b99
Sender: ruby-ffi@googlegroups.com
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
Content-Type: text/plain; charset="us-ascii" ; format="flowed"

I've started working on a Ruby FFI interface to the Vernier GoIO sensor interface products.

See:

   http://www.vernier.com/go/
   http://www.vernier.com/downloads/gosdk.html   *the SDK is public domain

I've got a very basic question FFI question.

I have a C++ function that expects a pointer to a string buffer and a int32 specifying the size of the buffer.

The result of calling the function is a name of a connected device in the string buffer.

How should the call be setup and then processed on return to generate a Ruby string.

Here's the state of the code so far:  http://gist.github.com/254981

This is the specific function I have the question about:

GOIO_DLL_INTERFACE_DECL gtype_int32 GoIO_GetNthAvailableDeviceName(
   char *pBuf,            // [out] ptr to buffer to store device name string.
   gtype_int32 bufSize,   // [in] number of bytes in buffer pointed to by pBuf.
                          // Strlen(pBuf) < bufSize, because the string is NULL terminated.
   gtype_int32 vendorId,  // [in] USB vendor id
   gtype_int32 productId, //[in] USB product id
   gtype_int32 N);        //[in] index into list of known devices, 0 => first device in list.

Also, is there any rdoc for FFI?

