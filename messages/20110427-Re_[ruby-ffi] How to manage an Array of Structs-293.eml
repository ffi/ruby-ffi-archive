Delivered-To: headius@headius.com
Received: by 10.90.101.20 with SMTP id y20cs296881agb;
        Wed, 27 Apr 2011 21:11:25 -0700 (PDT)
Received: by 10.42.138.130 with SMTP id c2mr4061651icu.171.1303963884629;
        Wed, 27 Apr 2011 21:11:24 -0700 (PDT)
Return-Path: <ruby-ffi+bncCKH6psKSHBDl0ePtBBoEttBuHw@googlegroups.com>
Received: from mail-pz0-f62.google.com (mail-pz0-f62.google.com [209.85.210.62])
        by mx.google.com with ESMTPS id eb13si2097965icb.155.2011.04.27.21.11.23
        (version=TLSv1/SSLv3 cipher=OTHER);
        Wed, 27 Apr 2011 21:11:23 -0700 (PDT)
Received-SPF: pass (google.com: domain of ruby-ffi+bncCKH6psKSHBDl0ePtBBoEttBuHw@googlegroups.com designates 209.85.210.62 as permitted sender) client-ip=209.85.210.62;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncCKH6psKSHBDl0ePtBBoEttBuHw@googlegroups.com designates 209.85.210.62 as permitted sender) smtp.mail=ruby-ffi+bncCKH6psKSHBDl0ePtBBoEttBuHw@googlegroups.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by pzk10 with SMTP id 10sf1908028pzk.7
        for <headius@headius.com>; Wed, 27 Apr 2011 21:11:22 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:x-beenthere:received-spf:mime-version
         :x-proofpoint-virus-version:x-proofpoint-spam-details:subject:from
         :in-reply-to:date:message-id:references:to:x-mailer
         :x-original-sender:x-original-authentication-results:reply-to
         :precedence:mailing-list:list-id:x-google-group-id:list-post
         :list-help:list-archive:sender:list-subscribe:list-unsubscribe
         :content-transfer-encoding:content-type;
        bh=RyXQ0Q7s0+NyibxNUuPjkzYmv/WKiAr0AUHmZHiWkeA=;
        b=k9ngR74o1wQ1Kd3In8ITkjv8Clb+qag+D5knlNvlEOb8kRxcGl77uoNcustBgq0EfO
         0P1o2OrGJfrWkl0RGqE1yVx2oVkARGyG5pUy5blt6oWuhnHc31DSqlcpDKdtwkWH2CJh
         OznlqMbewFX1NT6Esx9CmeLQCbjtLLebGFpYE=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:x-proofpoint-virus-version
         :x-proofpoint-spam-details:subject:from:in-reply-to:date:message-id
         :references:to:x-mailer:x-original-sender
         :x-original-authentication-results:reply-to:precedence:mailing-list
         :list-id:x-google-group-id:list-post:list-help:list-archive:sender
         :list-subscribe:list-unsubscribe:content-transfer-encoding
         :content-type;
        b=gN0IesG9/Q7n0b0zOQlZi+IGqC+SVnKLazGVAqexijdSSKoRjkhwIRju4LPrWDdDny
         nyCYSteZwKw3/gwr6asYMfvUVKZvE/jBB/unZcr/3oGkp3N/8FrYf26WBa7RAPni3Nkz
         JKWHwlRjAx79FrfvcVvvNStRRp3Pvx35Q9LIc=
Received: by 10.68.37.39 with SMTP id v7mr99431pbj.59.1303963877665;
        Wed, 27 Apr 2011 21:11:17 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.68.8.3 with SMTP id n3ls1841910pba.3.gmail; Wed, 27 Apr 2011
 21:11:16 -0700 (PDT)
Received: by 10.68.4.7 with SMTP id g7mr284543pbg.10.1303963876844;
        Wed, 27 Apr 2011 21:11:16 -0700 (PDT)
Received: by 10.68.4.7 with SMTP id g7mr284542pbg.10.1303963876830;
        Wed, 27 Apr 2011 21:11:16 -0700 (PDT)
Received: from asmtpout020.mac.com (asmtpout020.mac.com [17.148.16.95])
        by gmr-mx.google.com with ESMTP id e2si703244pbi.1.2011.04.27.21.11.16;
        Wed, 27 Apr 2011 21:11:16 -0700 (PDT)
Received-SPF: pass (google.com: domain of paolo.bosetti@me.com designates 17.148.16.95 as permitted sender) client-ip=17.148.16.95;
MIME-version: 1.0
Received: from [10.0.0.6]
 (adsl-70-132-1-73.dsl.snfc21.sbcglobal.net [70.132.1.73])
 by asmtp020.mac.com (Oracle Communications Messaging Exchange Server 7u4-20.01
 64bit (built Nov 21 2010)) with ESMTPSA id <0LKC00MRNGXKZW80@asmtp020.mac.com>
 for ruby-ffi@googlegroups.com; Wed, 27 Apr 2011 21:10:39 -0700 (PDT)
X-Proofpoint-Virus-Version: vendor=fsecure
 engine=2.50.10432:5.2.15,1.0.148,0.0.0000
 definitions=2011-04-28_02:2011-04-27,2011-04-28,1970-01-01 signatures=0
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0
 ipscore=0 suspectscore=5 phishscore=0 bulkscore=0 adultscore=0 classifier=spam
 adjust=0 reason=mlx engine=6.0.2-1012030000 definitions=main-1104270197
Subject: Re: [ruby-ffi] How to manage an Array of Structs
From: Paolo Bosetti <paolo.bosetti@me.com>
In-reply-to: <BANLkTi=QAcmE0G-po8S1guCYf=rz5-OfzQ@mail.gmail.com>
Date: Wed, 27 Apr 2011 21:10:31 -0700
Message-id: <D3BE1586-0510-4E1C-BCFD-6EB98A7772DD@me.com>
References: <2952a6dd-e006-41f6-9e07-64681f010c4a@z27g2000prz.googlegroups.com>
 <BANLkTi=4g0tiHyy6AyyyzzpB6iRtjNxpsw@mail.gmail.com>
 <BANLkTi=QAcmE0G-po8S1guCYf=rz5-OfzQ@mail.gmail.com>
To: ruby-ffi@googlegroups.com
X-Mailer: Apple Mail (2.1084)
X-Original-Sender: paolo.bosetti@me.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com:
 domain of paolo.bosetti@me.com designates 17.148.16.95 as permitted sender) smtp.mail=paolo.bosetti@me.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
X-Google-Group-Id: 238405446264
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, <mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, <mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>,
 <mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-transfer-encoding: 7BIT
Content-type: text/plain; CHARSET=US-ASCII

Perfect! it works! now that I see it, the answer was easy.
Thanks a lot, Charles,
-P.



On Apr 27, 2011, at 5:41 PM, Charles Strahan wrote:

> Woops!
> 
> To get the bytes from the struct, you would want to do something like this:
> 
>   # Call Struct#pointer, and then Pointer#get_bytes
>   struct_bytes = op.pointer.get_bytes(0, Sembuf.size) # (offset, length)
> 
> -Charles
> 
> 
> On Wed, Apr 27, 2011 at 7:37 PM, Charles Strahan <charles.c.strahan@gmail.com> wrote:
> Hi P,
> 
> Just FYI, the first parameter to MemoryPointer.new is the type_size, and the second parameter is count - so you probably wanted to do something like this (for an array consisting of a single Sembuf):
> 
>   ops = FFI::MemoryPointer.new(Shared::Sembuf) # count defaults to 1
> 
> Now then, there's probably a better way to do this, but this should work:
> 
>   sembuf_count = ... # however many Sembufs you want to write
>   ops = FFI::MemoryPointer.new(Shared::Sembuf, sembuf_count)
> 
>   # get the bytes
>   struct_bytes = op.get_bytes(0, Sembuf.size) # (offset, length)
> 
>   # Pointer#[n] returns a new pointer with the address incremented by (n * Pointer#type_size) - just like a C array
>   ops[0].put_bytes(0, struct_bytes) # (offset, byte_string)
> 
>   # now you repeat with ops[1], ops[2], ops[n-1]
>   ops[1].put_bytes ..
>   ...
> 
> Again, there might be a better way to do this. I figured that Pointer#[]= would do the trick, but I guess not.
> 
> HTH,
> 
> Charles
> 
> 
> On Wed, Apr 27, 2011 at 11:58 AM, P4010 <paolo.bosetti@gmail.com> wrote:
> Hi all,
> I am writing an FFI interface to IP shared memory and semaphores. I
> wonder if someone here can give me advice on how to manage an Array of
> Structs.
> 
> I am mapping the semop() function in FFI. It has the following
> signature:
> 
> #include <sys/sem.h>
> int
> semop(int semid, struct sembuf *sops, size_t nsops);
> 
> I wrote something like:
> 
> module Shared
>  extend FFI::Library
>  ffi_lib FFI::Library::LIBC
> 
>  class Sembuf < FFI::Struct
>    layout :sem_num, :ushort,
>      :sem_op, :short,
>      :sem_flg, :short
>  end
> 
>  attach_function :semop,  [:int, :pointer, :size_t], :int
> 
> end
> 
> Now the Shared#semop wants a pointer to an array of Shared::Sembuf
> structs. How can I build such a pointer? I guess I should start with
> 
> op = Shared::Sembuf.new
> op[:sem_num] = 0
> op[:sem_op] = -1
> op[:sem_flg] = 0
> 
> ops = FFI::MemoryPointer.new(Shared::Sembuf, Shared::Sembuf.size * 1)
> 
> But then I could not find how to add the op instance to the array
> pointed to by ops...
> 
> I'll appreciate any suggestion...
> 
> Cheers,
> -P.
> 
> 

