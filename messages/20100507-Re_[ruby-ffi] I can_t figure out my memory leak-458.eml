Delivered-To: headius@headius.com
Received: by 10.150.226.5 with SMTP id y5cs35649ybg;
        Fri, 7 May 2010 11:29:03 -0700 (PDT)
Received: by 10.115.101.14 with SMTP id d14mr274806wam.176.1273256942445;
        Fri, 07 May 2010 11:29:02 -0700 (PDT)
Return-Path: <ruby-ffi+bncCJ2jt8vbBhDet5HfBBoEB321cQ@googlegroups.com>
Received: from mail-pv0-f190.google.com (mail-pv0-f190.google.com [74.125.83.190])
        by mx.google.com with ESMTP id t34si5231322wam.69.2010.05.07.11.29.01;
        Fri, 07 May 2010 11:29:01 -0700 (PDT)
Received-SPF: pass (google.com: domain of ruby-ffi+bncCJ2jt8vbBhDet5HfBBoEB321cQ@googlegroups.com designates 74.125.83.190 as permitted sender) client-ip=74.125.83.190;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncCJ2jt8vbBhDet5HfBBoEB321cQ@googlegroups.com designates 74.125.83.190 as permitted sender) smtp.mail=ruby-ffi+bncCJ2jt8vbBhDet5HfBBoEB321cQ@googlegroups.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by pvg16 with SMTP id 16sf334385pvg.7
        for <headius@headius.com>; Fri, 07 May 2010 11:29:01 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:received:received
         :received:received-spf:mime-version:received
         :x-proofpoint-spam-details:subject:from:in-reply-to:date:message-id
         :references:to:x-mailer:x-original-authentication-results
         :x-original-sender:reply-to:precedence:mailing-list:list-id
         :list-post:list-help:list-archive:sender:list-subscribe
         :list-unsubscribe:content-transfer-encoding:content-type;
        bh=EzlFi8V/kQI/t66fjujoTVBmXq6ea2jv34kevlSf0mc=;
        b=ao7SxBDg1tOWfcXP2meEdRdGFert1dRThfsfFc4oIu5+Mjt0KgaqdqGU6EzDI0SMd7
         xamYr48XJ2EU32/WedfxCY8IGSUmZf+jNDLqsYdk4kj/YuSUdYg2c/lw8I1H80UqgQSF
         cWCVh+C/aYYI+zZ54myEE1fVWDK1mqoLCkaKY=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:x-proofpoint-spam-details
         :subject:from:in-reply-to:date:message-id:references:to:x-mailer
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :sender:list-subscribe:list-unsubscribe:content-transfer-encoding
         :content-type;
        b=g5hUF/B/mF/zuoauY9oJq7TqV3S+jKfx+qTydufdjEkjIWo66KVxTxKTyp4uSZT314
         UMYD9WJyIB88dqpRzogRfJpXcrtZGo/GdmfElKGgtw6YCQF+OS1ny//tEtMCRwhPwlBt
         TrLu3rKyDT1E87oVvVCoGptwraDn/HswfY3yA=
Received: by 10.141.124.4 with SMTP id b4mr48763rvn.1.1273256928922;
        Fri, 07 May 2010 11:28:48 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.141.13.11 with SMTP id q11ls9039580rvi.3.p; Fri, 07 May 2010 
	11:28:46 -0700 (PDT)
Received: by 10.140.82.42 with SMTP id f42mr13839rvb.37.1273256925950;
        Fri, 07 May 2010 11:28:45 -0700 (PDT)
Received: by 10.140.82.42 with SMTP id f42mr13838rvb.37.1273256925926;
        Fri, 07 May 2010 11:28:45 -0700 (PDT)
Return-Path: <cremes.devlist@mac.com>
Received: from asmtpout024.mac.com (asmtpout024.mac.com [17.148.16.99])
        by gmr-mx.google.com with ESMTP id 25si444060pzk.8.2010.05.07.11.28.45;
        Fri, 07 May 2010 11:28:45 -0700 (PDT)
Received-SPF: pass (google.com: domain of cremes.devlist@mac.com designates 17.148.16.99 as permitted sender) client-ip=17.148.16.99;
MIME-version: 1.0
Received: from [192.168.0.101] ([76.8.86.186])
 by asmtp024.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec
 16 2008; 32bit)) with ESMTPSA id <0L2200AFEBBTRI90@asmtp024.mac.com> for
 ruby-ffi@googlegroups.com; Fri, 07 May 2010 11:28:42 -0700 (PDT)
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0
 ipscore=0 phishscore=0 bulkscore=0 adultscore=0 classifier=spam adjust=0
 reason=mlx engine=5.0.0-0908210000 definitions=main-1005070112
Subject: Re: [ruby-ffi] I can't figure out my memory leak
From: Chuck Remes <cremes.devlist@mac.com>
In-reply-to: <DE55494E-6A74-4C70-AC33-9BA104DD2A7A@mac.com>
Date: Fri, 07 May 2010 13:28:40 -0500
Message-id: <E64169D4-0C48-4071-B0B6-07015124C417@mac.com>
References: <DE55494E-6A74-4C70-AC33-9BA104DD2A7A@mac.com>
To: ruby-ffi@googlegroups.com
X-Mailer: Apple Mail (2.1078)
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of cremes.devlist@mac.com designates 17.148.16.99 as permitted sender) 
	smtp.mail=cremes.devlist@mac.com
X-Original-Sender: cremes.devlist@mac.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-transfer-encoding: 7BIT
Content-type: text/plain; charset=us-ascii


On May 7, 2010, at 11:26 AM, Chuck Remes wrote:

> http://github.com/chuckremes/ffi-rzmq
> 
> I have a tremendous memory leak in my FFI code. I'm pretty sure I know exactly where it is caused but I have no idea how to solve it. This gist shows the code in question.
> 
> http://gist.github.com/393627
> 
> The first gist block is where I think the memory leak lives. The second gist block is the definition of the leaking Struct and the definitions of the library functions.
> 
> Here's the sequence of events for the creation of a message where message is not nil (from the constructor).
> 
> 1. Allocate the Msg_t Struct.
> 
> 2. Create a MemoryPointer from the message string to create the Msg_t payload.
> 
> 3. Hand off the Struct obj to the underlying library and tell the library the size needed to store the data.
> 
> 4. Hand off the MemoryPointer pointing to the message data to the underlying library. The library should now *own* the memory allocated in step #2 and manage it from here on.
> 
> 
> After a call is made to transmit OR receive the message obj, it calls Message#close. This makes a call to the underlying library to close the message and release its memory. This should release the memory that was allocated in #2 above. 

I made a little progress though the leak remains.

I talked with the library author and he set me straight on one of the calls. In step #3 even though we hand off a buffer we allocated to contain the payload, the library does not handle its deallocation. The handoff now includes a function callback to handle the deallocation. All the callback does is "ptr.free".

I have confirmed the callback is fired by having it print a statement. It is called for every message yet the leaking memory still grows at the same rate. :(

I looked at the source code for FFI and see that a call to MemoryPointer#free calls xfree immediately. So I'm still at a loss to explain the leakage. I'll try analyzing the JRuby heap to see if there are orphaned objects and where they are coming from.

cr


