Delivered-To: headius@headius.com
Received: by 10.100.134.8 with SMTP id h8cs531642and;
        Mon, 21 Dec 2009 15:32:58 -0800 (PST)
Received: by 10.150.254.7 with SMTP id b7mr12352316ybi.137.1261438377912;
        Mon, 21 Dec 2009 15:32:57 -0800 (PST)
Return-Path: <3pgUwSwkJCCcWRP.HQHERJPDLO.FRPUXEb-IILJRRJOHJURXSV.FRP@listserv.bounces.google.com>
Received: from mail-yw0-f144.google.com (mail-yw0-f144.google.com [209.85.211.144])
        by mx.google.com with ESMTP id 31si11994669yxe.82.2009.12.21.15.32.56;
        Mon, 21 Dec 2009 15:32:56 -0800 (PST)
Received-SPF: pass (google.com: domain of 3pgUwSwkJCCcWRP.HQHERJPDLO.FRPUXEb-IILJRRJOHJURXSV.FRP@listserv.bounces.google.com designates 209.85.211.144 as permitted sender) client-ip=209.85.211.144;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 3pgUwSwkJCCcWRP.HQHERJPDLO.FRPUXEb-IILJRRJOHJURXSV.FRP@listserv.bounces.google.com designates 209.85.211.144 as permitted sender) smtp.mail=3pgUwSwkJCCcWRP.HQHERJPDLO.FRPUXEb-IILJRRJOHJURXSV.FRP@listserv.bounces.google.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by ywh8 with SMTP id 8sf16334515ywh.3
        for <headius@headius.com>; Mon, 21 Dec 2009 15:32:56 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:received:received
         :received:received-spf:received:mime-version:received:in-reply-to
         :references:date:message-id:subject:from:to
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :x-thread-url:x-message-url:sender:list-unsubscribe:list-subscribe
         :content-type:content-transfer-encoding;
        bh=SPg5MgABhSEDE7VnBYIIg4XRrakkip0cjabjEZwXoU4=;
        b=pbo4djCdBNLxVs6S20xMrwtNZrv4D0vmvwchIdp7v2aR0nHHYN8w3n0m87iVK4KFAx
         PWqkUM7Ch9ncRDgO834B3Ua5E6K2E8HJovH9EDV45pjfbZ/EryhLinD0UHlc3ucoZgKV
         tVaZqs3Q/HJkmEOfTN+e4KzEgjsL+EBhpKSkA=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:in-reply-to:references:date
         :message-id:subject:from:to:x-original-authentication-results
         :x-original-sender:reply-to:precedence:mailing-list:list-id
         :list-post:list-help:list-archive:x-thread-url:x-message-url:sender
         :list-unsubscribe:list-subscribe:content-type
         :content-transfer-encoding;
        b=kvkcKj6YzqI6QELJjCX9N0035O82VxDLjEV440jzxF9GYKnTs1oRdJAcHu9lvhS+/c
         +7ekVw3uwedfmgh2O/ENzXgA1VOyDaxs6a8Ry0+1n4n/zGQyhEVbwN90I6ki6c0LF99v
         2WCbu+j1oeUyl+SDeta6Hs31qyO9sZCdenisc=
Received: by 10.91.215.9 with SMTP id s9mr42617agq.29.1261438374436;
        Mon, 21 Dec 2009 15:32:54 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.204.16.73 with SMTP id n9ls28631bka.3.p; Mon, 21 Dec 2009 
	15:32:53 -0800 (PST)
Received: by 10.204.7.219 with SMTP id e27mr266811bke.19.1261438372935;
        Mon, 21 Dec 2009 15:32:52 -0800 (PST)
Received: by 10.204.7.219 with SMTP id e27mr266810bke.19.1261438372912;
        Mon, 21 Dec 2009 15:32:52 -0800 (PST)
Return-Path: <tom.enebo@gmail.com>
Received: from mail-fx0-f224.google.com (mail-fx0-f224.google.com [209.85.220.224])
        by gmr-mx.google.com with ESMTP id 12si551684bwz.10.2009.12.21.15.32.51;
        Mon, 21 Dec 2009 15:32:51 -0800 (PST)
Received-SPF: pass (google.com: domain of tom.enebo@gmail.com designates 209.85.220.224 as permitted sender) client-ip=209.85.220.224;
Received: by mail-fx0-f224.google.com with SMTP id 24so1429348fxm.31
        for <ruby-ffi@googlegroups.com>; Mon, 21 Dec 2009 15:32:51 -0800 (PST)
MIME-Version: 1.0
Received: by 10.239.139.215 with SMTP id u23mr736473hbu.28.1261438371446; Mon, 
	21 Dec 2009 15:32:51 -0800 (PST)
In-Reply-To: <4ccee320912211420v691a1119ibd25abbbe57bc445@mail.gmail.com>
References: <20091221152637.62654e37.jon.forums@gmail.com>
	 <80BBF3AC-C15C-4844-A6DD-34A3B9218A35@fallingsnow.net>
	 <20091221162106.9ffa1f6f.jon.forums@gmail.com>
	 <21ef583e0912211333m3da990e7w337f75ae50054b42@mail.gmail.com>
	 <4ccee320912211420v691a1119ibd25abbbe57bc445@mail.gmail.com>
Date: Mon, 21 Dec 2009 17:32:51 -0600
Message-ID: <21ef583e0912211532u715e2a20s3bbba0d62d003110@mail.gmail.com>
Subject: Re: [ruby-ffi] Struct/ManagedStruct and GC behaviour
From: Thomas E Enebo <tom.enebo@gmail.com>
To: ruby-ffi@googlegroups.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of tom.enebo@gmail.com designates 209.85.220.224 as permitted sender) 
	smtp.mail=tom.enebo@gmail.com; dkim=pass (test mode) header.i=@gmail.com
X-Original-Sender: tom.enebo@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/509f727c52cb337
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/110492c2bfe639b1
Sender: ruby-ffi@googlegroups.com
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

On Mon, Dec 21, 2009 at 4:20 PM, Wayne Meissner <wmeissner@gmail.com> wrote=
:
> 2009/12/22 Thomas E Enebo <tom.enebo@gmail.com>:
>> I have been wondering about the Struct API myself. =A0 It seems like it
>> should support a simple explicit memory management API ala:
>>
>> class MyFFIStruct < FFI::Struct ....
>>
>> MyFFIStruct.new do |struct_instance|
>> =A0 some_ffi_call struct_instance
>> =A0 # Do other stuff....
>> end
>> # I know the block has disposed of my allocated struct
>
> It does support this indirectly via MemoryPointer.new
> e.g.
> =A0MemoryPointer.new(MyFFIStruct.size) do |p|
> =A0 =A0s =3D MyFFIStruct.new(p)
> =A0 =A0some_ffi_call s
> =A0 =A0# do other stuff
> =A0end
>
> An alternative is to use FFI::Buffer as the backing memory - on JRuby,
> that is jvm-heap memory, which is copied in/out of a temporary native
> memory area (usually on the stack) when passed to a native function.
> For small structs, especially ones that are passed to a native
> function just once, this can be up to 10x faster than the alloc/free
> cycle of a MemoryPointer backed Struct.

Thanks for the additional info and the code snippet for explicit
management.  Personally, I think that an explicit API like this should
be the norm since there are no guarantees on when GC happens and in my
experience it is much longer than most people expect.   I think too
many people believe in magic and the only way to combat it is to make
the implicit stuff be more typing (or the explicit stuff less typing).
  I will probably make a class method in Struct which allows something
like:

MyFFStruct.create do |struct|
...
end

Under the covers it will do what you demonstrated above:

def self.create(&block)
    MemoryPointer.new(size) { |p| block.call new(p) }
end

Or something like this...

-Tom

--=20
blog: http://blog.enebo.com       twitter: tom_enebo
mail: tom.enebo@gmail.com
