Delivered-To: headius@headius.com
Received: by 10.100.134.8 with SMTP id h8cs584569and;
        Tue, 22 Dec 2009 11:44:13 -0800 (PST)
Received: by 10.143.153.29 with SMTP id f29mr5867282wfo.294.1261511052367;
        Tue, 22 Dec 2009 11:44:12 -0800 (PST)
Return-Path: <3iiExSwkJCCgaQIMWWRIVKQEMP.GSQVYFc-JJMKSSKPIKVSYTW.GSQ@listserv.bounces.google.com>
Received: from mail-pz0-f148.google.com (mail-pz0-f148.google.com [209.85.222.148])
        by mx.google.com with ESMTP id 29si14964548pzk.85.2009.12.22.11.44.11;
        Tue, 22 Dec 2009 11:44:11 -0800 (PST)
Received-SPF: pass (google.com: domain of 3iiExSwkJCCgaQIMWWRIVKQEMP.GSQVYFc-JJMKSSKPIKVSYTW.GSQ@listserv.bounces.google.com designates 209.85.222.148 as permitted sender) client-ip=209.85.222.148;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 3iiExSwkJCCgaQIMWWRIVKQEMP.GSQVYFc-JJMKSSKPIKVSYTW.GSQ@listserv.bounces.google.com designates 209.85.222.148 as permitted sender) smtp.mail=3iiExSwkJCCgaQIMWWRIVKQEMP.GSQVYFc-JJMKSSKPIKVSYTW.GSQ@listserv.bounces.google.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by pzk12 with SMTP id 12sf2434232pzk.13
        for <headius@headius.com>; Tue, 22 Dec 2009 11:44:11 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:received:received
         :received:received-spf:received:mime-version:received:in-reply-to
         :references:date:message-id:subject:from:to
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :x-thread-url:x-message-url:sender:list-unsubscribe:list-subscribe
         :content-type;
        bh=ShDtgoNF2xY2+Wujercv7iUHp2NiS+OqHjxAm6OuyNc=;
        b=S0Y3RJqKeKRYyHlboSbwlZvPvjXx6Yyk7Zpd1ddI1ycfiXF6Km0kYNH2pfHBDXPtTo
         1e2HKT5iLEet5oHyUsy+R1O17DnIWfiY40DLBrKpJMG5J9F1wa/jSpXpUUvVKRqZW2Bf
         x0L8DHFEZsxqhsPDZRZNNucS52SH/XyChfgjo=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:in-reply-to:references:date
         :message-id:subject:from:to:x-original-authentication-results
         :x-original-sender:reply-to:precedence:mailing-list:list-id
         :list-post:list-help:list-archive:x-thread-url:x-message-url:sender
         :list-unsubscribe:list-subscribe:content-type;
        b=hpXrIWmRJyLqzVgzkSKjzz9CPqtu/J8adWbfwJyXsPeDkrfj7Td+HsyXZDezajVCIj
         zsJUW6lOlUDkIJiys/aIHySE2rzPDt9JjuEKKw8n6Job9J3Ul6ZGC7Qo2ZnkgrQG3uqF
         a2oJlpACboCepfYEhWv07PT3cbEXWhSxBhsBQ=
Received: by 10.142.250.35 with SMTP id x35mr27065wfh.28.1261511050071;
        Tue, 22 Dec 2009 11:44:10 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.142.149.37 with SMTP id w37ls33007wfd.3.p; Tue, 22 Dec 2009 
	11:44:08 -0800 (PST)
Received: by 10.143.20.39 with SMTP id x39mr1806412wfi.27.1261511048263;
        Tue, 22 Dec 2009 11:44:08 -0800 (PST)
Received: by 10.143.20.39 with SMTP id x39mr1806411wfi.27.1261511048246;
        Tue, 22 Dec 2009 11:44:08 -0800 (PST)
Return-Path: <wmeissner@gmail.com>
Received: from mail-pz0-f197.google.com (mail-pz0-f197.google.com [209.85.222.197])
        by gmr-mx.google.com with ESMTP id 9si1882927pxi.10.2009.12.22.11.44.07;
        Tue, 22 Dec 2009 11:44:07 -0800 (PST)
Received-SPF: pass (google.com: domain of wmeissner@gmail.com designates 209.85.222.197 as permitted sender) client-ip=209.85.222.197;
Received: by mail-pz0-f197.google.com with SMTP id 35so5067985pzk.22
        for <ruby-ffi@googlegroups.com>; Tue, 22 Dec 2009 11:44:07 -0800 (PST)
MIME-Version: 1.0
Received: by 10.141.187.19 with SMTP id o19mr6418722rvp.134.1261511047096; 
	Tue, 22 Dec 2009 11:44:07 -0800 (PST)
In-Reply-To: <5d0a6fc0-6026-44b2-b5ad-6cef3a55fbf1@v25g2000yqk.googlegroups.com>
References: <20091221152637.62654e37.jon.forums@gmail.com>
	 <5d0a6fc0-6026-44b2-b5ad-6cef3a55fbf1@v25g2000yqk.googlegroups.com>
Date: Wed, 23 Dec 2009 05:44:07 +1000
Message-ID: <4ccee320912221144h2f5a9eaaxd558a8956815e26f@mail.gmail.com>
Subject: Re: [ruby-ffi] Re: Struct/ManagedStruct and GC behaviour
From: Wayne Meissner <wmeissner@gmail.com>
To: ruby-ffi@googlegroups.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of wmeissner@gmail.com designates 209.85.222.197 as permitted sender) 
	smtp.mail=wmeissner@gmail.com; dkim=pass (test mode) header.i=@gmail.com
X-Original-Sender: wmeissner@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/509f727c52cb337
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/d5078bb3cea8df43
Sender: ruby-ffi@googlegroups.com
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1

2009/12/23 rogerdpack <rogerpack2005@gmail.com>:
>> 1) Both FFI::Struct and FFI::ManagedStruct are able to be freed by the Ruby impl's GC. Overall GC semantics are no different that any other Ruby object GC'd by the specific Ruby impl.
>
> My question is
> 1) is the "struct's worth of memory" allocated when you call #new

Yes, the backing memory is allocated by Struct.new

>
> 2) when you do struct[:member] = something
>
> does it actually set the bits within the struct right then, or at some
> later marshalling time?

It sets the bits in the struct right then.  The inverse is also true;
x = struct[:member] does a read from the memory, each time you access
it.

> In theory there is a guarantee that it will be collected
> "at_exit" [objects with finalizers are all called in an at_exit in
> MRI].

Yes, although I don't think this same guarantee is made for the jvm.
However, assuming the program is running forever, and you busily
allocate native memory in FFI, and do not explicitly free it,  there
may not be a GC event during the run which frees it.  So you can get
into a state where you exhaust the native memory arena.
