Delivered-To: headius@headius.com
Received: by 10.114.184.4 with SMTP id h4cs733838waf;
        Wed, 9 Dec 2009 12:54:26 -0800 (PST)
Received: by 10.141.188.33 with SMTP id q33mr540775rvp.147.1260392066751;
        Wed, 09 Dec 2009 12:54:26 -0800 (PST)
Return-Path: <3gQ4gSwkJCPoyogkuupgtiockn.eqotwd0-hhkiqqingitqwru.eqo@listserv.bounces.google.com>
Received: from mail-pw0-f68.google.com (mail-pw0-f68.google.com [209.85.160.68])
        by mx.google.com with ESMTP id 26si337747pzk.105.2009.12.09.12.54.26;
        Wed, 09 Dec 2009 12:54:26 -0800 (PST)
Received-SPF: pass (google.com: domain of 3gQ4gSwkJCPoyogkuupgtiockn.eqotwd0-hhkiqqingitqwru.eqo@listserv.bounces.google.com designates 209.85.160.68 as permitted sender) client-ip=209.85.160.68;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 3gQ4gSwkJCPoyogkuupgtiockn.eqotwd0-hhkiqqingitqwru.eqo@listserv.bounces.google.com designates 209.85.160.68 as permitted sender) smtp.mail=3gQ4gSwkJCPoyogkuupgtiockn.eqotwd0-hhkiqqingitqwru.eqo@listserv.bounces.google.com
Received: by pwj20 with SMTP id 20sf895004pwj.27
        for <headius@headius.com>; Wed, 09 Dec 2009 12:54:26 -0800 (PST)
Received: by 10.115.100.14 with SMTP id c14mr753921wam.8.1260392065390;
        Wed, 09 Dec 2009 12:54:25 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.115.116.23 with SMTP id t23ls384130wam.1.p; Wed, 09 Dec 2009 
	12:54:24 -0800 (PST)
Received: by 10.114.5.16 with SMTP id 16mr2166717wae.15.1260392064257;
        Wed, 09 Dec 2009 12:54:24 -0800 (PST)
Received: by 10.114.5.16 with SMTP id 16mr2166716wae.15.1260392064239;
        Wed, 09 Dec 2009 12:54:24 -0800 (PST)
Return-Path: <wmeissner@gmail.com>
Received: from mail-px0-f181.google.com (mail-px0-f181.google.com [209.85.216.181])
        by gmr-mx.google.com with ESMTP id 19si19807pzk.8.2009.12.09.12.54.23;
        Wed, 09 Dec 2009 12:54:23 -0800 (PST)
Received-SPF: pass (google.com: domain of wmeissner@gmail.com designates 209.85.216.181 as permitted sender) client-ip=209.85.216.181;
Received: by mail-px0-f181.google.com with SMTP id 11so2785411pxi.9
        for <ruby-ffi@googlegroups.com>; Wed, 09 Dec 2009 12:54:23 -0800 (PST)
MIME-Version: 1.0
Received: by 10.141.106.11 with SMTP id i11mr550561rvm.239.1260392063074; Wed, 
	09 Dec 2009 12:54:23 -0800 (PST)
In-Reply-To: <472fe984-a4e8-4b27-a0f7-73e58033d443@f18g2000prf.googlegroups.com>
References: <ae3ecdd9-459d-4496-a17a-a9eb1a88d154@v25g2000yqk.googlegroups.com>
	 <6299bf3a-f922-4bec-beb1-2a723274b099@z7g2000vbl.googlegroups.com>
	 <9bd8f0b9-5c7e-4370-9167-44db8112167e@u20g2000vbq.googlegroups.com>
	 <71166b3b0912051418r156d05a0v18ab2503dc2bf1b3@mail.gmail.com>
	 <3d351bca-ca00-47ab-bb05-644547d4a49a@y32g2000prd.googlegroups.com>
	 <A488E251-8257-44D3-B1C1-245612AB9D2B@fallingsnow.net>
	 <472fe984-a4e8-4b27-a0f7-73e58033d443@f18g2000prf.googlegroups.com>
Date: Thu, 10 Dec 2009 06:54:23 +1000
Message-ID: <4ccee320912091254k5a62cf79oc6b4fb322610396c@mail.gmail.com>
Subject: Re: [ruby-ffi] Re: c++ examples
From: Wayne Meissner <wmeissner@gmail.com>
To: ruby-ffi@googlegroups.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of wmeissner@gmail.com designates 209.85.216.181 as permitted sender) 
	smtp.mail=wmeissner@gmail.com; dkim=pass (test mode) header.i=@gmail.com
X-Original-Sender: wmeissner@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/cb31aba29ae17e59
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/d3187efe8e393ed4
Sender: ruby-ffi@googlegroups.com
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

2009/12/10 rogerdpack <rogerpack2005@gmail.com>:
>> I do not recommend this at all. Using finalizers to release external res=
ources is a very easy way to cause memory leaks and latent bugs.
>
> Anybody know if collection at finalize time what the following code
> (from the tutorial) does by default?

When the SomeObject instance is garbage collected, the 'release'
method is called on the class, passing in the pointer used as the
memory for the struct.

The problem, is, that in a garbage collected environment, garbage
collection is not a deterministic event.

i.e.  it doesn't happen the instant the last reference to the
SomeObject instance goes out of scope, it may be quite some time
later, or never, if there is no memory pressure from ruby objects
allocations.

You can use finalizers as a last-resort cleanup mechanism, but you
also want to have a mechanism to cleanup/dispose the underlying native
object explicitly during normal operation.

>
> module MyLibrary
> =A0class SomeObject < FFI::ManagedStruct
> =A0 =A0layout :next, =A0:pointer,
> =A0 =A0 =A0 =A0 =A0 :name, =A0:string,
> =A0 =A0 =A0 =A0 =A0 :value, :double,
>
> =A0 =A0def self.release(ptr)
> =A0 =A0 =A0MyLibrary.free_object(ptr)
> =A0 =A0end
> =A0end
> end
> Thanks.
> -r
>
