Delivered-To: headius@headius.com
Received: by 10.150.226.5 with SMTP id y5cs11131ybg;
        Wed, 5 May 2010 18:29:33 -0700 (PDT)
Received: by 10.100.236.21 with SMTP id j21mr7471740anh.166.1273109373602;
        Wed, 05 May 2010 18:29:33 -0700 (PDT)
Return-Path: <ruby-ffi+bncCKiIs7vvExD6tojfBBoEpiTllQ@googlegroups.com>
Received: from mail-yw0-f149.google.com (mail-yw0-f149.google.com [209.85.211.149])
        by mx.google.com with ESMTP id 1si366342gxk.9.2010.05.05.18.29.32;
        Wed, 05 May 2010 18:29:32 -0700 (PDT)
Received-SPF: pass (google.com: domain of ruby-ffi+bncCKiIs7vvExD6tojfBBoEpiTllQ@googlegroups.com designates 209.85.211.149 as permitted sender) client-ip=209.85.211.149;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncCKiIs7vvExD6tojfBBoEpiTllQ@googlegroups.com designates 209.85.211.149 as permitted sender) smtp.mail=ruby-ffi+bncCKiIs7vvExD6tojfBBoEpiTllQ@googlegroups.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by ywh13 with SMTP id 13sf10601127ywh.22
        for <headius@headius.com>; Wed, 05 May 2010 18:29:32 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:received:received
         :received:received:received-spf:received:mime-version:from
         :in-reply-to:date:message-id:references:to:x-mailer
         :x-sa-exim-connect-ip:x-sa-exim-mail-from:x-spam-checker-version
         :x-spam-level:x-spam-status:subject:x-sa-exim-version
         :x-sa-exim-scanned:x-original-authentication-results
         :x-original-sender:reply-to:precedence:mailing-list:list-id
         :list-post:list-help:list-archive:sender:list-subscribe
         :list-unsubscribe:content-type:content-transfer-encoding;
        bh=eUyBIdER4uzRjMZUWPuK4+YqgIinBN8FztmTZmCZy0w=;
        b=3HLDKk3K97qX6GoZcDShJYR9ij8WfQYQmxRwB5T1S4xvi827o4cwm222y9Jp8eWjsm
         4anvDTQXEpT9YD1zdXzXjalMF6SZgez0LutaOj2vLK0Z7hGVuLIQlqSGToEy5HFZUtck
         BWLaM1Mlxv8LXUFCxkjEJmUb2H/FTE0yTPIlI=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:from:in-reply-to:date
         :message-id:references:to:x-mailer:x-sa-exim-connect-ip
         :x-sa-exim-mail-from:x-spam-checker-version:x-spam-level
         :x-spam-status:subject:x-sa-exim-version:x-sa-exim-scanned
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :sender:list-subscribe:list-unsubscribe:content-type
         :content-transfer-encoding;
        b=JSeqjhhOvThlPKYb3IfOOt2dCMidwnqcfFtpq55vggcTqcwLu8hoEPxYgokAaqhvDB
         jV7oxuYi7OZeK3NAhNMHdHvD+xgOA61+h4WjYHo3hMLT3y2fEivxjlGFuFXsiGZTMq5G
         fOi9k1gpH+5+An5EmrUUbZgTOZ3+kFhbQX+2c=
Received: by 10.150.172.7 with SMTP id u7mr1325339ybe.38.1273109370619;
        Wed, 05 May 2010 18:29:30 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.150.248.9 with SMTP id v9ls4180237ybh.5.p; Wed, 05 May 2010 
	18:29:30 -0700 (PDT)
Received: by 10.150.127.4 with SMTP id z4mr285834ybc.24.1273109370176;
        Wed, 05 May 2010 18:29:30 -0700 (PDT)
Received: by 10.141.124.7 with SMTP id b7mr1726978rvn.7.1273104604365;
        Wed, 05 May 2010 17:10:04 -0700 (PDT)
Received: by 10.141.124.7 with SMTP id b7mr1726977rvn.7.1273104604342;
        Wed, 05 May 2010 17:10:04 -0700 (PDT)
Return-Path: <evan@fallingsnow.net>
Received: from elle.fallingsnow.net (elle.fallingsnow.net [67.43.164.196])
        by gmr-mx.google.com with ESMTP id 19si74706pzk.11.2010.05.05.17.10.03;
        Wed, 05 May 2010 17:10:03 -0700 (PDT)
Received-SPF: pass (google.com: best guess record for domain of evan@fallingsnow.net designates 67.43.164.196 as permitted sender) client-ip=67.43.164.196;
Received: from cpe-76-170-133-160.socal.res.rr.com ([76.170.133.160] helo=[10.0.1.6])
	by elle.fallingsnow.net with esmtpa (Exim 4.69)
	(envelope-from <evan@fallingsnow.net>)
	id 1O9of8-0007MW-5V
	for ruby-ffi@googlegroups.com; Wed, 05 May 2010 17:10:03 -0700
Mime-Version: 1.0 (Apple Message framework v1077)
From: Evan Phoenix <evan@fallingsnow.net>
In-Reply-To: <499b1ee0-00c4-4113-9b2e-70f50019d619@e2g2000yqn.googlegroups.com>
Date: Wed, 5 May 2010 17:09:57 -0700
Message-Id: <DFF7540A-91CA-43B0-9C8F-6405C3315686@fallingsnow.net>
References: <499b1ee0-00c4-4113-9b2e-70f50019d619@e2g2000yqn.googlegroups.com>
To: ruby-ffi@googlegroups.com
X-Mailer: Apple Mail (2.1077)
X-SA-Exim-Connect-IP: 76.170.133.160
X-SA-Exim-Mail-From: evan@fallingsnow.net
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on elle.fallingsnow.net
X-Spam-Level: 
X-Spam-Status: No, score=-4.2 required=5.0 tests=ALL_TRUSTED,AWL,BAYES_00
	autolearn=ham version=3.2.5
Subject: Re: [ruby-ffi] Proper memory management
X-SA-Exim-Version: 4.2.1 (built Wed, 25 Jun 2008 17:14:11 +0000)
X-SA-Exim-Scanned: Yes (on elle.fallingsnow.net)
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	best guess record for domain of evan@fallingsnow.net designates 67.43.164.196 
	as permitted sender) smtp.mail=evan@fallingsnow.net
X-Original-Sender: evan@fallingsnow.net
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: quoted-printable

You have hit on the #1 problem with ruby's finalizer API. You've =
referenced the object you want to finalize with the closure for =
finalizing it, thus preventing it from ever being collected.

AutoPointer provides an API to do this exact thing, you're better of =
using that than trying to use finalizers directly.

If you must use a finalizer, here is what you should do instead

def Vector.create_finalizer(ptr)
   lambda { |id| GSLng.backend.gsl_free_vector(ptr) }
end

def Vector.define_finalizer(self, ptr)
   ObjectSpace.define_finalizer(self, create_finalizer(ptr))
end

 - Evan

On May 5, 2010, at 3:56 PM, v01d wrote:

> Hi,
> I'm in the process of developing a Ruby binding to the GSL numerical
> library using FFI. Recently I stumbled upon a problematic issue
> regarding memory management and finalizers.
>=20
> Since the GSL library allows creation and destruction of instances
> like this:
> gsl_vector* ptr =3D gsl_alloc_vector(size_t n);
> ...
> gsl_free_vector(ptr);
>=20
> Then, in Ruby I do something like this:
>=20
> class Vector
>  def initialize(n)
>    @ptr =3D GSLng.backend.gsl_alloc_vector(n)
>    Vector.define_finalizer(self, @ptr)
>  end
>=20
>  def Vector.define_finalizer(self, ptr)
>    ObjectSpace.define_finalizer(self, lambda {|id|
> GSLng.backend.gsl_free_vector(ptr)})
>  end
> end
>=20
> The problem is that if later I instatiante a Vector inside a loop,
> like:
> 10000.times do
>  Vector.new(3)
> end
>=20
> This obviously eats a lot of memory until GC runs. Now, if I do:
> 10000.times do
>  Vector.new(3)
>  GC.start
> end
>=20
> the memory that the Vector instances themselves occupy is freed but
> the finalizer is not called (it is later called at program end),
> therefore all of the memory allocated through gsl_alloc_vector() is
> sitting there until program ends.
>=20
> I know that Ruby doesn't guarantee that finalizers are called in any
> particular moment (even after GC.start, which I thought would
> suffice). So what I'm asking probably is not really related to FFI
> itself, but I wanted to ask here since I imagined this would be a
> common pattern among FFI users. The question is then: is there a
> better way to manage this type of memory? I obviously cant use the
> transaction-like pattern (like File.open) since for a Vector that
> wouldn't make sense. It would be ideal to make the gsl_vector_free
> call when the actual Vector class is free'd. Maybe I need to go to a
> lower level for this and use the C api to register this call in the
> "free" function for this class, but that would be overkill since I
> wanted to avoid using C altogether.
>=20
> Thank you!
>=20

