Delivered-To: headius@headius.com
Received: by 10.114.184.4 with SMTP id h4cs37083waf;
        Thu, 10 Dec 2009 19:30:49 -0800 (PST)
Received: by 10.142.5.31 with SMTP id 31mr495348wfe.78.1260502249219;
        Thu, 10 Dec 2009 19:30:49 -0800 (PST)
Return-Path: <357whSwkJCBED3vz994v8x3rz2.t538BsF-wwzx55x2vx85B69.t53@listserv.bounces.google.com>
Received: from mail-pw0-f68.google.com (mail-pw0-f68.google.com [209.85.160.68])
        by mx.google.com with ESMTP id 11si3265236pzk.52.2009.12.10.19.30.49;
        Thu, 10 Dec 2009 19:30:49 -0800 (PST)
Received-SPF: pass (google.com: domain of 357whSwkJCBED3vz994v8x3rz2.t538BsF-wwzx55x2vx85B69.t53@listserv.bounces.google.com designates 209.85.160.68 as permitted sender) client-ip=209.85.160.68;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 357whSwkJCBED3vz994v8x3rz2.t538BsF-wwzx55x2vx85B69.t53@listserv.bounces.google.com designates 209.85.160.68 as permitted sender) smtp.mail=357whSwkJCBED3vz994v8x3rz2.t538BsF-wwzx55x2vx85B69.t53@listserv.bounces.google.com
Received: by pwj20 with SMTP id 20sf193487pwj.27
        for <headius@headius.com>; Thu, 10 Dec 2009 19:30:48 -0800 (PST)
Received: by 10.141.124.18 with SMTP id b18mr76783rvn.20.1260502247919;
        Thu, 10 Dec 2009 19:30:47 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.141.14.15 with SMTP id r15ls343063rvi.1.p; Thu, 10 Dec 2009 
	19:30:46 -0800 (PST)
Received: by 10.141.124.4 with SMTP id b4mr116043rvn.17.1260502246695;
        Thu, 10 Dec 2009 19:30:46 -0800 (PST)
Received: by 10.141.124.4 with SMTP id b4mr116042rvn.17.1260502246680;
        Thu, 10 Dec 2009 19:30:46 -0800 (PST)
Return-Path: <wmeissner@gmail.com>
Received: from mail-pw0-f46.google.com (mail-pw0-f46.google.com [209.85.160.46])
        by gmr-mx.google.com with ESMTP id 1si286506pxi.1.2009.12.10.19.30.45;
        Thu, 10 Dec 2009 19:30:45 -0800 (PST)
Received-SPF: pass (google.com: domain of wmeissner@gmail.com designates 209.85.160.46 as permitted sender) client-ip=209.85.160.46;
Received: by pwj16 with SMTP id 16so371732pwj.25
        for <ruby-ffi@googlegroups.com>; Thu, 10 Dec 2009 19:30:45 -0800 (PST)
MIME-Version: 1.0
Received: by 10.141.91.10 with SMTP id t10mr519337rvl.72.1260502245539; Thu, 
	10 Dec 2009 19:30:45 -0800 (PST)
In-Reply-To: <68e5b602-e003-4f4c-b035-4fa667513107@j19g2000yqk.googlegroups.com>
References: <68e5b602-e003-4f4c-b035-4fa667513107@j19g2000yqk.googlegroups.com>
Date: Fri, 11 Dec 2009 13:30:45 +1000
Message-ID: <4ccee320912101930t75f59ee3v71eeecb6e0224a84@mail.gmail.com>
Subject: Re: [ruby-ffi] 2D arrays
From: Wayne Meissner <wmeissner@gmail.com>
To: ruby-ffi@googlegroups.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of wmeissner@gmail.com designates 209.85.160.46 as permitted sender) 
	smtp.mail=wmeissner@gmail.com; dkim=pass (test mode) header.i=@gmail.com
X-Original-Sender: wmeissner@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/378467705717660e
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/211319cb9a1738b8
Sender: ruby-ffi@googlegroups.com
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

There is currently no way to declare 2D arrays.

One work around for a small struct like that is to declare 4 arrays.
e.g.

class ALLEGRO_TRANSFORM < FFI::Struct
   layout :m0, [:float, 4], :m1, [:float, 4], :m2, [:float, 4], :m3, [:floa=
t, 4]
end

Then instead of accessing the second element of the first array as
[:m][0][1], it would be [:m0][1]

Kinda messy, but its what you will have to do for now.

Please file an issue at http://github.com/ffi/ffi/issues so this will
can get implemented at some stage.

2009/12/11 galdor <khaelin@gmail.com>:
> Hi,
>
> I'm trying to bind the following structure:
>
> struct ALLEGRO_TRANSFORM {
> =A0 float m[4][4];
> };
>
> But with the following FFI declaration:
>
> class ALLEGRO_TRANSFORM < FFI::Struct
> =A0 =A0layout :m, [[:float, 4], 4]
> end
>
> I get the following error:
>
> /usr/lib/ruby/gems/1.9.1/gems/ffi-0.6.0pre/lib/ffi/struct.rb:177:in
> `add_array': undefined method `alignment' for [:float, 4]:Array
> (NoMethodError)
> =A0 =A0 =A0 =A0from /usr/lib/ruby/gems/1.9.1/gems/ffi-0.6.0pre/lib/ffi/
> struct.rb:177:in `array_layout'
> =A0 =A0 =A0 =A0from /usr/lib/ruby/gems/1.9.1/gems/ffi-0.6.0pre/lib/ffi/
> struct.rb:106:in `layout'
> =A0 =A0 =A0 =A0from lib/allegro/ffi_allegro.rb:558:in
> `<class:ALLEGRO_TRANSFORM>'
> =A0 =A0 =A0 =A0from lib/allegro/ffi_allegro.rb:557:in `<module:Allegro>'
> =A0 =A0 =A0 =A0from lib/allegro/ffi_allegro.rb:4:in `<main>'
>
> Is there a specific syntax for 2D arrays ?
>
> Regards,
>
> Nicolas Martyanoff
>
