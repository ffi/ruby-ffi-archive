Delivered-To: headius@headius.com
Received: by 10.229.186.206 with SMTP id ct14cs27421qcb;
        Tue, 11 May 2010 15:33:13 -0700 (PDT)
Received: by 10.216.89.84 with SMTP id b62mr3963955wef.226.1273617192387;
        Tue, 11 May 2010 15:33:12 -0700 (PDT)
Return-Path: <ruby-ffi+bncCPS3mqGKCBCktqffBBoEDzVdhA@googlegroups.com>
Received: from mail-ww0-f62.google.com (mail-ww0-f62.google.com [74.125.82.62])
        by mx.google.com with ESMTP id v81si10108637wei.83.2010.05.11.15.33.10;
        Tue, 11 May 2010 15:33:11 -0700 (PDT)
Received-SPF: pass (google.com: domain of ruby-ffi+bncCPS3mqGKCBCktqffBBoEDzVdhA@googlegroups.com designates 74.125.82.62 as permitted sender) client-ip=74.125.82.62;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncCPS3mqGKCBCktqffBBoEDzVdhA@googlegroups.com designates 74.125.82.62 as permitted sender) smtp.mail=ruby-ffi+bncCPS3mqGKCBCktqffBBoEDzVdhA@googlegroups.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by wwc33 with SMTP id 33sf2500231wwc.7
        for <headius@headius.com>; Tue, 11 May 2010 15:33:10 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:received:received
         :received:received-spf:received:mime-version:received:received
         :in-reply-to:references:date:message-id:subject:from:to
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :sender:list-subscribe:list-unsubscribe:content-type;
        bh=n2Skc1s2Kw620lRIyuV1lTx1Yfc1cW3ivsgRaBZHcyo=;
        b=hjD+VcaMsCPDMOk1ub8B6GcqYq3IgMY5M/08Y5MB38Uy2+qzeJgGKVliqMvs8AcaF/
         CXjy3K5tRsjc7OGH51l9xbU1V5uJA2KUaIrAr05DcHshiC1KmuN7scW04iz7nn/I2mLG
         fSnBOqluMkVw/DJk3seSGnjkCS+MXZfoejLD0=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:in-reply-to:references:date
         :message-id:subject:from:to:x-original-authentication-results
         :x-original-sender:reply-to:precedence:mailing-list:list-id
         :list-post:list-help:list-archive:sender:list-subscribe
         :list-unsubscribe:content-type;
        b=JPC7oVzX/fITyc/dQ6YVomVVGvthUGcgTe0RP4p1KZ6SyfmOBucioIoG9T1YGYd3VN
         mYveW8tI/qgJCFnzF/oXM9kpPh+RnyrGe16LRAulOXgol2Q8oCTxZ+7EgaQNfHpAHUQC
         Io3j0hXMcTtUTNE4QlKBocMqI6nZdXHpLTM2Q=
Received: by 10.223.132.216 with SMTP id c24mr745170fat.2.1273617189012;
        Tue, 11 May 2010 15:33:09 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.213.37.73 with SMTP id w9ls5406096ebd.0.p; Tue, 11 May 2010 
	15:33:07 -0700 (PDT)
Received: by 10.213.37.193 with SMTP id y1mr847562ebd.19.1273617186596;
        Tue, 11 May 2010 15:33:06 -0700 (PDT)
Received: by 10.213.37.193 with SMTP id y1mr847561ebd.19.1273617186559;
        Tue, 11 May 2010 15:33:06 -0700 (PDT)
Return-Path: <wmeissner@gmail.com>
Received: from mail-pz0-f184.google.com (mail-pz0-f184.google.com [209.85.222.184])
        by gmr-mx.google.com with ESMTP id 12si465927ewy.6.2010.05.11.15.33.05;
        Tue, 11 May 2010 15:33:05 -0700 (PDT)
Received-SPF: pass (google.com: domain of wmeissner@gmail.com designates 209.85.222.184 as permitted sender) client-ip=209.85.222.184;
Received: by pzk14 with SMTP id 14so1409582pzk.25
        for <ruby-ffi@googlegroups.com>; Tue, 11 May 2010 15:33:04 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.141.106.14 with SMTP id i14mr4282570rvm.259.1273617184365; 
	Tue, 11 May 2010 15:33:04 -0700 (PDT)
Received: by 10.141.51.6 with HTTP; Tue, 11 May 2010 15:33:04 -0700 (PDT)
In-Reply-To: <383FE988-D919-4629-AD7C-E115AB5315CB@mac.com>
References: <383FE988-D919-4629-AD7C-E115AB5315CB@mac.com>
Date: Wed, 12 May 2010 08:33:04 +1000
Message-ID: <AANLkTimXt6BzR1H-xcRkr31EMs3YB2MldzKsmXgo46FJ@mail.gmail.com>
Subject: Re: [ruby-ffi] wiki update on pointers
From: Wayne Meissner <wmeissner@gmail.com>
To: ruby-ffi@googlegroups.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of wmeissner@gmail.com designates 209.85.222.184 as permitted sender) 
	smtp.mail=wmeissner@gmail.com; dkim=pass (test mode) header.i=@gmail.com
X-Original-Sender: wmeissner@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1

It looks pretty good.

A couple of nits:

1) The LibC module can just use:
   ffi_lib FFI::Library::LIBC

ffi knows that means "whatever the libc on this system is supposed to
be", since its a pretty common library people want to map in, and the
name differs across platforms (e.g. on linux, its libc.so.6, macos is
libc.dylib, windows is msvcrt.dll, aix is something weird, etc.

2) The first arg to MemoryPointer.new can in fact be either a symbol,
or anything that responds to #size.
e.g.
  class S < FFI::Struct
    layout :i, :int
  end
  FFI::MemoryPointer.new(S, 1, false)  # Will allocate space for one
instance of S, without clearing the memory first

3) The bit at the top about copying pointers is ... confusing.  A
pointer is merely a Fixnum that holds a native memory address, so
there is no need to do anything special to "copy" a pointer - just
assign it to a like you would any other Fixnum.  Think of "Pointer" as
"fixnum with methods to read/write the native memory at the address".

The example:

b = MemoryPointer.new(:pointer).write_pointer(some_pointer.read_pointer)

Doesn't do what you think.  It reads a pointer from the memory
pointed-to by some_pointer, allocates a new chunk of memory, and
writes that pointer value into that memory - it doesn't copy the value
of some_pointer to a new pointer.








On 12 May 2010 02:02, Chuck Remes <cremes.devlist@mac.com> wrote:
> I just wrote an update to the wiki page on pointers at http://wiki.github.com/ffi/ffi/pointers
>
> I'd appreciate it if someone more knowledgeable would check it over (the bottom section under the sub-heading) and verify that what I wrote is correct. It seems to be working for me but I've been wrong before! :)
>
> cr
>
>
