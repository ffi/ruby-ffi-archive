Delivered-To: headius@headius.com
Received: by 10.150.226.5 with SMTP id y5cs56628ybg;
        Thu, 6 May 2010 15:14:18 -0700 (PDT)
Received: by 10.140.252.10 with SMTP id z10mr7183404rvh.45.1273184057407;
        Thu, 06 May 2010 15:14:17 -0700 (PDT)
Return-Path: <ruby-ffi+bncCJ2jt8vbBhC2_ozfBBoEMohY8Q@googlegroups.com>
Received: from mail-pv0-f190.google.com (mail-pv0-f190.google.com [74.125.83.190])
        by mx.google.com with ESMTP id b7si2975964rvn.63.2010.05.06.15.14.16;
        Thu, 06 May 2010 15:14:16 -0700 (PDT)
Received-SPF: pass (google.com: domain of ruby-ffi+bncCJ2jt8vbBhC2_ozfBBoEMohY8Q@googlegroups.com designates 74.125.83.190 as permitted sender) client-ip=74.125.83.190;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncCJ2jt8vbBhC2_ozfBBoEMohY8Q@googlegroups.com designates 74.125.83.190 as permitted sender) smtp.mail=ruby-ffi+bncCJ2jt8vbBhC2_ozfBBoEMohY8Q@googlegroups.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by pvc7 with SMTP id 7sf87494pvc.7
        for <headius@headius.com>; Thu, 06 May 2010 15:14:16 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:received:received
         :received:received:received-spf:mime-version:received
         :x-proofpoint-spam-details:from:subject:date:message-id:to:x-mailer
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :sender:list-subscribe:list-unsubscribe:content-transfer-encoding
         :content-type;
        bh=W6GjuK+sDUWOXOIihsRqtLn0HCLzqpxn9NogEXhp1GY=;
        b=SLp96rGowMi/7muZtRUzM6dDj2KI5aM+tjxTtYgzP+IgbUuSqTTtf6FOjBWir74UYb
         1ZXRx64bLDBp2UijC92VQNMAZbqjn+vyc0/yvyP7DDVVRdWcUT9b8VVvaJdUgydnW0cU
         qkcEAwGamrdSxDe+w/IYqtILIjNl8AdLgi32A=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:x-proofpoint-spam-details
         :from:subject:date:message-id:to:x-mailer
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :sender:list-subscribe:list-unsubscribe:content-transfer-encoding
         :content-type;
        b=BFxxnsYmevgIKWnwesuoJT519+9ZyYuwvSWBJfkuGRe3+4iySZdM0nJz/3LngsOUpH
         tAzzN5p+qb+EABoPHQB1GKcvtUwUhRaKKO3fryI4Rozoho3LNpnjVT7n1lGGjh6R7tqR
         EhoEJe0tXJrR2GqzChGD1kdcNlnSJhybaI2j0=
Received: by 10.141.4.8 with SMTP id g8mr1369374rvi.7.1273184054212;
        Thu, 06 May 2010 15:14:14 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.140.255.17 with SMTP id c17ls7195951rvi.2.p; Thu, 06 May 2010 
	15:14:13 -0700 (PDT)
Received: by 10.140.83.37 with SMTP id g37mr43924rvb.11.1273184053377;
        Thu, 06 May 2010 15:14:13 -0700 (PDT)
Received: by 10.114.18.23 with SMTP id 23mr2629830war.14.1273165537199;
        Thu, 06 May 2010 10:05:37 -0700 (PDT)
Received: by 10.114.18.23 with SMTP id 23mr2629829war.14.1273165537171;
        Thu, 06 May 2010 10:05:37 -0700 (PDT)
Return-Path: <cremes.devlist@mac.com>
Received: from asmtpout027.mac.com (asmtpout027.mac.com [17.148.16.102])
        by gmr-mx.google.com with ESMTP id 25si222309pzk.12.2010.05.06.10.05.37;
        Thu, 06 May 2010 10:05:37 -0700 (PDT)
Received-SPF: pass (google.com: domain of cremes.devlist@mac.com designates 17.148.16.102 as permitted sender) client-ip=17.148.16.102;
MIME-version: 1.0
Received: from [192.168.0.101] ([76.8.86.186])
 by asmtp027.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec
 16 2008; 32bit)) with ESMTPSA id <0L20003MUCTBW400@asmtp027.mac.com> for
 ruby-ffi@googlegroups.com; Thu, 06 May 2010 10:05:36 -0700 (PDT)
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0
 ipscore=0 phishscore=0 bulkscore=0 adultscore=0 classifier=spam adjust=0
 reason=mlx engine=5.0.0-1004140000 definitions=main-1005060106
From: Chuck Remes <cremes.devlist@mac.com>
Subject: [ruby-ffi] MemoryPointers for ints?
Date: Thu, 06 May 2010 12:05:32 -0500
Message-id: <58AC3CE2-F93D-4061-81B8-FE0F1FD0826C@mac.com>
To: ruby-ffi@googlegroups.com
X-Mailer: Apple Mail (2.1078)
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of cremes.devlist@mac.com designates 17.148.16.102 as permitted 
	sender) smtp.mail=cremes.devlist@mac.com
X-Original-Sender: cremes.devlist@mac.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-transfer-encoding: 7BIT
Content-type: text/plain; charset=us-ascii

I'm just getting started with FFI, so forgive the newbie questions.

I have a function prototype like so:

int zmq_setsockopt (void *socket, int option_name, const void *option_value, size_t option_len);

I've wrapped the library containing this function using the following #attach_function call:

attach_function :zmq_setsockopt, [:pointer, :int, :pointer, :int], :int

In C, this is called like this:

setsockopt (context, ZMQ_SUBSCRIBE, "xy.z\x00", 5);

OR

int64_t rate = 10000;
setsockopt (context, ZMQ_RATE, &rate, sizeof (rate));

In my ruby code, I think I need to create a MemoryPointer of some kind to pass as the 3rd parameter. The examples show the third parameter is sometimes an integer (100) or a string ("topic.string").

I know how to create a pointer from a string using MemoryPointer.from_string("topic.string") but I don't see how to handle the case when an integer is passed in.

Related to this, I don't see how to execute #sizeof.

I promise to update the wiki if the answers can prove generally useful.

cr

