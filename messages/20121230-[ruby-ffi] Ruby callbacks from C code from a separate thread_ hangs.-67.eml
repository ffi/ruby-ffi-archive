X-Mozilla-Keys: notjunk $notjunk
Delivered-To: headius@headius.com
Received: by 10.112.45.130 with SMTP id n2csp449691lbm;
        Sun, 30 Dec 2012 00:10:26 -0800 (PST)
X-Received: by 10.220.154.2 with SMTP id m2mr58851208vcw.18.1356855026043;
        Sun, 30 Dec 2012 00:10:26 -0800 (PST)
Return-Path: <ruby-ffi+bncBCVI5FWV34LRB4HN76DAKGQE6PU76MA@googlegroups.com>
Received: from mail-vb0-f64.google.com (mail-vb0-f64.google.com [209.85.212.64])
        by mx.google.com with ESMTPS id ca3si40147660vdc.147.2012.12.30.00.10.25
        (version=TLSv1/SSLv3 cipher=OTHER);
        Sun, 30 Dec 2012 00:10:26 -0800 (PST)
Received-SPF: pass (google.com: domain of ruby-ffi+bncBCVI5FWV34LRB4HN76DAKGQE6PU76MA@googlegroups.com designates 209.85.212.64 as permitted sender)
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncBCVI5FWV34LRB4HN76DAKGQE6PU76MA@googlegroups.com designates 209.85.212.64 as permitted sender) smtp.mail=ruby-ffi+bncBCVI5FWV34LRB4HN76DAKGQE6PU76MA@googlegroups.com; dkim=pass header.i=@gmail.com
Received: by mail-vb0-f64.google.com with SMTP id fq11sf6828796vbb.29
        for <headius@headius.com>; Sun, 30 Dec 2012 00:10:25 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=20120806;
        h=x-received:x-beenthere:x-received:x-received:date:from:to
         :message-id:subject:mime-version:x-original-sender:reply-to
         :precedence:mailing-list:list-id:x-google-group-id:list-post
         :list-help:list-archive:sender:list-subscribe:list-unsubscribe
         :content-type;
        bh=VUHYE0co27TgyWWfjVjTx12MZHp4aLNU/bsXKp44a94=;
        b=EBg8xuKW6JN1jYej7sSSH9Hb5m9QQiu/gQYbeAlRaDuoNXbxMU4NFHfCrIyAHdav1r
         T6AVSXWuzWBKDjlVesUM/jZ/6KzWwlD7igH8NfQh3Cyyq7s+UzEnOR/MJUSDTcwZMF2I
         4V9qGQeFDJahecfNIVl09QJ3xl6+PLNq2A8LYWHHa4YlR5VLG2O7No4ITkgIR2JAtGG6
         0k31I0uodvdZXbScCeqPdpFNhJ/VtDIRFxlWxViqY3wgNwwHT/O5SVOdgaBCaKXJtspq
         Oh/LcM5Zq7IyTZkPUuB6h7JBeQYeXlmeFXBPfuBPKwFLHWS0Vr90pBB1qC+ToQEMozcy
         o/Ew==
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=x-received:x-beenthere:x-received:x-received:date:from:to
         :message-id:subject:mime-version:x-original-sender:reply-to
         :precedence:mailing-list:list-id:x-google-group-id:list-post
         :list-help:list-archive:sender:list-subscribe:list-unsubscribe
         :content-type;
        bh=VUHYE0co27TgyWWfjVjTx12MZHp4aLNU/bsXKp44a94=;
        b=0FWLtHKbhbW+SxZG++q+d4myDnmSrgidCzOxopujzT0lQthehvDFFpX2LJ8tHPjqNZ
         FN4gwI08rvl/bXwR2PzZ6Xra8Vyed4QVuF5bYHuhONCYwV42giUznpX6Iyr2r/jM4E6P
         fvFASg7oix/Q9YYTJUW60zYoEWI+IfSXvGwBZEOyDNgW0avKou9EOqUvu2MP2veR1XpP
         mAkCf697G4ZSjvbQ6gKdbicW4FQ32eb9mwbIH60uXdyHqPmxBbk6pE47jsaaiYd0M4eT
         JSQw+lhfLlJ+bpf++CxfRBI3PzV0RaWqC+/6Urb8aBK5WfXIwBIhQI/fu+cc2pCbKv6H
         /tug==
X-Received: by 10.50.87.165 with SMTP id az5mr12786586igb.1.1356855025231;
        Sun, 30 Dec 2012 00:10:25 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.50.104.199 with SMTP id gg7ls12864904igb.34.canary; Sun, 30
 Dec 2012 00:10:24 -0800 (PST)
X-Received: by 10.50.0.148 with SMTP id 20mr33677098ige.3.1356855024888;
        Sun, 30 Dec 2012 00:10:24 -0800 (PST)
Received: by 10.50.192.167 with SMTP id hh7msigc;
        Sat, 29 Dec 2012 23:52:49 -0800 (PST)
X-Received: by 10.50.37.242 with SMTP id b18mr12772145igk.6.1356853968945;
        Sat, 29 Dec 2012 23:52:48 -0800 (PST)
Date: Sat, 29 Dec 2012 23:52:48 -0800 (PST)
From: Avishek Sen Gupta <avishek.sen.gupta@gmail.com>
To: ruby-ffi@googlegroups.com
Message-Id: <c7031aa6-3d2f-4562-9100-5a04f127374d@googlegroups.com>
Subject: [ruby-ffi] Ruby callbacks from C code from a separate thread, hangs.
MIME-Version: 1.0
X-Original-Sender: avishek.sen.gupta@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
X-Google-Group-Id: 238405446264
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, <mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, <mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>,
 <mailto:googlegroups-manage+238405446264+unsubscribe@googlegroups.com>
Content-Type: multipart/alternative; 
	boundary="----=_Part_1447_19177349.1356853968157"

------=_Part_1447_19177349.1356853968157
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit



Hello!
I'm currently working on some code where I'm utilising FFI::Function 
objects referenced by function pointers in a C struct. The C code expects 
the callbacks to be synchronous; however, a few times, the call is made 
from a separate thread.
This leads FFI to grab a mutex and wait for the callback's done property to 
be set to true. However, my callbacks return values in a synchronous 
fashion. Thus, the FFI call hangs as it keeps spinning waiting for the 
(supposedly) asynchronous callback to complete.
What would you suggest I do to signal the end of the callback in the Ruby 
code?

Thanks!

------=_Part_1447_19177349.1356853968157
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: 7bit

<p style="margin-bottom: 15px; color: rgb(51, 51, 51); font-family: Helvetica, arial, freesans, clean, sans-serif; line-height: 20px; background-color: rgb(251, 251, 251);">Hello!<br>I'm currently working on some code where I'm utilising FFI::Function objects referenced by function pointers in a C struct. The C code expects the callbacks to be synchronous; however, a few times, the call is made from a separate thread.<br>This leads FFI to grab a mutex and wait for the callback's done property to be set to true. However, my callbacks return values in a synchronous fashion. Thus, the FFI call hangs as it keeps spinning waiting for the (supposedly) asynchronous callback to complete.<br>What would you suggest I do to signal the end of the callback in the Ruby code?</p><p style="margin-top: 15px; color: rgb(51, 51, 51); font-family: Helvetica, arial, freesans, clean, sans-serif; line-height: 20px; background-color: rgb(251, 251, 251); margin-bottom: 0px !important;">Thanks!</p>
------=_Part_1447_19177349.1356853968157--
