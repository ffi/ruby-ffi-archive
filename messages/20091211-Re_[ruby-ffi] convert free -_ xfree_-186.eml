Delivered-To: headius@headius.com
Received: by 10.114.184.4 with SMTP id h4cs85896waf;
        Fri, 11 Dec 2009 18:23:23 -0800 (PST)
Received: by 10.114.215.36 with SMTP id n36mr1275035wag.110.1260584603258;
        Fri, 11 Dec 2009 18:23:23 -0800 (PST)
Return-Path: <3mv4iSwkJCAc3tlpzzulynthps.jvty1i5-mmpnvvnslnyv1wz.jvt@listserv.bounces.google.com>
Received: from mail-pz0-f152.google.com (mail-pz0-f152.google.com [209.85.222.152])
        by mx.google.com with ESMTP id 26si5661762pzk.37.2009.12.11.18.23.23;
        Fri, 11 Dec 2009 18:23:23 -0800 (PST)
Received-SPF: pass (google.com: domain of 3mv4iSwkJCAc3tlpzzulynthps.jvty1i5-mmpnvvnslnyv1wz.jvt@listserv.bounces.google.com designates 209.85.222.152 as permitted sender) client-ip=209.85.222.152;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 3mv4iSwkJCAc3tlpzzulynthps.jvty1i5-mmpnvvnslnyv1wz.jvt@listserv.bounces.google.com designates 209.85.222.152 as permitted sender) smtp.mail=3mv4iSwkJCAc3tlpzzulynthps.jvty1i5-mmpnvvnslnyv1wz.jvt@listserv.bounces.google.com
Received: by pzk16 with SMTP id 16sf874268pzk.22
        for <headius@headius.com>; Fri, 11 Dec 2009 18:23:23 -0800 (PST)
Received: by 10.142.248.29 with SMTP id v29mr150321wfh.37.1260584602164;
        Fri, 11 Dec 2009 18:23:22 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.143.154.13 with SMTP id g13ls663929wfo.0.p; Fri, 11 Dec 2009 
	18:23:21 -0800 (PST)
Received: by 10.142.74.5 with SMTP id w5mr384253wfa.12.1260584601142;
        Fri, 11 Dec 2009 18:23:21 -0800 (PST)
Received: by 10.142.74.5 with SMTP id w5mr384252wfa.12.1260584601124;
        Fri, 11 Dec 2009 18:23:21 -0800 (PST)
Return-Path: <wmeissner@gmail.com>
Received: from mail-px0-f180.google.com (mail-px0-f180.google.com [209.85.216.180])
        by gmr-mx.google.com with ESMTP id 1si525646pxi.1.2009.12.11.18.23.20;
        Fri, 11 Dec 2009 18:23:20 -0800 (PST)
Received-SPF: pass (google.com: domain of wmeissner@gmail.com designates 209.85.216.180 as permitted sender) client-ip=209.85.216.180;
Received: by pxi10 with SMTP id 10so1071196pxi.13
        for <ruby-ffi@googlegroups.com>; Fri, 11 Dec 2009 18:23:20 -0800 (PST)
MIME-Version: 1.0
Received: by 10.141.91.10 with SMTP id t10mr1361923rvl.72.1260584599957; Fri, 
	11 Dec 2009 18:23:19 -0800 (PST)
In-Reply-To: <20091211104804.fc09f471.jon.forums@gmail.com>
References: <20091211104804.fc09f471.jon.forums@gmail.com>
Date: Sat, 12 Dec 2009 12:23:19 +1000
Message-ID: <4ccee320912111823q95bbfdrbc463748ebbdfd91@mail.gmail.com>
Subject: Re: [ruby-ffi] convert free -> xfree?
From: Wayne Meissner <wmeissner@gmail.com>
To: ruby-ffi@googlegroups.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of wmeissner@gmail.com designates 209.85.216.180 as permitted sender) 
	smtp.mail=wmeissner@gmail.com; dkim=pass (test mode) header.i=@gmail.com
X-Original-Sender: wmeissner@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/50473ed6cbbbc685
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/e30f99b1db1be6cb
Sender: ruby-ffi@googlegroups.com
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Yep, a couple of those should have been xfree (the Buffer and
MemoryPointer ones).  The rest are allocated from
calloc/malloc/strdup, so they use stdlib free(3).

Fixed.  Thanks for pointing them out.

2009/12/12 Jon <jon.forums@gmail.com>:
> From http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/22727 in=
 the "Mixing runtime libraries" section the claim that you can mix msft c r=
untimes if
>
> * If you call ALLOC or ALLOC_N, use xfree and not free
> * Don't call sprintf or printf in an extension, instead use rb_f_sprintf/=
rb_vsprintf/rb_io_printf
>
> ...does it make sense to change these free's to xfree's (not libffi's dlm=
alloc?) in ruby-ffi?
>
>
> C:\Users\Jon\Documents\RubyDev\ffi-trunk>grep -Rn " free(" ext
>
> ext/ffi_c/Buffer.c:154: =A0 =A0 =A0 =A0free(ptr->storage);
> ext/ffi_c/ClosurePool.c:131: =A0 =A0 =A0 =A0free(memory->data);
> ext/ffi_c/ClosurePool.c:132: =A0 =A0 =A0 =A0free(memory);
> ext/ffi_c/ClosurePool.c:135: =A0 =A0free(pool);
> ext/ffi_c/ClosurePool.c:218: =A0 =A0free(block);
> ext/ffi_c/ClosurePool.c:219: =A0 =A0free(list);
> ext/ffi_c/libffi/src/dlmalloc.c:678: =A0free(void* p)
> ext/ffi_c/libffi/src/dlmalloc.c:857: =A0 =A0free(pool); =A0 =A0 // Can no=
w free the array (or not, if it is needed later)
> ext/ffi_c/MemoryPointer.c:137: =A0 =A0 =A0 =A0 =A0 =A0free(ptr->storage);
> ext/ffi_c/Type.c:162: =A0 =A0free(type->name);
>
>
