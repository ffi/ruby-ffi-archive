Delivered-To: headius@headius.com
Received: by 10.100.197.20 with SMTP id u20cs38275anf;
        Sat, 12 Dec 2009 20:22:15 -0800 (PST)
Received: by 10.100.56.12 with SMTP id e12mr4834241ana.106.1260678135603;
        Sat, 12 Dec 2009 20:22:15 -0800 (PST)
Return-Path: <39mskSwcJCNEF4xJARP39x58.zB9EHyL-2253BB3813EBHCF.zB9@listserv.bounces.google.com>
Received: from mail-yw0-f144.google.com (mail-yw0-f144.google.com [209.85.211.144])
        by mx.google.com with ESMTP id 21si1366878gxk.65.2009.12.12.20.22.15;
        Sat, 12 Dec 2009 20:22:15 -0800 (PST)
Received-SPF: pass (google.com: domain of 39mskSwcJCNEF4xJARP39x58.zB9EHyL-2253BB3813EBHCF.zB9@listserv.bounces.google.com designates 209.85.211.144 as permitted sender) client-ip=209.85.211.144;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 39mskSwcJCNEF4xJARP39x58.zB9EHyL-2253BB3813EBHCF.zB9@listserv.bounces.google.com designates 209.85.211.144 as permitted sender) smtp.mail=39mskSwcJCNEF4xJARP39x58.zB9EHyL-2253BB3813EBHCF.zB9@listserv.bounces.google.com
Received: by ywh8 with SMTP id 8sf5116042ywh.3
        for <headius@headius.com>; Sat, 12 Dec 2009 20:22:15 -0800 (PST)
Received: by 10.91.215.18 with SMTP id s18mr757524agq.11.1260678134485;
        Sat, 12 Dec 2009 20:22:14 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.86.239.10 with SMTP id m10ls336388fgh.0.p; Sat, 12 Dec 2009 
	20:22:13 -0800 (PST)
Received: by 10.86.238.4 with SMTP id l4mr49611fgh.3.1260678133038;
        Sat, 12 Dec 2009 20:22:13 -0800 (PST)
Received: by 10.204.35.15 with SMTP id n15mr90588bkd.20.1260676999440;
        Sat, 12 Dec 2009 20:03:19 -0800 (PST)
Received: by 10.204.35.15 with SMTP id n15mr90587bkd.20.1260676999410;
        Sat, 12 Dec 2009 20:03:19 -0800 (PST)
Return-Path: <shawn42@gmail.com>
Received: from mail-bw0-f227.google.com (mail-bw0-f227.google.com [209.85.218.227])
        by gmr-mx.google.com with ESMTP id 18si185904bwz.5.2009.12.12.20.03.18;
        Sat, 12 Dec 2009 20:03:18 -0800 (PST)
Received-SPF: pass (google.com: domain of shawn42@gmail.com designates 209.85.218.227 as permitted sender) client-ip=209.85.218.227;
Received: by bwz27 with SMTP id 27so1375125bwz.1
        for <ruby-ffi@googlegroups.com>; Sat, 12 Dec 2009 20:03:18 -0800 (PST)
MIME-Version: 1.0
Received: by 10.204.7.195 with SMTP id e3mr1862163bke.118.1260676998143; Sat, 
	12 Dec 2009 20:03:18 -0800 (PST)
In-Reply-To: <p06240814c749ebd6e8f1@192.168.1.106>
References: <p06240810c749876100b5@192.168.1.106> <p06240814c749ebd6e8f1@192.168.1.106>
From: Shawn Anderson <shawn42@gmail.com>
Date: Sat, 12 Dec 2009 23:02:58 -0500
Message-ID: <c410d2f20912122002k784ef410x42e33f9d44c2ee32@mail.gmail.com>
Subject: Re: [ruby-ffi] basic question: function expects pointer to string 
	buffer, returns string
To: ruby-ffi@googlegroups.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/a9128eed1d8e83c7
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/7b8a901a92426326
Sender: ruby-ffi@googlegroups.com
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
Content-Type: multipart/alternative; boundary=00151750e950a6a085047a943c94

--00151750e950a6a085047a943c94
Content-Type: text/plain; charset=ISO-8859-1

rdocs can be located here:
http://rdoc.info/projects/ffi/ffi

/Shawn

On Sat, Dec 12, 2009 at 8:08 PM, Stephen Bannasch <
stephen.bannasch@deanbrook.org> wrote:

> >I've started working on a Ruby FFI interface to the Vernier GoIO sensor
> interface products.
> >
> >See:
> >
> >  http://www.vernier.com/go/
> >  http://www.vernier.com/downloads/gosdk.html   *the SDK is public domain
> >
> >I've got a very basic question FFI question.
> >
> >I have a C++ function that expects a pointer to a string buffer and a
> int32 specifying the size of the buffer.
> >
> >The result of calling the function is a name of a connected device in the
> string buffer.
> >
> >How should the call be setup and then processed on return to generate a
> Ruby string.
> >
> >Here's the state of the code so far:  http://gist.github.com/254981
>
> Here's a simplification of how I solved the problem:
>
> I create a MemoryPointer pointing to a 256 byte buffer:
>
>  name = FFI::MemoryPointer.new(256)
>
> then call my function (also telling the function to limit the returned
> string to 255 chars):
>
>  GetDeviceName(name, 255)
>
> and print the returned string:
>
>  puts name.get_string(0)
>
>

--00151750e950a6a085047a943c94
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

rdocs can be located here:<br><a href=3D"http://rdoc.info/projects/ffi/ffi"=
>http://rdoc.info/projects/ffi/ffi</a><br><br>/Shawn<br><br><div class=3D"g=
mail_quote">On Sat, Dec 12, 2009 at 8:08 PM, Stephen Bannasch <span dir=3D"=
ltr">&lt;<a href=3D"mailto:stephen.bannasch@deanbrook.org">stephen.bannasch=
@deanbrook.org</a>&gt;</span> wrote:<br>

<blockquote class=3D"gmail_quote" style=3D"border-left: 1px solid rgb(204, =
204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;"><div class=3D"im"=
>&gt;I&#39;ve started working on a Ruby FFI interface to the Vernier GoIO s=
ensor interface products.<br>


&gt;<br>
&gt;See:<br>
&gt;<br>
&gt; =A0<a href=3D"http://www.vernier.com/go/" target=3D"_blank">http://www=
.vernier.com/go/</a><br>
&gt; =A0<a href=3D"http://www.vernier.com/downloads/gosdk.html" target=3D"_=
blank">http://www.vernier.com/downloads/gosdk.html</a> =A0 *the SDK is publ=
ic domain<br>
&gt;<br>
&gt;I&#39;ve got a very basic question FFI question.<br>
&gt;<br>
&gt;I have a C++ function that expects a pointer to a string buffer and a i=
nt32 specifying the size of the buffer.<br>
&gt;<br>
&gt;The result of calling the function is a name of a connected device in t=
he string buffer.<br>
&gt;<br>
&gt;How should the call be setup and then processed on return to generate a=
 Ruby string.<br>
&gt;<br>
&gt;Here&#39;s the state of the code so far: =A0<a href=3D"http://gist.gith=
ub.com/254981" target=3D"_blank">http://gist.github.com/254981</a><br>
<br>
</div>Here&#39;s a simplification of how I solved the problem:<br>
<br>
I create a MemoryPointer pointing to a 256 byte buffer:<br>
<br>
 =A0name =3D FFI::MemoryPointer.new(256)<br>
<br>
then call my function (also telling the function to limit the returned stri=
ng to 255 chars):<br>
<br>
 =A0GetDeviceName(name, 255)<br>
<br>
and print the returned string:<br>
<br>
 =A0puts name.get_string(0)<br>
<br>
</blockquote></div><br>

--00151750e950a6a085047a943c94--
