Delivered-To: headius@headius.com
Received: by 10.224.60.79 with SMTP id o15cs287319qah;
        Mon, 9 Aug 2010 14:41:56 -0700 (PDT)
Received: by 10.100.165.20 with SMTP id n20mr18483927ane.205.1281390116010;
        Mon, 09 Aug 2010 14:41:56 -0700 (PDT)
Return-Path: <ruby-ffi+bncCJS9pIKQHRCi7IHjBBoExyDNkA@googlegroups.com>
Received: from mail-gx0-f190.google.com (mail-gx0-f190.google.com [209.85.161.190])
        by mx.google.com with ESMTP id z8si12748570and.31.2010.08.09.14.41.54;
        Mon, 09 Aug 2010 14:41:55 -0700 (PDT)
Received-SPF: pass (google.com: domain of ruby-ffi+bncCJS9pIKQHRCi7IHjBBoExyDNkA@googlegroups.com designates 209.85.161.190 as permitted sender) client-ip=209.85.161.190;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncCJS9pIKQHRCi7IHjBBoExyDNkA@googlegroups.com designates 209.85.161.190 as permitted sender) smtp.mail=ruby-ffi+bncCJS9pIKQHRCi7IHjBBoExyDNkA@googlegroups.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by gxk26 with SMTP id 26sf12692007gxk.7
        for <headius@headius.com>; Mon, 09 Aug 2010 14:41:54 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:mime-version
         :received:received:date:in-reply-to:x-ip:references:user-agent
         :x-http-useragent:message-id:subject:from:to:x-original-sender
         :reply-to:precedence:mailing-list:list-id:list-post:list-help
         :list-archive:sender:list-subscribe:list-unsubscribe:content-type
         :content-transfer-encoding;
        bh=CzTr3YPzCbjBa3f1RCNLRBYkHR1TukTQvzL1Kd0ZAAE=;
        b=GEqKLdTux0jqhpQf63bcfYvGMBFXdnsJetqMOCMH5+6IA2LMMK+Rv2TQufiAnso7YE
         GcX5vKVM8YeOwPgsl+Cu5imIkD7viPYpaMnGHdIaSxAnEu1OhODT6NC7r9uxpmhvwh7Y
         rDkrUbA1eLWoJsyj9gsTCQ+DycjGOqK8GDr1g=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:mime-version:date:in-reply-to:x-ip:references
         :user-agent:x-http-useragent:message-id:subject:from:to
         :x-original-sender:reply-to:precedence:mailing-list:list-id
         :list-post:list-help:list-archive:sender:list-subscribe
         :list-unsubscribe:content-type:content-transfer-encoding;
        b=TyRRlnM8q1p89ko8qQzAG41DRvfWexZSaK6Ix8QvdYLWOsZ/SA+47IEVYn60GVvrv4
         t7r58mfWmor4j2uguRb4TwxpguLfsj3tVGXL+W6b4GoJcw8QfJARbH4kgPEeBzJC7RQK
         5XORRQ2xDustcnjUqxslyCZ5ic8zLgPIZjSOQ=
Received: by 10.90.67.7 with SMTP id p7mr2999756aga.0.1281390114406;
        Mon, 09 Aug 2010 14:41:54 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.90.17.28 with SMTP id 28ls355651agq.6.p; Mon, 09 Aug 2010 
	14:41:54 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.90.35.18 with SMTP id i18mr3009142agi.57.1281390110347; Mon, 
	09 Aug 2010 14:41:50 -0700 (PDT)
Received: by p7g2000yqa.googlegroups.com with HTTP; Mon, 9 Aug 2010 14:41:50 
	-0700 (PDT)
Date: Mon, 9 Aug 2010 14:41:50 -0700 (PDT)
In-Reply-To: <7D053193-4F5B-411D-80D1-A8AB6E61B5CE@mac.com>
X-IP: 138.162.8.57
References: <d600a9e9-c1d5-4883-8f91-9e6a9cd7cde5@d17g2000yqb.googlegroups.com> 
	<7D053193-4F5B-411D-80D1-A8AB6E61B5CE@mac.com>
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; 
	Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.1; .NET CLR 
	3.0.04506.648; .NET CLR 3.5.21022),gzip(gfe)
Message-ID: <5504cc05-2187-4b43-a4c5-0809e3308920@p7g2000yqa.googlegroups.com>
Subject: [ruby-ffi] Re: Problem retrieving struct from pointer
From: Joe <jm202@yahoo.com>
To: ruby-ffi <ruby-ffi@googlegroups.com>
X-Original-Sender: jm202@yahoo.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable



On Aug 5, 4:23=A0pm, Chuck Remes <cremes.devl...@mac.com> wrote:
> On Aug 5, 2010, at 8:12 AM, Joe wrote:
>
>
>
>
>
>
>
> > [snip]
> > typedef struct hba_AdapterAttributes {
> > =A0 =A0char =A0 =A0Manufacturer[64];
> > =A0 =A0char =A0 =A0SerialNumber[64];
> > =A0 =A0char =A0 =A0Model[256];
> > =A0 =A0char =A0 =A0ModelDescription[256];
> > =A0 =A0HBA_WWN NodeWWN;
> > =A0 =A0char =A0 =A0NodeSymbolicName[256];
> > =A0 =A0char =A0 =A0HardwareVersion[256];
> > =A0 =A0char =A0 =A0DriverVersion[256];
> > =A0 =A0char =A0 =A0OptionROMVersion[256];
> > =A0 =A0char =A0 =A0FirmwareVersion[256];
> > =A0 =A0HBA_UINT32 =A0 =A0 =A0VendorSpecificID;
> > =A0 =A0HBA_UINT32 =A0 =A0 =A0NumberOfPorts;
> > =A0 =A0char =A0 =A0DriverName[256];
> > } HBA_ADAPTERATTRIBUTES, *PHBA_ADAPTERATTRIBUTES;
>
> [snip]
> > ----------
>
> > In Ruby, I created the struct as so:
> > class HBA_AdapterAttributes < FFI::Struct
> > =A0 =A0layout :Manufacturer, :char
> > =A0 =A0:SerialNumber, :char,
> > =A0 =A0:Model, :char,
> > =A0 =A0:ModelDescription, :char,
> > =A0 =A0:NodeWWN, :uint8,
> > =A0 =A0:NodeSymbolicName, :char,
> > =A0 =A0:HardwareVersion, :char,
> > =A0 =A0:DriverVersion, :char,
> > =A0 =A0:OptionROMVersion, :char,
> > =A0 =A0:FirmwareVersion, :char,
> > =A0 =A0:VendorSpecificID, :uint32,
> > =A0 =A0:NumberOfPorts, :uint32,
> > =A0 =A0:DriverName, :char
> > end
>
> > Now def get_struct pointer
> > def get_struct pointer
> > =A0 =A0HBA::HBA_AdapterAttributes.new pointer
> > end
>
> > Calling the get_struct_pointer returns an array of fixnums, instead of
> > any string values.
>
> > Any idea what I'm overlooking here?
>
> Your FFI::Struct looks wrong for the char arrays/strings. You need to mak=
e sure the struct is allocating space for your string by telling it the len=
gth.
>
> class HBA_AdapterAttributes < FFI::Struct
> =A0 =A0 =A0 =A0 layout :Manufacturer, [:char, 64],
> =A0 =A0 =A0 =A0 :SerialNumber, [:char, 64],
> =A0 =A0 =A0 =A0 :Model, [:char, 256],
> =A0 =A0 =A0 =A0 :ModelDescription, [:char, 256],
> =A0 =A0 =A0 =A0 :NodeWWN, :uint8, # this probably needs to be another str=
uct
> =A0 =A0 =A0 =A0 :NodeSymbolicName, [:char, 256],
> =A0 =A0 =A0 =A0 :HardwareVersion, [:char, 256],
> =A0 =A0 =A0 =A0 :DriverVersion, [:char, 256],
> =A0 =A0 =A0 =A0 :OptionROMVersion, [:char, 256],
> =A0 =A0 =A0 =A0 :FirmwareVersion, [:char, 256],
> =A0 =A0 =A0 =A0 :VendorSpecificID, :uint32,
> =A0 =A0 =A0 =A0 :NumberOfPorts, :uint32,
> =A0 =A0 =A0 =A0 :DriverName, [:char, 256]
> end
>
> Check out the wiki athttp://wiki.github.com/ffi/ffi/structs
>
> Lots of good information there...
>
> cr- Hide quoted text -
>
> - Show quoted text -

Chuck, thanks for the response, it worked well.

Another question now if you don't mind.. you mentioned that for the
WWN, it needs to be a struct.  Just wondering how I would go about
doing this?

Previously, I passed a struct to the HBA_GetAdapterAttributes
function.  Since there isn't a function to do something similar, how
would I go about getting the string value of the Node WWN by using a
struct?

What I've tried is, created a new class to emulate the C struct:
  class HBA_Wwn < FFI::Struct
      layout :wwn, [:uint32, 8]
  end

In C:
  typedef struct HBA_wwn {
      HBA_UINT8 wwn[8];
  } HBA_WWN, *PHBA_WWN;

And from previously, I use the HBA_AdapterAttributes class, passing in
'attribs' as a struct.

  attribs =3D HBA::HBA_AdapterAttributes.new
  HBA::HBA_GetAdapterAttributes(i, attribs)
  wwnstruct =3D HBA::HBA_Wwn.new attribs[:NodeWWN].to_ptr
  puts "WWN: #{wwnstruct[:wwn]}"

Which isn't working out.  If you can't tell, I'm sort of hacking my
way through this :)

Thank you
