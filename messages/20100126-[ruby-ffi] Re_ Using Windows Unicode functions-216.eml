Delivered-To: headius@headius.com
Received: by 10.100.110.10 with SMTP id i10cs781916anc;
        Tue, 26 Jan 2010 08:37:04 -0800 (PST)
Received: by 10.90.21.24 with SMTP id 24mr2668462agu.23.1264523820562;
        Tue, 26 Jan 2010 08:37:00 -0800 (PST)
Return-Path: <3KhpfSwcHCO4ikjdYkgWcn.dUjhkRo-VVYWeeWbUWhekfi.Sec@groups.bounces.google.com>
Received: from mail-gx0-f197.google.com (mail-gx0-f197.google.com [209.85.217.197])
        by mx.google.com with ESMTP id 1si13702923gxk.14.2010.01.26.08.36.59;
        Tue, 26 Jan 2010 08:36:59 -0800 (PST)
Received-SPF: pass (google.com: domain of 3KhpfSwcHCO4ikjdYkgWcn.dUjhkRo-VVYWeeWbUWhekfi.Sec@groups.bounces.google.com designates 209.85.217.197 as permitted sender) client-ip=209.85.217.197;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 3KhpfSwcHCO4ikjdYkgWcn.dUjhkRo-VVYWeeWbUWhekfi.Sec@groups.bounces.google.com designates 209.85.217.197 as permitted sender) smtp.mail=3KhpfSwcHCO4ikjdYkgWcn.dUjhkRo-VVYWeeWbUWhekfi.Sec@groups.bounces.google.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by gxk21 with SMTP id 21sf12526353gxk.7
        for <headius@headius.com>; Tue, 26 Jan 2010 08:36:59 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:received:received
         :received:received-spf:received:mime-version:received:date
         :in-reply-to:x-ip:references:user-agent:x-http-useragent:message-id
         :subject:from:to:x-original-authentication-results:x-original-sender
         :reply-to:precedence:mailing-list:list-id:list-post:list-help
         :list-archive:x-thread-url:x-message-url:sender:list-subscribe
         :list-unsubscribe:content-type:content-transfer-encoding;
        bh=YmegCrfpUN9SxfRVvXsXlhzcunWWSizI8tfGTYkBr3k=;
        b=iVLUZvas3gOmUx4jPFFk1zrE2cKjKj2WUJw4ts7WYLa9/PFafqu+IoFMwBk8zg9TSI
         1ozxKY31pLgCi3KT9yXnXJQAMrWsLhx8MdRqCLDLRrdHsI5q3/IgJQzHCWpeoSPpLgOA
         RqNIfZbFLCTcoGbuMOv/2UYoF4Jg0OLsCuLdk=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:date:in-reply-to:x-ip
         :references:user-agent:x-http-useragent:message-id:subject:from:to
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :x-thread-url:x-message-url:sender:list-subscribe:list-unsubscribe
         :content-type:content-transfer-encoding;
        b=DdISDoE1zbf62oRB/aDBaDS/afbIIFH6/gRj3CUyox6V6ScjSxTNW8eUcyUiYsDgDR
         3FOnQev465NAvSoUb3KmkRKOwg4XOMOIC0aX7YsVu5desNOo+NleyyXw3Zq/sRCzQXo9
         rODJW3nA5woKii9nRQVkkOOXYzBGOdFufVYxY=
Received: by 10.101.106.6 with SMTP id i6mr591064anm.10.1264523818243;
        Tue, 26 Jan 2010 08:36:58 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.101.156.5 with SMTP id i5ls2082678ano.3.p; Tue, 26 Jan 2010 
	08:36:57 -0800 (PST)
Received: by 10.101.157.16 with SMTP id j16mr9731325ano.14.1264523817586;
        Tue, 26 Jan 2010 08:36:57 -0800 (PST)
Received: by 10.101.157.16 with SMTP id j16mr9731324ano.14.1264523817561;
        Tue, 26 Jan 2010 08:36:57 -0800 (PST)
Return-Path: <sutniuq@gmx.net>
Received: from mail-yw0-f143.google.com (mail-yw0-f143.google.com [209.85.211.143])
        by gmr-mx.google.com with ESMTP id 18si671002gxk.11.2010.01.26.08.36.57;
        Tue, 26 Jan 2010 08:36:57 -0800 (PST)
Received-SPF: fail (google.com: domain of sutniuq@gmx.net does not designate 209.85.211.143 as permitted sender) client-ip=209.85.211.143;
Received: by mail-yw0-f143.google.com with SMTP id 7so1779634ywh.17
        for <ruby-ffi@googlegroups.com>; Tue, 26 Jan 2010 08:36:57 -0800 (PST)
MIME-Version: 1.0
Received: by 10.150.174.3 with SMTP id w3mr215586ybe.3.1264523817487; Tue, 26 
	Jan 2010 08:36:57 -0800 (PST)
Date: Tue, 26 Jan 2010 08:36:57 -0800 (PST)
In-Reply-To: <4ccee321001241612k70d81dbdgbf8b097b550c040f@mail.gmail.com>
X-IP: 88.78.162.118
References: <9ef47d23-21f0-4657-ac94-3cf8d7725016@a32g2000yqm.googlegroups.com> 
	<4ccee321001241612k70d81dbdgbf8b097b550c040f@mail.gmail.com>
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/5.0 (Windows; U; Windows NT 6.0; de; rv:1.9.1.7) 
	Gecko/20091221 Firefox/3.5.7 (.NET CLR 3.5.30729),gzip(gfe),gzip(gfe)
Message-ID: <571aaacb-83dc-46af-a837-ea698dc31657@b2g2000yqi.googlegroups.com>
Subject: [ruby-ffi] Re: Using Windows Unicode functions
From: Quintus <sutniuq@gmx.net>
To: ruby-ffi <ruby-ffi@googlegroups.com>
X-Original-Authentication-Results: gmr-mx.google.com; spf=hardfail 
	(google.com: domain of sutniuq@gmx.net does not designate 209.85.211.143 as 
	permitted sender) smtp.mail=sutniuq@gmx.net
X-Original-Sender: sutniuq@gmx.net
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/ada0ea99600b7fa1
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/3f6a3a47ebd40b84
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

That works! Thank you! So, here's the working code:
------------------------------------
#Encoding: UTF-8
require "ffi"

module Test
  extend FFI::Library

  ffi_lib "user32"
  ffi_convention :stdcall

  attach_function :message_box, :MessageBoxW,
[:long, :buffer_in, :buffer_in, :int], :int
end

string =3D "Test with umlaut: =E4\0".encode("UTF-16LE") #MS expects double
NUL at a unicode string's end
Test.message_box(0, string, string, 0)
----------------------------------------
Tested with ruby 1.9.1p243 (2009-07-16 revision 24175) [i386-
mingw32].

Marvin

On 25 Jan., 01:12, Wayne Meissner <wmeiss...@gmail.com> wrote:
> You could try using :buffer_in instead of :string for the parameter
> types in MessageBoxW.
>
> :string in ruby-ffi means 'nul terminated C string', wheras UTF-16 is
> really more of a binary blob of data. =A0Ruby-ffi checks for nul chars
> in :string parameters (via StringValueCStr()) to avoid nul-byte
> poisoning attacks (assuming someone reads a string from an untrusted
> source), like most other C extensions do.
>
> 2010/1/19 Quintus <sutn...@gmx.net>:
>
>
>
> > Hi there,
>
> > I'm trying to access Windows functions through the ffi gem, but I
> > wasn't that successfull (otherwise I wouldn't post here, I
> > think =A0;-) =A0). So far, I've been using the win32-api gem which work=
ed
> > quite well with the Windows Unicode functions (they require UTF-16LE
> > encoded strings, also known as the wchar_t C type I think), but I
> > wasn't able to construct that with ffi.
>
> > Here's my code so far:
> > -------------------------------------
> > #Encoding: UTF-8
> > require "ffi"
>
> > module Test
> > =A0extend FFI::Library
>
> > =A0ffi_lib "user32"
> > =A0ffi_convention :stdcall
>
> > =A0attach_function :message_box, :MessageBoxW,
> > [:long, :string, :string, :int], :int
> > end
>
> > module Test2
> > =A0extend FFI::Library
>
> > =A0CP_UTF8 =3D 65001
> > =A0MB_PRECOMPOSED =3D 0x00000001
>
> > =A0ffi_lib "kernel32"
> > =A0ffi_convention :stdcall
>
> > =A0attach_function :get_last_error, :GetLastError, [], :long
> > =A0attach_function :multi_byte_to_wide_char, :MultiByteToWideChar,
> > [:uint, :int, :string, :int, :buffer_out, :int], :int
> > end
>
> > buffer =3D "\0" * 100_000
>
> > #I know, I could use Rubys built-in encoding functions
> > #and I WILL do so, but for now this is to ensure
> > #everything is 100% correct as MS it expects.
> > ret =3D Test2.multi_byte_to_wide_char(Test2::CP_UTF8, 0, "Test",
> > "Test".length, buffer, buffer.length)
>
> > buffer.force_encoding("UTF-16LE")
> > puts buffer.encode("ISO-8859-1").rstrip #Everything displayed correct
>
> > #The following line causes the error:
> > Test.message_box(0, buffer, buffer, 0)
> > -------------------------------------
>
> > This is the error message:
> > -------------------------------------
> > t2.rb:32:in `message_box': string contains null byte (ArgumentError)
> > =A0from t2.rb:32:in `<main>'
> > -------------------------------------
> > An UTF-16LE encoded string *contains* NUL bytes, I know--but I want to
> > use Unicode functions, so: How to do that?
>
> > My ruby version: ruby 1.9.1p243 (2009-07-16 revision 24175) [i386-
> > mingw32]
> > My OS: Windows Vista Home Premium SP2 (32 bit)
>
> > Marvin
