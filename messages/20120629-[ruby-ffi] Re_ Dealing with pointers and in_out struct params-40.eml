Delivered-To: headius@headius.com
Received: by 10.143.42.5 with SMTP id u5csp114487wfj;
        Fri, 29 Jun 2012 18:17:41 -0700 (PDT)
Received: by 10.68.130.169 with SMTP id of9mr10840281pbb.82.1341019061751;
        Fri, 29 Jun 2012 18:17:41 -0700 (PDT)
Return-Path: <ruby-ffi+bncCMnq3cGqAxC1p7n_BBoEHS20qQ@googlegroups.com>
Received: from mail-pb0-f62.google.com (mail-pb0-f62.google.com [209.85.160.62])
        by mx.google.com with ESMTPS id pv10si10955142pbb.184.2012.06.29.18.17.41
        (version=TLSv1/SSLv3 cipher=OTHER);
        Fri, 29 Jun 2012 18:17:41 -0700 (PDT)
Received-SPF: pass (google.com: domain of ruby-ffi+bncCMnq3cGqAxC1p7n_BBoEHS20qQ@googlegroups.com designates 209.85.160.62 as permitted sender) client-ip=209.85.160.62;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncCMnq3cGqAxC1p7n_BBoEHS20qQ@googlegroups.com designates 209.85.160.62 as permitted sender) smtp.mail=ruby-ffi+bncCMnq3cGqAxC1p7n_BBoEHS20qQ@googlegroups.com; dkim=pass header.i=@googlegroups.com
Received: by pbbrq2 with SMTP id rq2sf6996089pbb.7
        for <headius@headius.com>; Fri, 29 Jun 2012 18:17:41 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=x-beenthere:mime-version:date:in-reply-to:references:user-agent
         :x-http-useragent:message-id:subject:from:to:x-original-sender
         :x-original-authentication-results:reply-to:precedence:mailing-list
         :list-id:x-google-group-id:list-post:list-help:list-archive:sender
         :list-subscribe:list-unsubscribe:content-type
         :content-transfer-encoding;
        bh=Tq9gGYqmxq7qBv+qaruuNQgyw3pNC3wAk7MoFYL1Qmw=;
        b=hvZcGJs3F4NJmZ5OkF8Xdj7cBShnxBQ1V99OqZ6egZRZULjy0kyNIa8m3FvQ7fGk8m
         vrP/8b8xF4qlGBZuVkAIkUZheyoBNDiQsWBRyYJawa75icT6Y3EpUnnjefYVeshrBm77
         tWgPN+mAWJ5QL5p/lqBEA3hEFZWOH3aOJqqek=
Received: by 10.52.155.207 with SMTP id vy15mr328887vdb.13.1341019061163;
        Fri, 29 Jun 2012 18:17:41 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.220.223.77 with SMTP id ij13ls2544219vcb.1.gmail; Fri, 29 Jun
 2012 18:17:40 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.52.26.18 with SMTP id h18mr311861vdg.0.1341019060871; Fri, 29
 Jun 2012 18:17:40 -0700 (PDT)
Received: by s1g2000vbj.googlegroups.com with HTTP; Fri, 29 Jun 2012 18:17:40
 -0700 (PDT)
Date: Fri, 29 Jun 2012 18:17:40 -0700 (PDT)
In-Reply-To: <3fd06a4f-f954-4bba-911b-50d8b3cfc598@3g2000vbx.googlegroups.com>
References: <3fd06a4f-f954-4bba-911b-50d8b3cfc598@3g2000vbx.googlegroups.com>
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.5
 (KHTML, like Gecko) Chrome/19.0.1084.56 Safari/536.5,gzip(gfe)
Message-ID: <d2dd5984-d237-4f4d-b503-61983fdf089a@s1g2000vbj.googlegroups.com>
Subject: [ruby-ffi] Re: Dealing with pointers and in/out struct params
From: Daniel Berger <djberg96@gmail.com>
To: ruby-ffi <ruby-ffi@googlegroups.com>
X-Original-Sender: djberg96@gmail.com
X-Original-Authentication-Results: ls.google.com; spf=pass (google.com: domain
 of djberg96@gmail.com designates internal as permitted sender)
 smtp.mail=djberg96@gmail.com; dkim=pass header.i=@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
X-Google-Group-Id: 238405446264
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, <mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, <mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>,
 <mailto:googlegroups-manage+238405446264+unsubscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable



On Jun 29, 8:09=A0pm, Daniel Berger <djber...@gmail.com> wrote:
> Hi,
>
> There's a function called ReadFileScatter in the Windows API that
> takes an OVERLAPPED structure as its last (in/out) parameter. It looks
> like this, keeping in mind that I've simplified it a bit to only
> contain the bits I care about, =A0and it is the right size - 20.
>
> class Overlapped < FFI::Struct
> =A0 =A0 layout(
> =A0 =A0 =A0 :Internal, :pointer,
> =A0 =A0 =A0 :InternalHigh, :pointer,
> =A0 =A0 =A0 :Offset, :ulong,
> =A0 =A0 =A0 :OffsetHigh, :ulong,
> =A0 =A0 =A0 :hEvent, :ulong
> =A0 =A0 )
> end
>
> The member I happen to care about specifically is :Internal, which the
> MSDN docs will tell you is a ULONG_PTR (either an unsigned long or
> unsigned int64, depending on whether or not you're x64).
>
> I created an instance using Overlapped.new and passed it to
> ReadFileScatter, which I can call successfully. The problem is that
> the overlap[:Internal] member isn't populated after the call. I also
> tried explicitly setting the :Internal member to an
> FFI::MemoryPointer.new(:ulong) before passing the struct, but that
> didn't seem to help.
>
> How do I get FFI to populate my overlapped struct's pointer?

Gah, disregard this. The struct members aren't actually pointers. I
was mislead by the typedef name.

Sorry for the noise.

Regards,

Dan
