Delivered-To: headius@headius.com
Received: by 10.150.226.5 with SMTP id y5cs8986ybg;
        Wed, 5 May 2010 17:03:43 -0700 (PDT)
Received: by 10.227.137.67 with SMTP id v3mr3345358wbt.92.1273104221774;
        Wed, 05 May 2010 17:03:41 -0700 (PDT)
Return-Path: <ruby-ffi+bncCOeQwYraAhDYjojfBBoEmr6HnQ@googlegroups.com>
Received: from mail-gy0-f190.google.com (mail-gy0-f190.google.com [209.85.160.190])
        by mx.google.com with ESMTP id f24si1023550wbf.1.2010.05.05.17.03.39;
        Wed, 05 May 2010 17:03:40 -0700 (PDT)
Received-SPF: pass (google.com: domain of ruby-ffi+bncCOeQwYraAhDYjojfBBoEmr6HnQ@googlegroups.com designates 209.85.160.190 as permitted sender) client-ip=209.85.160.190;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncCOeQwYraAhDYjojfBBoEmr6HnQ@googlegroups.com designates 209.85.160.190 as permitted sender) smtp.mail=ruby-ffi+bncCOeQwYraAhDYjojfBBoEmr6HnQ@googlegroups.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by gyg8 with SMTP id 8sf4798494gyg.7
        for <headius@headius.com>; Wed, 05 May 2010 17:03:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:received:received
         :received:received:received-spf:received:mime-version:received
         :received:date:x-ip:user-agent:x-http-useragent:message-id:subject
         :from:to:x-original-authentication-results:x-original-sender
         :reply-to:precedence:mailing-list:list-id:list-post:list-help
         :list-archive:sender:list-subscribe:list-unsubscribe:content-type;
        bh=VOCeA/I5iF7jYau9scRKYjdjyIs3DTzgT6EobMNNnxQ=;
        b=mdwdfvvWyL4QxI+3BP2857c/y1mI1oDasF0GC8yFZ5mikLJKDjBGknhGv1k5ZYXXH7
         yD4TNqREe8tnGypyFWKOEEdvIhPVLCI/zwDVQQ/5iFtyUEbQbXO0xqz8xF8aFq8wz0Lk
         9Yc8ad41RRGI5RxZEber+MICCgvvEDYbg40A4=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:date:x-ip:user-agent
         :x-http-useragent:message-id:subject:from:to
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :sender:list-subscribe:list-unsubscribe:content-type;
        b=3e7X5CZCZXKbXTkUtmKUOiZuzLIiPWMSBxvjvh9AmsnotX0HxXJXjFzzO2Amze+cgT
         5An+CXJTlxq0plhNeW9NUqC6mdIA7qTXkmWknh14GxELJfbzuE7V1RdiZYUzjT2zzObq
         5NI7LE30UYW7a0U9JRzqr+56+crcEDIDCLCSM=
Received: by 10.150.241.1 with SMTP id o1mr1301204ybh.87.1273104216852;
        Wed, 05 May 2010 17:03:36 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.150.234.22 with SMTP id g22ls4448184ybh.7.p; Wed, 05 May 2010 
	17:03:36 -0700 (PDT)
Received: by 10.150.250.4 with SMTP id x4mr242773ybh.16.1273104215981;
        Wed, 05 May 2010 17:03:35 -0700 (PDT)
Received: by 10.213.109.142 with SMTP id j14mr1617365ebp.1.1273100190866;
        Wed, 05 May 2010 15:56:30 -0700 (PDT)
Received: by 10.213.109.142 with SMTP id j14mr1617363ebp.1.1273100190832;
        Wed, 05 May 2010 15:56:30 -0700 (PDT)
Return-Path: <phreakuencies@gmail.com>
Received: from mail-gw0-f56.google.com (mail-gw0-f56.google.com [74.125.83.56])
        by gmr-mx.google.com with ESMTP id 17si25610ewy.7.2010.05.05.15.56.30;
        Wed, 05 May 2010 15:56:30 -0700 (PDT)
Received-SPF: pass (google.com: domain of phreakuencies@gmail.com designates 74.125.83.56 as permitted sender) client-ip=74.125.83.56;
Received: by gwj20 with SMTP id 20so3904725gwj.21
        for <ruby-ffi@googlegroups.com>; Wed, 05 May 2010 15:56:30 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.100.234.18 with SMTP id g18mr664986anh.22.1273100190071; Wed, 
	05 May 2010 15:56:30 -0700 (PDT)
Received: by e2g2000yqn.googlegroups.com with HTTP; Wed, 5 May 2010 15:56:30 
	-0700 (PDT)
Date: Wed, 5 May 2010 15:56:30 -0700 (PDT)
X-IP: 200.55.101.109
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/5.0 (X11; U; Linux x86_64; en-US) AppleWebKit/533.2 
	(KHTML, like Gecko) Chrome/5.0.342.9 Safari/533.2,gzip(gfe)
Message-ID: <499b1ee0-00c4-4113-9b2e-70f50019d619@e2g2000yqn.googlegroups.com>
Subject: [ruby-ffi] Proper memory management
From: v01d <phreakuencies@gmail.com>
To: ruby-ffi <ruby-ffi@googlegroups.com>
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of phreakuencies@gmail.com designates 74.125.83.56 as permitted 
	sender) smtp.mail=phreakuencies@gmail.com
X-Original-Sender: phreakuencies@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1

Hi,
I'm in the process of developing a Ruby binding to the GSL numerical
library using FFI. Recently I stumbled upon a problematic issue
regarding memory management and finalizers.

Since the GSL library allows creation and destruction of instances
like this:
gsl_vector* ptr = gsl_alloc_vector(size_t n);
...
gsl_free_vector(ptr);

Then, in Ruby I do something like this:

class Vector
  def initialize(n)
    @ptr = GSLng.backend.gsl_alloc_vector(n)
    Vector.define_finalizer(self, @ptr)
  end

  def Vector.define_finalizer(self, ptr)
    ObjectSpace.define_finalizer(self, lambda {|id|
GSLng.backend.gsl_free_vector(ptr)})
  end
end

The problem is that if later I instatiante a Vector inside a loop,
like:
10000.times do
  Vector.new(3)
end

This obviously eats a lot of memory until GC runs. Now, if I do:
10000.times do
  Vector.new(3)
  GC.start
end

the memory that the Vector instances themselves occupy is freed but
the finalizer is not called (it is later called at program end),
therefore all of the memory allocated through gsl_alloc_vector() is
sitting there until program ends.

I know that Ruby doesn't guarantee that finalizers are called in any
particular moment (even after GC.start, which I thought would
suffice). So what I'm asking probably is not really related to FFI
itself, but I wanted to ask here since I imagined this would be a
common pattern among FFI users. The question is then: is there a
better way to manage this type of memory? I obviously cant use the
transaction-like pattern (like File.open) since for a Vector that
wouldn't make sense. It would be ideal to make the gsl_vector_free
call when the actual Vector class is free'd. Maybe I need to go to a
lower level for this and use the C api to register this call in the
"free" function for this class, but that would be overkill since I
wanted to avoid using C altogether.

Thank you!
