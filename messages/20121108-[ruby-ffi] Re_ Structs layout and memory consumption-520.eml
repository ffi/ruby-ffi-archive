Delivered-To: headius@headius.com
Received: by 10.112.81.161 with SMTP id b1csp191421lby;
        Thu, 8 Nov 2012 13:15:25 -0800 (PST)
Received: by 10.68.135.42 with SMTP id pp10mr27807483pbb.159.1352409324873;
        Thu, 08 Nov 2012 13:15:24 -0800 (PST)
Return-Path: <ruby-ffi+bncBDAOLYH4RIHRB26B6CCAKGQEQUVWF2I@googlegroups.com>
Received: from mail-pa0-f55.google.com (mail-pa0-f55.google.com [209.85.220.55])
        by mx.google.com with ESMTPS id u7si36791258paz.153.2012.11.08.13.15.24
        (version=TLSv1/SSLv3 cipher=OTHER);
        Thu, 08 Nov 2012 13:15:24 -0800 (PST)
Received-SPF: pass (google.com: domain of ruby-ffi+bncBDAOLYH4RIHRB26B6CCAKGQEQUVWF2I@googlegroups.com designates 209.85.220.55 as permitted sender)
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncBDAOLYH4RIHRB26B6CCAKGQEQUVWF2I@googlegroups.com designates 209.85.220.55 as permitted sender) smtp.mail=ruby-ffi+bncBDAOLYH4RIHRB26B6CCAKGQEQUVWF2I@googlegroups.com; dkim=pass header.i=@googlegroups.com
Received: by mail-pa0-f55.google.com with SMTP id fa10sf2205467pad.0
        for <headius@headius.com>; Thu, 08 Nov 2012 13:15:24 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=20120806;
        h=x-beenthere:date:from:to:message-id:in-reply-to:references:subject
         :mime-version:x-original-sender:reply-to:precedence:mailing-list
         :list-id:x-google-group-id:list-post:list-help:list-archive:sender
         :list-subscribe:list-unsubscribe:content-type;
        bh=aLiRpCHNKJKqzmjfBWViehI4oLOIZBHfFfGjkAh6x4s=;
        b=P8LEhcA4lbo7hzbetlvR7Eou9OLb4mlqTzLeJWI4iN3m8VJvePM8SlkY4HaCxwDK0o
         siFcJj5jh+0Z67Eyxj3Pudn6rOew1f39gGPY/7LYJVQ+6jj3lWPc03dOYm/17PVvizWI
         Q/OsD48kJ8As9fOHVCqvmHeMWFOAAxvI43fGZMQSjod0yucOuA1xICpFsu5W/kd3uTE1
         zQLWIAqR1OWyZ1ovpt7b4TuiRKKspipFSL+AIc23QFLVqzs7FVymykTxzTAHr5rKaule
         BegRZRvE7RUlkpo9z2kZmSlEB/wfEE4ceL6WTmTIHGHSzV6SBDE0/nMrPzlbmv5pJ9MU
         Z8tw==
Received: by 10.52.37.12 with SMTP id u12mr2114300vdj.8.1352409323887;
        Thu, 08 Nov 2012 13:15:23 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.220.107.208 with SMTP id c16ls4003749vcp.3.gmail; Thu, 08 Nov
 2012 13:15:23 -0800 (PST)
Received: by 10.52.19.201 with SMTP id h9mr2119267vde.0.1352409323565;
        Thu, 08 Nov 2012 13:15:23 -0800 (PST)
Date: Thu, 8 Nov 2012 13:15:23 -0800 (PST)
From: Hans Hasselberg <hans@hans.io>
To: ruby-ffi@googlegroups.com
Message-Id: <412b85a7-0086-4996-9a10-4db510235b53@googlegroups.com>
In-Reply-To: <f89a755e-9e50-4216-984b-e5dafa3fd1b6@googlegroups.com>
References: <51d877a7-2028-4780-8535-e9f3c7e53ab5@googlegroups.com>
 <f89a755e-9e50-4216-984b-e5dafa3fd1b6@googlegroups.com>
Subject: [ruby-ffi] Re: Structs layout and memory consumption
MIME-Version: 1.0
X-Original-Sender: hans@hans.io
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
X-Google-Group-Id: 238405446264
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, <mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, <mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>,
 <mailto:googlegroups-manage+238405446264+unsubscribe@googlegroups.com>
Content-Type: multipart/alternative; 
	boundary="----=_Part_256_30353976.1352409323194"

------=_Part_256_30353976.1352409323194
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Thanks for your answer!

My approach for getting getdtablesize() would be something like that:

module Libc
  extend FFI::Library
  ffi_lib 'c'
  attach_function :getdtablesize, [], :int
end


Is that right?

On Thursday, November 8, 2012 10:06:01 PM UTC+1, Wayne Meissner wrote:
>
> The first definition is mostly correct, apart from the FD_SETSIZE 
> defintion (its way too large for the default value on any platform).
>
> Have a look at the getdtablesize() function in libc, and use that to set 
> the FD_SETSIZE constant, since that will always return the *actual* open 
> file limit for the process.
>
> As to why you get segfaults with your new definition, is due to what FDSet 
> (aka fd_set in C) is supposed to represent.  Its a bitset that has a bit 
> representing each file descriptor that select(3) is supposed to monitor. 
>  Your new definition has only enough space for 32 file descriptors (on a 
> 32bit system), so when you perform an operation that tries to read/write 
> file descriptor 32 or above in that bitset, it will segfault.
>
>
> On Friday, 9 November 2012 05:45:58 UTC+10, Hans Hasselberg wrote:
>>
>> Hello!
>>
>> Thank you very much for this library!
>> I stumbled over a problem with code I 'inherited', it is a gem which 
>> wraps libcurl.
>> This code works, but consumes too much memory for my taste and looks 
>> suspicious!
>>
>> https://github.com/typhoeus/ethon/blob/master/lib/ethon/curls/classes.rb:
>>
>> class FDSet < FFI::Struct
>>   FD_SETSIZE = 524288
>>   layout :fds_bits, [:long, FD_SETSIZE / FFI::Type::LONG.size]
>> end
>>
>>
>> I can change that code to:
>>
>> class FDSet < FFI::Struct
>>   layout :fds_bits, :long
>> end
>>
>>
>> Instances of FDSet do not consume so much memory any more, but I get 
>> segfaults on a regular basis. It seems to me, that fds_bits is just a 
>> memory placeholder.
>> The ffi code in that particular project looks quite understandable except 
>> for that FDSet. 
>>
>> Could you explain to me, why my code segfaults with the changed code and 
>> if FDSet is correct specified? I bet you need more information, but I don't 
>> know which, so feel free to ask!
>>
>>
>> Cheers,
>> Hans
>>
>
------=_Part_256_30353976.1352409323194
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable

Thanks for your answer!<div><br></div><div>My approach for getting&nbsp;get=
dtablesize() would be something like that:</div><div><br></div><blockquote =
style=3D"margin: 0 0 0 40px; border: none; padding: 0px;"><div><font face=
=3D"courier new, monospace" color=3D"#000000">module Libc</font></div><div>=
<font face=3D"courier new, monospace" color=3D"#000000">&nbsp; extend FFI::=
Library</font></div><div><font face=3D"courier new, monospace" color=3D"#00=
0000">&nbsp; ffi_lib 'c'</font></div><div><font face=3D"courier new, monosp=
ace" color=3D"#000000">&nbsp; attach_function :getdtablesize, [], :i<span s=
tyle=3D"line-height: 19px;">nt</span></font></div><div><font face=3D"courie=
r new, monospace" color=3D"#000000"><span style=3D"line-height: 19px;">end<=
/span></font></div></blockquote><div><br></div><div>Is that right?</div><di=
v><br>On Thursday, November 8, 2012 10:06:01 PM UTC+1, Wayne Meissner wrote=
:<blockquote class=3D"gmail_quote" style=3D"margin: 0;margin-left: 0.8ex;bo=
rder-left: 1px #ccc solid;padding-left: 1ex;">The first definition is mostl=
y correct, apart from the FD_SETSIZE defintion (its way too large for the d=
efault value on any platform).<div><br></div><div>Have a look at the&nbsp;g=
etdtablesize() function in libc, and use that to set the FD_SETSIZE constan=
t, since that will always return the *actual* open file limit for the proce=
ss.</div><div><br></div><div>As to why you get segfaults with your new defi=
nition, is due to what FDSet (aka fd_set in C) is supposed to represent. &n=
bsp;Its a bitset that has a bit representing each file descriptor that sele=
ct(3) is supposed to monitor. &nbsp;Your new definition has only enough spa=
ce for 32 file descriptors (on a 32bit system), so when you perform an oper=
ation that tries to read/write file descriptor 32 or above in that bitset, =
it will segfault.</div><div><br></div><div><br>On Friday, 9 November 2012 0=
5:45:58 UTC+10, Hans Hasselberg  wrote:<blockquote class=3D"gmail_quote" st=
yle=3D"margin:0;margin-left:0.8ex;border-left:1px #ccc solid;padding-left:1=
ex">Hello!<div><br></div><div>Thank you very much for this library!</div><d=
iv>I stumbled over a problem with code I 'inherited', it is a gem which wra=
ps libcurl.</div><div>This code works, but consumes too much memory for my =
taste and looks suspicious!</div><div><br></div><div><a href=3D"https://git=
hub.com/typhoeus/ethon/blob/master/lib/ethon/curls/classes.rb" target=3D"_b=
lank">https://github.com/typhoeus/<wbr>ethon/blob/master/lib/ethon/<wbr>cur=
ls/classes.rb</a>:<br></div><div><br></div><blockquote style=3D"margin:0 0 =
0 40px;border:none;padding:0px"><div><font face=3D"courier new, monospace">=
class FDSet &lt; FFI::Struct</font></div><div><font face=3D"courier new, mo=
nospace">&nbsp; FD_SETSIZE =3D 524288</font></div><div><font face=3D"courie=
r new, monospace">&nbsp; layout :fds_bits, [:long, FD_SETSIZE / FFI::Type::=
LONG.size]</font></div><div><font face=3D"courier new, monospace">end</font=
></div></blockquote><div><br></div><div>I can change that code to:</div><di=
v><br></div><blockquote style=3D"margin:0 0 0 40px;border:none;padding:0px"=
><div><span style=3D"font-family:'courier new',monospace">class FDSet &lt; =
FFI::Struct</span></div><div><span style=3D"font-family:'courier new',monos=
pace">&nbsp; layout :fds_bits, :long</span><br></div><div><font face=3D"cou=
rier new, monospace">end</font></div></blockquote><div><br></div><div>Insta=
nces of FDSet do not consume so much memory any more, but I get segfaults o=
n a regular basis. It seems to me, that fds_bits is just a memory placehold=
er.</div><div>The ffi code in that particular project looks quite understan=
dable except for that FDSet.&nbsp;</div><div><br></div><div>Could you expla=
in to me, why my code segfaults with the changed code and if FDSet is corre=
ct specified? I bet you need more information, but I don't know which, so f=
eel free to ask!</div><div><br></div><div><br></div><div>Cheers,</div><div>=
Hans</div></blockquote></div></blockquote></div>
------=_Part_256_30353976.1352409323194--
