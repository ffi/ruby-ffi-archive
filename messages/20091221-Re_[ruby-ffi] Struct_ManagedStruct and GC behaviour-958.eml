Delivered-To: headius@headius.com
Received: by 10.100.134.8 with SMTP id h8cs528310and;
        Mon, 21 Dec 2009 14:21:01 -0800 (PST)
Received: by 10.142.4.41 with SMTP id 41mr3161288wfd.123.1261434060973;
        Mon, 21 Dec 2009 14:21:00 -0800 (PST)
Return-Path: <3yvQvSwkJCDosiaeoojanciWeh.YkinqXu-bbeckkchacnkqlo.Yki@listserv.bounces.google.com>
Received: from mail-pw0-f68.google.com (mail-pw0-f68.google.com [209.85.160.68])
        by mx.google.com with ESMTP id 31si8107527pxi.63.2009.12.21.14.20.59;
        Mon, 21 Dec 2009 14:20:59 -0800 (PST)
Received-SPF: pass (google.com: domain of 3yvQvSwkJCDosiaeoojanciWeh.YkinqXu-bbeckkchacnkqlo.Yki@listserv.bounces.google.com designates 209.85.160.68 as permitted sender) client-ip=209.85.160.68;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 3yvQvSwkJCDosiaeoojanciWeh.YkinqXu-bbeckkchacnkqlo.Yki@listserv.bounces.google.com designates 209.85.160.68 as permitted sender) smtp.mail=3yvQvSwkJCDosiaeoojanciWeh.YkinqXu-bbeckkchacnkqlo.Yki@listserv.bounces.google.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by pwj20 with SMTP id 20sf2441069pwj.27
        for <headius@headius.com>; Mon, 21 Dec 2009 14:20:59 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:received:received
         :received:received-spf:received:mime-version:received:in-reply-to
         :references:date:message-id:subject:from:to
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :x-thread-url:x-message-url:sender:list-unsubscribe:list-subscribe
         :content-type:content-transfer-encoding;
        bh=wPLzyJ5Z6DssMvtKHEajxSVWZtUpt39EIIxdZLw02R4=;
        b=apqE10+nE2mmL2IIsDc3+hTg9erN0Dbqi4TREg4/ZO2YnkIVDooWznV0XvgFfWBP0J
         fObR8OEimxm2enOGIQZHmQ5OZ5fTba0I6X6a/VIKyykKGnl/W60UVi1wwU/oBlG8nfsH
         YuMxAZy4DZtoUYKxEZYFOiYKMLI2HkDp2EMsg=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:in-reply-to:references:date
         :message-id:subject:from:to:x-original-authentication-results
         :x-original-sender:reply-to:precedence:mailing-list:list-id
         :list-post:list-help:list-archive:x-thread-url:x-message-url:sender
         :list-unsubscribe:list-subscribe:content-type
         :content-transfer-encoding;
        b=bPV+7WIrJxUFmkk5G8m4M5JOjkRYmz1R+KoXl7lD/9pt5dOHvgkjA9YtvXXuCQHqrq
         VQ0O0wsrpuakcM41uU4rYekqRNl6i2UEKI29xJP/3AWAqd8yXnzH2sIVGwezKKQHuTgw
         id8q5sygWi2N7wEOaXJom6O1y01ZH4yYe7p5U=
Received: by 10.142.8.24 with SMTP id 24mr665806wfh.13.1261434058616;
        Mon, 21 Dec 2009 14:20:58 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.143.21.11 with SMTP id y11ls652739wfi.1.p; Mon, 21 Dec 2009 
	14:20:58 -0800 (PST)
Received: by 10.142.75.2 with SMTP id x2mr1523015wfa.19.1261434057923;
        Mon, 21 Dec 2009 14:20:57 -0800 (PST)
Received: by 10.142.75.2 with SMTP id x2mr1523014wfa.19.1261434057897;
        Mon, 21 Dec 2009 14:20:57 -0800 (PST)
Return-Path: <wmeissner@gmail.com>
Received: from mail-pw0-f42.google.com (mail-pw0-f42.google.com [209.85.160.42])
        by gmr-mx.google.com with ESMTP id 1si1632780pxi.1.2009.12.21.14.20.56;
        Mon, 21 Dec 2009 14:20:56 -0800 (PST)
Received-SPF: pass (google.com: domain of wmeissner@gmail.com designates 209.85.160.42 as permitted sender) client-ip=209.85.160.42;
Received: by pwj9 with SMTP id 9so3648886pwj.1
        for <ruby-ffi@googlegroups.com>; Mon, 21 Dec 2009 14:20:56 -0800 (PST)
MIME-Version: 1.0
Received: by 10.141.91.9 with SMTP id t9mr1067550rvl.127.1261434056751; Mon, 
	21 Dec 2009 14:20:56 -0800 (PST)
In-Reply-To: <21ef583e0912211333m3da990e7w337f75ae50054b42@mail.gmail.com>
References: <20091221152637.62654e37.jon.forums@gmail.com>
	 <80BBF3AC-C15C-4844-A6DD-34A3B9218A35@fallingsnow.net>
	 <20091221162106.9ffa1f6f.jon.forums@gmail.com>
	 <21ef583e0912211333m3da990e7w337f75ae50054b42@mail.gmail.com>
Date: Tue, 22 Dec 2009 08:20:56 +1000
Message-ID: <4ccee320912211420v691a1119ibd25abbbe57bc445@mail.gmail.com>
Subject: Re: [ruby-ffi] Struct/ManagedStruct and GC behaviour
From: Wayne Meissner <wmeissner@gmail.com>
To: ruby-ffi@googlegroups.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of wmeissner@gmail.com designates 209.85.160.42 as permitted sender) 
	smtp.mail=wmeissner@gmail.com; dkim=pass (test mode) header.i=@gmail.com
X-Original-Sender: wmeissner@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/509f727c52cb337
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/e3e08b82e2dc704a
Sender: ruby-ffi@googlegroups.com
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

2009/12/22 Thomas E Enebo <tom.enebo@gmail.com>:
> I have been wondering about the Struct API myself. =A0 It seems like it
> should support a simple explicit memory management API ala:
>
> class MyFFIStruct < FFI::Struct ....
>
> MyFFIStruct.new do |struct_instance|
> =A0 some_ffi_call struct_instance
> =A0 # Do other stuff....
> end
> # I know the block has disposed of my allocated struct

It does support this indirectly via MemoryPointer.new
e.g.
  MemoryPointer.new(MyFFIStruct.size) do |p|
    s =3D MyFFIStruct.new(p)
    some_ffi_call s
    # do other stuff
  end

An alternative is to use FFI::Buffer as the backing memory - on JRuby,
that is jvm-heap memory, which is copied in/out of a temporary native
memory area (usually on the stack) when passed to a native function.
For small structs, especially ones that are passed to a native
function just once, this can be up to 10x faster than the alloc/free
cycle of a MemoryPointer backed Struct.
