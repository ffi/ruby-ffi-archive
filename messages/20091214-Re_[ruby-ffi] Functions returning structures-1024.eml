Delivered-To: headius@headius.com
Received: by 10.100.134.8 with SMTP id h8cs134058and;
        Mon, 14 Dec 2009 13:33:27 -0800 (PST)
Received: by 10.114.251.10 with SMTP id y10mr3589506wah.149.1260826407258;
        Mon, 14 Dec 2009 13:33:27 -0800 (PST)
Return-Path: <3Ja8mSwkJCEY4umq00vmzouiqt.kwuz2j6-nnqowwotmozw2x0.kwu@listserv.bounces.google.com>
Received: from mail-pz0-f148.google.com (mail-pz0-f148.google.com [209.85.222.148])
        by mx.google.com with ESMTP id 26si11583889pzk.105.2009.12.14.13.33.26;
        Mon, 14 Dec 2009 13:33:27 -0800 (PST)
Received-SPF: pass (google.com: domain of 3Ja8mSwkJCEY4umq00vmzouiqt.kwuz2j6-nnqowwotmozw2x0.kwu@listserv.bounces.google.com designates 209.85.222.148 as permitted sender) client-ip=209.85.222.148;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 3Ja8mSwkJCEY4umq00vmzouiqt.kwuz2j6-nnqowwotmozw2x0.kwu@listserv.bounces.google.com designates 209.85.222.148 as permitted sender) smtp.mail=3Ja8mSwkJCEY4umq00vmzouiqt.kwuz2j6-nnqowwotmozw2x0.kwu@listserv.bounces.google.com
Received: by pzk12 with SMTP id 12sf1854423pzk.13
        for <headius@headius.com>; Mon, 14 Dec 2009 13:33:26 -0800 (PST)
Received: by 10.140.82.25 with SMTP id f25mr688171rvb.11.1260826405702;
        Mon, 14 Dec 2009 13:33:25 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.141.213.29 with SMTP id p29ls1621499rvq.3.p; Mon, 14 Dec 2009 
	13:33:23 -0800 (PST)
Received: by 10.141.124.15 with SMTP id b15mr1087016rvn.8.1260826403852;
        Mon, 14 Dec 2009 13:33:23 -0800 (PST)
Received: by 10.141.124.15 with SMTP id b15mr1087015rvn.8.1260826403833;
        Mon, 14 Dec 2009 13:33:23 -0800 (PST)
Return-Path: <wmeissner@gmail.com>
Received: from mail-px0-f202.google.com (mail-px0-f202.google.com [209.85.216.202])
        by gmr-mx.google.com with ESMTP id 24si1072348pzk.10.2009.12.14.13.33.22;
        Mon, 14 Dec 2009 13:33:22 -0800 (PST)
Received-SPF: pass (google.com: domain of wmeissner@gmail.com designates 209.85.216.202 as permitted sender) client-ip=209.85.216.202;
Received: by pxi40 with SMTP id 40so2430299pxi.21
        for <ruby-ffi@googlegroups.com>; Mon, 14 Dec 2009 13:33:22 -0800 (PST)
MIME-Version: 1.0
Received: by 10.140.251.5 with SMTP id y5mr2639167rvh.2.1260826402178; Mon, 14 
	Dec 2009 13:33:22 -0800 (PST)
In-Reply-To: <959630af-8bc0-4c13-8878-6ca8a9c20360@b15g2000yqd.googlegroups.com>
References: <959630af-8bc0-4c13-8878-6ca8a9c20360@b15g2000yqd.googlegroups.com>
Date: Tue, 15 Dec 2009 07:33:22 +1000
Message-ID: <4ccee320912141333o778b60d1p2d2b736528540ee0@mail.gmail.com>
Subject: Re: [ruby-ffi] Functions returning structures
From: Wayne Meissner <wmeissner@gmail.com>
To: ruby-ffi@googlegroups.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of wmeissner@gmail.com designates 209.85.216.202 as permitted sender) 
	smtp.mail=wmeissner@gmail.com; dkim=pass (test mode) header.i=@gmail.com
X-Original-Sender: wmeissner@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/ace0b94f7912799f
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/4d99b4b9837b4923
Sender: ruby-ffi@googlegroups.com
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

You need to specify the return type as ALLEGRO_COLOR.by_value
(same for any struct-by-value parameters).

2009/12/15 galdor <khaelin@gmail.com>:
> Hi,
>
> Let's define a C function which returns a plain structure:
>
> =A0 =A0typedef struct {
> =A0 =A0 =A0 =A0int r, g, b, a;
> =A0 =A0} ALLEGRO_COLOR;
>
> =A0 =A0ALLEGRO_COLOR al_map_rgb(unsigned char r, unsigned char g,
> unsigned char b);
>
> Now we bind it:
>
> =A0 =A0class ALLEGRO_COLOR < FFI::Struct
> =A0 =A0 =A0 =A0layout :r, :float,
> =A0 =A0 =A0 =A0 =A0 =A0 =A0 :g, :float,
> =A0 =A0 =A0 =A0 =A0 =A0 =A0 :b, :float,
> =A0 =A0 =A0 =A0 =A0 =A0 =A0 :a, :float
> =A0 =A0end
>
> =A0 =A0attach_function :al_map_rgb, [:uchar, :uchar, :uchar],
> ALLEGRO_COLOR
>
> But the following ruby code doesn't work:
>
> =A0 =A0bgcolor =3D al_map_rgb(20, 20, 20)
> =A0 =A0fgcolor =3D al_map_rgb(20, 40, 80)
> =A0 =A0al_clear_to_color(bgcolor)
>
> The screen is cleared with rgb(20, 40, 80), instead of rgb(20, 20,
> 20).
> I don't know how stack allocation is performed, I must be doing
> something wrong.
>
> How should I work with stack-allocated structures ?
>
> Regards,
>
> Nicolas Martyanoff
>
