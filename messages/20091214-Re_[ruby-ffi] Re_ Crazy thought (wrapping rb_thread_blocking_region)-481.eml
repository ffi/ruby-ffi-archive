Delivered-To: headius@headius.com
Received: by 10.100.134.8 with SMTP id h8cs134532and;
        Mon, 14 Dec 2009 13:44:03 -0800 (PST)
Received: by 10.143.154.20 with SMTP id g20mr3608831wfo.28.1260827042522;
        Mon, 14 Dec 2009 13:44:02 -0800 (PST)
Return-Path: <3obEmSwkJCMQ6wos22xo1qwksv.myw14l8-ppsqyyqvoq1y4z2.myw@listserv.bounces.google.com>
Received: from mail-pw0-f68.google.com (mail-pw0-f68.google.com [209.85.160.68])
        by mx.google.com with ESMTP id 11si2537580pxi.35.2009.12.14.13.44.02;
        Mon, 14 Dec 2009 13:44:02 -0800 (PST)
Received-SPF: pass (google.com: domain of 3obEmSwkJCMQ6wos22xo1qwksv.myw14l8-ppsqyyqvoq1y4z2.myw@listserv.bounces.google.com designates 209.85.160.68 as permitted sender) client-ip=209.85.160.68;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 3obEmSwkJCMQ6wos22xo1qwksv.myw14l8-ppsqyyqvoq1y4z2.myw@listserv.bounces.google.com designates 209.85.160.68 as permitted sender) smtp.mail=3obEmSwkJCMQ6wos22xo1qwksv.myw14l8-ppsqyyqvoq1y4z2.myw@listserv.bounces.google.com
Received: by pwj20 with SMTP id 20sf2099056pwj.27
        for <headius@headius.com>; Mon, 14 Dec 2009 13:44:02 -0800 (PST)
Received: by 10.115.101.14 with SMTP id d14mr608732wam.10.1260827041077;
        Mon, 14 Dec 2009 13:44:01 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.114.188.15 with SMTP id l15ls1296479waf.3.p; Mon, 14 Dec 2009 
	13:44:00 -0800 (PST)
Received: by 10.115.148.3 with SMTP id a3mr1260318wao.20.1260827040119;
        Mon, 14 Dec 2009 13:44:00 -0800 (PST)
Received: by 10.115.148.3 with SMTP id a3mr1260317wao.20.1260827040098;
        Mon, 14 Dec 2009 13:44:00 -0800 (PST)
Return-Path: <wmeissner@gmail.com>
Received: from mail-px0-f204.google.com (mail-px0-f204.google.com [209.85.216.204])
        by gmr-mx.google.com with ESMTP id 18si1079018pzk.5.2009.12.14.13.43.59;
        Mon, 14 Dec 2009 13:43:59 -0800 (PST)
Received-SPF: pass (google.com: domain of wmeissner@gmail.com designates 209.85.216.204 as permitted sender) client-ip=209.85.216.204;
Received: by mail-px0-f204.google.com with SMTP id 42so2568969pxi.5
        for <ruby-ffi@googlegroups.com>; Mon, 14 Dec 2009 13:43:59 -0800 (PST)
MIME-Version: 1.0
Received: by 10.141.124.1 with SMTP id b1mr3759909rvn.10.1260827037614; Mon, 
	14 Dec 2009 13:43:57 -0800 (PST)
In-Reply-To: <0d39b89c-f286-488c-bd4c-a608a6e49e17@p35g2000yqh.googlegroups.com>
References: <d9233847-c12b-4a66-9a0a-bfb9a1f8598c@j19g2000yqk.googlegroups.com>
	 <143041db0912121134h5738b30apedc48fbd02805dd0@mail.gmail.com>
	 <0d39b89c-f286-488c-bd4c-a608a6e49e17@p35g2000yqh.googlegroups.com>
Date: Tue, 15 Dec 2009 07:43:57 +1000
Message-ID: <4ccee320912141343jd4ee206g26bc3e6c002d37b4@mail.gmail.com>
Subject: Re: [ruby-ffi] Re: Crazy thought (wrapping rb_thread_blocking_region)
From: Wayne Meissner <wmeissner@gmail.com>
To: ruby-ffi@googlegroups.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of wmeissner@gmail.com designates 209.85.216.204 as permitted sender) 
	smtp.mail=wmeissner@gmail.com; dkim=pass (test mode) header.i=@gmail.com
X-Original-Sender: wmeissner@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/26440665daf6b519
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/8f3d9e93fc1025ca
Sender: ruby-ffi@googlegroups.com
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Another good way to get parallel execution of native code is to use JRuby.

It has no GIL, so you can call native functions from multiple threads
and they all run in parallel.


2009/12/13 v01d <phreakuencies@gmail.com>:
> Actually I was refering to the case where one needs to do a couple of
> heavy independent tasks, which could benefit from parallel execution.
> Specfically I was thinking in a 3d simulator I have written that uses
> physics + graphics + logics (the first two in C++, the later in Ruby),
> and I think some tasks could be executed in parallel there.
>
> Anyway, for the type of problems you mention (something like a big
> problem that can be solved with divide & conquer) mpi-ruby seems
> interesting and its good to know it exists.
>
> Matt
>
> On 12 dic, 16:34, Hedge Hog <hedgehogshia...@gmail.com> wrote:
>> -----BEGIN PGP SIGNED MESSAGE-----
>> Hash: SHA1
>>
>>
>>
>>
>>
>> On Sun, Dec 13, 2009 at 2:26 AM, v01d =C2=A0wrote:
>> > Hi,
>> > I'm a little interested in a possible future where Ruby could be used
>> > for heavy processing stuff (but by means of calling computationally
>> > heavy C code, and take advantage of multi-core processors by doing
>> > several of these calls in parallel native threads) and I just found
>> > out about Ruby's "rb_thread_blocking_region" C call.
>>
>> > What came to my mind is that maybe FFI could be used here to make
>> > writing these type of parallelized Ruby extensions easier, by just
>> > doing something like:
>>
>> > module RubyAPI
>> > =C2=A0extend FFI::Library
>> > =C2=A0attach_function :rb_thread_blocking_region,
>> > [ :pointer, :pointer, :pointer ], :void
>> > end
>>
>> > then maybe I'm wrapping a HeavyComputationLibrary:
>>
>> My 2c:
>> Context: I take 'HeavyComputation' to mean 'saturates more than one mach=
ine'.
>> In that case I think you'd be using somthing like this:http://github.com=
/abedra/mpi-ruby
>>
>> ffi-mpi-ruby would be interesting.
>>
>> My preference has been to _try_ avoid threading and any issues it
>> causes. =C2=A0I would rather just throw more instances of a ruby script
>> (processes, somtimes processes>=3Dprocessors/cores) at the problem -
>> this does scale beyond one machine. =C2=A0Threading doesn't.
>> It has been a while since I used MPI and there may be threading buried
>> in the library above.
>>
>> Of course 'HeavyComputation' might mean using only one machine. =C2=A0Th=
en
>> scaling is not an issue and maybe threading is undisputably the best
>> way to go?
>> As I said, just my 2c.
>>
>> HH
>>
>>
>>
>>
>>
>> > module HeavyComputationLibrary
>> > =C2=A0extend FFI::Library
>> > =C2=A0attach_function :long_running_computation, [ :pointer ], :value
>> > =C2=A0attach_function :unblock_computation, [ :pointer ], :void
>> > end
>>
>> > and then do something like:
>> > RubyAPI.rb_thread_blocking_region
>> > (HeavyComputationLibrary.long_running_computation, data_ptr,
>> > HeavyComputationLibrary.unblock_computation)
>>
>> > Obviously there are a couple of non-existing things here (like passing
>> > the function pointer of a C function (maybe there's already a way to
>> > do that?), usage of :value), but I wanted to ask if this is feasible
>> > or not.
>> > I think that something like this could ease writing parallel-aware
>> > Ruby extensions (maybe with some help of Ruby Inline) for existing C
>> > libraries. Then again, I may be wrong.
>>
>> > Matt
>>
>> > PS: I'm obviously talking about Ruby 1.9 and the function call defined
>> > here:http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/10252
>>
>> - --
>> =CF=80=CF=8C=CE=BB=CE=BB' =CE=BF=E1=BC=B6=CE=B4 =E1=BC=80=CE=BB=CF=8E=CF=
=80=CE=B7=CE=BE, =E1=BC=80=CE=BB=CE=BB' =E1=BC=90=CF=87=E1=BF=96=CE=BD=CE=
=BF=CF=82 =E1=BC=93=CE=BD =CE=BC=CE=AD=CE=B3=CE=B1
>> [The fox knows many things, but the hedgehog knows one big thing.]
>> =C2=A0 Archilochus, Greek poet (c. 680 BC =E2=80=93 c. 645 BC)http://wik=
i.hedgehogshiatus.com
>>
>> -----BEGIN PGP SIGNATURE-----
>> Version: GnuPG v2.0.9 (GNU/Linux)
>> Comment: Use GnuPG with Firefox :http://getfiregpg.org(Version: 0.7.10)
>>
>> iEYEARECAAYFAksj8EYACgkQL/DTCig+NhfFWQCeKK5ohPsJzjieM2y1HSv7l4Dq
>> 8gIAn1b97tMd/o4sBg1uPX+JJFRVDMf7
>> =3DMj85
>> -----END PGP SIGNATURE-----
>
