Delivered-To: headius@headius.com
Received: by 10.90.86.8 with SMTP id j8cs37379agb;
        Sun, 8 May 2011 02:41:42 -0700 (PDT)
Received: by 10.236.129.10 with SMTP id g10mr5997147yhi.429.1304847701122;
        Sun, 08 May 2011 02:41:41 -0700 (PDT)
Return-Path: <ruby-ffi+bncCJX3mLrcBRDOypnuBBoEzOdP1A@googlegroups.com>
Received: from mail-yw0-f62.google.com (mail-yw0-f62.google.com [209.85.213.62])
        by mx.google.com with ESMTPS id t17si3791456anh.105.2011.05.08.02.41.40
        (version=TLSv1/SSLv3 cipher=OTHER);
        Sun, 08 May 2011 02:41:40 -0700 (PDT)
Received-SPF: pass (google.com: domain of ruby-ffi+bncCJX3mLrcBRDOypnuBBoEzOdP1A@googlegroups.com designates 209.85.213.62 as permitted sender) client-ip=209.85.213.62;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncCJX3mLrcBRDOypnuBBoEzOdP1A@googlegroups.com designates 209.85.213.62 as permitted sender) smtp.mail=ruby-ffi+bncCJX3mLrcBRDOypnuBBoEzOdP1A@googlegroups.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by ywj3 with SMTP id 3sf9317812ywj.7
        for <headius@headius.com>; Sun, 08 May 2011 02:41:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:x-beenthere:mime-version:date:in-reply-to:x-ip
         :references:user-agent:x-http-useragent:message-id:subject:from:to
         :x-original-sender:reply-to:precedence:mailing-list:list-id
         :x-google-group-id:list-post:list-help:list-archive:sender
         :list-subscribe:list-unsubscribe:content-type
         :content-transfer-encoding;
        bh=VZ+36YpEKP8ef7R0QO9aAabOajKVZg3ODjhcTnBue7g=;
        b=bcghkW8UWcfTpC1pOCx1JjMviWwzbKxU/bdwB7Ot87eqBY2QTiJKYkRtxxgGkRWS2X
         BFG+rMbApWi7BNqVqquKG+uWFy6M+RsmfVES8QZEeJ9cU5rVnztaH8+BMfxHLrI6+lHg
         CN61TZtDl/1QvlF0QoDWy4LZcHqqLnySWGQzM=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:mime-version:date:in-reply-to:x-ip:references
         :user-agent:x-http-useragent:message-id:subject:from:to
         :x-original-sender:reply-to:precedence:mailing-list:list-id
         :x-google-group-id:list-post:list-help:list-archive:sender
         :list-subscribe:list-unsubscribe:content-type
         :content-transfer-encoding;
        b=2twpyO8eqh0cQaV15/Xa9M48mrOCKGw7tM9QUzIDb+19GaaZ2VT/+yUD2EY9eELz/m
         1DEwf1gHnPb8HdzNi+ogH2th9Rq+hXv4A9nbDxX/yeLm9tuapXYwdvZLn/U0SGGPIO7P
         GFZFhCWUUM/Kc0S+rRs3YI4ocvpMmAdcXeF08=
Received: by 10.101.58.10 with SMTP id l10mr572417ank.14.1304847694413;
        Sun, 08 May 2011 02:41:34 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.101.163.24 with SMTP id q24ls596034ano.2.gmail; Sun, 08 May
 2011 02:41:34 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.100.89.7 with SMTP id m7mr574243anb.27.1304847693938; Sun, 08
 May 2011 02:41:33 -0700 (PDT)
Received: by 35g2000yqy.googlegroups.com with HTTP; Sun, 8 May 2011 02:41:33
 -0700 (PDT)
Date: Sun, 8 May 2011 02:41:33 -0700 (PDT)
In-Reply-To: <10871427.2955.1304825232327.JavaMail.geo-discussion-forums@prhx20>
X-IP: 87.114.253.239
References: <10871427.2955.1304825232327.JavaMail.geo-discussion-forums@prhx20>
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/534.24 (KHTML,
 like Gecko) Chrome/11.0.696.65 Safari/534.24,gzip(gfe)
Message-ID: <3e37395a-e930-47df-a864-2504093c1298@35g2000yqy.googlegroups.com>
Subject: [ruby-ffi] Re: Turning a Struct into its binary representation
From: candlerb <bcandler100@googlemail.com>
To: ruby-ffi <ruby-ffi@googlegroups.com>
X-Original-Sender: bcandler100@googlemail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
X-Google-Group-Id: 238405446264
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, <mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, <mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>,
 <mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

> > (2) Suppose I want to create a packed structure which is a contiguous
> > array of Foos. I found an example for InlineArrayOfStructs, but not
> > how to make an array of structs at the top level.
>
> Have a read of:
>
> https://groups.google.com/d/msg/ruby-ffi/2JxDNdXlcTc/GP2gbjtatqAJ
>
> If you can figure it out from that thread, *please* add a wiki page on it=
.

Hmm. I think it's saying that if you want an array of structs, then
you first build the array as a piece of contiguous memory, then you
can wrap each member in a separate struct object. Something like this:

   n_foos =3D 2
   m =3D FFI::MemoryPointer.new(Foo, n_foos)
   farr =3D n_objs.times.collect do |i|
     Foo.new(m + i * Foo.size)
   end

So now I have an array of Foo objects, each of which references the
relevant part of the underlying storage. That's doing it the opposite
way to how I was before (creating an array of Foo objects first, then
copying them). But it makes sense.

> One obvious use where FFI::Buffer is a clear win, is for small, single-us=
e
> native memory areas (e.g. the 'length' pointer in getsockopt). =A0It is u=
p to
> an order of magnitude (10x) faster to use a FFI::Buffer which gets copied
> to/from native memory for that single use, than it is to use a
> FFI::MemoryPointer and handle the allocation/release management overhead.

And how does it compare if you pass a native String? Does this just
get wrapped in an FFI::Buffer?
