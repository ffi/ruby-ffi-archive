Delivered-To: headius@headius.com
Received: by 10.229.250.142 with SMTP id mo14cs13836qcb;
        Thu, 20 May 2010 18:13:28 -0700 (PDT)
Received: by 10.115.117.6 with SMTP id u6mr736121wam.191.1274404407382;
        Thu, 20 May 2010 18:13:27 -0700 (PDT)
Return-Path: <ruby-ffi+bncCPS3mqGKCBC0vNffBBoEgr1pkw@googlegroups.com>
Received: from mail-pv0-f190.google.com (mail-pv0-f190.google.com [74.125.83.190])
        by mx.google.com with ESMTP id c11si1077004wam.63.2010.05.20.18.13.25;
        Thu, 20 May 2010 18:13:26 -0700 (PDT)
Received-SPF: pass (google.com: domain of ruby-ffi+bncCPS3mqGKCBC0vNffBBoEgr1pkw@googlegroups.com designates 74.125.83.190 as permitted sender) client-ip=74.125.83.190;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncCPS3mqGKCBC0vNffBBoEgr1pkw@googlegroups.com designates 74.125.83.190 as permitted sender) smtp.mail=ruby-ffi+bncCPS3mqGKCBC0vNffBBoEgr1pkw@googlegroups.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by pvf33 with SMTP id 33sf133414pvf.7
        for <headius@headius.com>; Thu, 20 May 2010 18:13:25 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:received:received
         :received:received-spf:received:mime-version:received:received
         :in-reply-to:references:date:message-id:subject:from:to
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :sender:list-subscribe:list-unsubscribe:content-type
         :content-transfer-encoding;
        bh=B39JVbhnq+2MWspEIae74gAU7YiBPtVrWcYZcVhOjEE=;
        b=Lbtueo8dB+1cKZcmCeQhsjuFKeRbhuH5egAcWHkXy8pZksyUDDm53PcITFPlGxGczZ
         w4nmoKYBXwL3xFY3iNDGZX8U7Bt2eyHtB8qY+BF1EGt9vS0zGYScNEgkTU7Ql68O+mof
         CwADfq3hPLD1HDceYLreVUra7hrsAxqyVh9MI=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:in-reply-to:references:date
         :message-id:subject:from:to:x-original-authentication-results
         :x-original-sender:reply-to:precedence:mailing-list:list-id
         :list-post:list-help:list-archive:sender:list-subscribe
         :list-unsubscribe:content-type:content-transfer-encoding;
        b=p9rGZUSJyLRhkmNA0hgurgQLy8MAo29bSSeYHbVxbJgVzz5TrWZL8CGo9h/lOf4piG
         S2TAFLWFrF0MZjJKVbEb/Opu83ADwzprInLD9WikDPxYIxbjbGhm9lCAJWCYaJeHI7sI
         CobtDRw8NQjcycKop41cZOpC6CKtbaYpGXXqs=
Received: by 10.142.2.13 with SMTP id 13mr85496wfb.3.1274404404162;
        Thu, 20 May 2010 18:13:24 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.142.8.28 with SMTP id 28ls473024wfh.0.p; Thu, 20 May 2010 
	18:13:23 -0700 (PDT)
Received: by 10.143.20.42 with SMTP id x42mr290123wfi.17.1274404403297;
        Thu, 20 May 2010 18:13:23 -0700 (PDT)
Received: by 10.143.20.42 with SMTP id x42mr290122wfi.17.1274404403267;
        Thu, 20 May 2010 18:13:23 -0700 (PDT)
Return-Path: <wmeissner@gmail.com>
Received: from mail-pv0-f173.google.com (mail-pv0-f173.google.com [74.125.83.173])
        by gmr-mx.google.com with ESMTP id 19si92228pzk.7.2010.05.20.18.13.22;
        Thu, 20 May 2010 18:13:22 -0700 (PDT)
Received-SPF: pass (google.com: domain of wmeissner@gmail.com designates 74.125.83.173 as permitted sender) client-ip=74.125.83.173;
Received: by mail-pv0-f173.google.com with SMTP id 6so168072pvg.18
        for <ruby-ffi@googlegroups.com>; Thu, 20 May 2010 18:13:22 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.140.83.31 with SMTP id g31mr659019rvb.3.1274404402082; Thu, 20 
	May 2010 18:13:22 -0700 (PDT)
Received: by 10.141.51.6 with HTTP; Thu, 20 May 2010 18:13:22 -0700 (PDT)
In-Reply-To: <AANLkTinJsgojioh6loOgUkofD2_20mI3wYTl_3owC6nc@mail.gmail.com>
References: <b36952de-d546-417b-baa6-cc7135c8caad@q33g2000vbt.googlegroups.com>
	 <AANLkTilsPThTYVBTIlxUMc-cMzlqkSQvyGJHwki2fXEh@mail.gmail.com>
	 <AANLkTikxAaNFU8RHopnCTGBbYlr0FldeL6GylCM7BxHD@mail.gmail.com>
	 <AANLkTili1Czv42tlJoSK00kXSGDRXttq8pHB2TMWLle7@mail.gmail.com>
	 <AANLkTilNtcrmZLxJCKbBd2hiP31LylEaGEweh4d98sju@mail.gmail.com>
	 <6DCFD30D-74A0-4ECF-AEB0-179C0BE0945C@mac.com>
	 <AANLkTinJsgojioh6loOgUkofD2_20mI3wYTl_3owC6nc@mail.gmail.com>
Date: Fri, 21 May 2010 11:13:22 +1000
Message-ID: <AANLkTikghgO1cZLeNR6mL2ySdYkM3WuerTAW3y86YOqg@mail.gmail.com>
Subject: Re: [ruby-ffi] Pointer to a struct - how to cast?
From: Wayne Meissner <wmeissner@gmail.com>
To: ruby-ffi@googlegroups.com
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of wmeissner@gmail.com designates 74.125.83.173 as permitted sender) 
	smtp.mail=wmeissner@gmail.com; dkim=pass (test mode) header.i=@gmail.com
X-Original-Sender: wmeissner@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

On 21 May 2010 05:04, DA <drew.avis@gmail.com> wrote:

> So I guess I need the equivalent of "get_array_of_struct"? =A0I can't
> find an example for this case (array of struct) on the wiki. =A0Any
> ideas?

That one is going to be a bit nasty.

Try using FFI::Pointer#+

e.g.
0.upto(tis[:len]).each do |i|
  s =3D FM::FTexFtItemT.new(tis[:val] + (i * FM::FTexFtItemT.size))
  # do stuff with s here
end


Alternatively, you can use Pointer.new(FTexFtItemT, tis[:val]) to
create a new pointer with a different type_size (the size used to step
along it using the [] method).

e.g.

val_array =3D FFI::Pointer.new(FM::FTexFtItemT, tis[:val])
0.upto(tis[:len]).each do |i|
  s =3D FM::FTexFtItemT.new(val_array[i])
  # do stuff with s struct here
end

It wouldn't be that hard to create a bit of a helper class to do this,
since its a pretty common thing ... and some enterprising induhvidual
might want to do that and submit it for inclusion in say ... NiceFFI.
