Delivered-To: headius@headius.com
Received: by 10.100.197.20 with SMTP id u20cs33768anf;
        Sat, 12 Dec 2009 17:11:04 -0800 (PST)
Received: by 10.141.125.8 with SMTP id c8mr2057232rvn.297.1260666663979;
        Sat, 12 Dec 2009 17:11:03 -0800 (PST)
Return-Path: <3Jj8kSwAACNQHK1O-5586EE6B46HEKFI.2EC@listserv.bounces.google.com>
Received: from mail-px0-f169.google.com (mail-px0-f169.google.com [209.85.216.169])
        by mx.google.com with ESMTP id 14si7613307pzk.21.2009.12.12.17.11.03;
        Sat, 12 Dec 2009 17:11:03 -0800 (PST)
Received-SPF: pass (google.com: domain of 3Jj8kSwAACNQHK1O-5586EE6B46HEKFI.2EC@listserv.bounces.google.com designates 209.85.216.169 as permitted sender) client-ip=209.85.216.169;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 3Jj8kSwAACNQHK1O-5586EE6B46HEKFI.2EC@listserv.bounces.google.com designates 209.85.216.169 as permitted sender) smtp.mail=3Jj8kSwAACNQHK1O-5586EE6B46HEKFI.2EC@listserv.bounces.google.com
Received: by pxi41 with SMTP id 41sf1291468pxi.23
        for <headius@headius.com>; Sat, 12 Dec 2009 17:11:03 -0800 (PST)
Received: by 10.142.5.29 with SMTP id 29mr226677wfe.46.1260666662531;
        Sat, 12 Dec 2009 17:11:02 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.142.149.37 with SMTP id w37ls923027wfd.3.p; Sat, 12 Dec 2009 
	17:11:01 -0800 (PST)
Received: by 10.142.75.4 with SMTP id x4mr594704wfa.9.1260666661315;
        Sat, 12 Dec 2009 17:11:01 -0800 (PST)
Received: by 10.142.75.4 with SMTP id x4mr594703wfa.9.1260666661292;
        Sat, 12 Dec 2009 17:11:01 -0800 (PST)
Return-Path: <stephen.bannasch@deanbrook.org>
Received: from deanbrook.org (deanbrook.org [72.52.70.192])
        by gmr-mx.google.com with SMTP id 18si644191pzk.9.2009.12.12.17.11.01;
        Sat, 12 Dec 2009 17:11:01 -0800 (PST)
Received-SPF: pass (google.com: best guess record for domain of stephen.bannasch@deanbrook.org designates 72.52.70.192 as permitted sender) client-ip=72.52.70.192;
Received: from ::ffff:71.123.114.34 ([71.123.114.34]) by deanbrook.org for <ruby-ffi@googlegroups.com>; Sat, 12 Dec 2009 17:10:59 -0800
Mime-Version: 1.0
Message-Id: <p06240814c749ebd6e8f1@[192.168.1.106]>
In-Reply-To: <p06240810c749876100b5@[192.168.1.106]>
References: <p06240810c749876100b5@[192.168.1.106]>
Date: Sat, 12 Dec 2009 20:08:08 -0500
To: ruby-ffi@googlegroups.com
From: Stephen Bannasch <stephen.bannasch@deanbrook.org>
Subject: Re: [ruby-ffi] basic question: function expects pointer to string 
	buffer,  	returns string
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	best guess record for domain of stephen.bannasch@deanbrook.org designates 
	72.52.70.192 as permitted sender) smtp.mail=stephen.bannasch@deanbrook.org
X-Original-Sender: stephen.bannasch@deanbrook.org
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/a9128eed1d8e83c7
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/9bf2b04523d66f28
Sender: ruby-ffi@googlegroups.com
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
Content-Type: text/plain; charset="us-ascii"

>I've started working on a Ruby FFI interface to the Vernier GoIO sensor interface products.
>
>See:
>
>  http://www.vernier.com/go/
>  http://www.vernier.com/downloads/gosdk.html   *the SDK is public domain
>
>I've got a very basic question FFI question.
>
>I have a C++ function that expects a pointer to a string buffer and a int32 specifying the size of the buffer.
>
>The result of calling the function is a name of a connected device in the string buffer.
>
>How should the call be setup and then processed on return to generate a Ruby string.
>
>Here's the state of the code so far:  http://gist.github.com/254981

Here's a simplification of how I solved the problem:

I create a MemoryPointer pointing to a 256 byte buffer:

  name = FFI::MemoryPointer.new(256)

then call my function (also telling the function to limit the returned string to 255 chars):

  GetDeviceName(name, 255)

and print the returned string:

  puts name.get_string(0)

