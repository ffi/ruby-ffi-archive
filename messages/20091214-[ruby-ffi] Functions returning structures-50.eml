Delivered-To: headius@headius.com
Received: by 10.100.134.8 with SMTP id h8cs133835and;
        Mon, 14 Dec 2009 13:29:57 -0800 (PST)
Received: by 10.150.44.2 with SMTP id r2mr8144593ybr.77.1260826197262;
        Mon, 14 Dec 2009 13:29:57 -0800 (PST)
Return-Path: <3VK4mSwcJCHQcZSWdafYeSad.UgejmTq-XXaYggYdWYjgmhk.Uge@listserv.bounces.google.com>
Received: from mail-yw0-f144.google.com (mail-yw0-f144.google.com [209.85.211.144])
        by mx.google.com with ESMTP id 33si10484628ywh.25.2009.12.14.13.29.57;
        Mon, 14 Dec 2009 13:29:57 -0800 (PST)
Received-SPF: pass (google.com: domain of 3VK4mSwcJCHQcZSWdafYeSad.UgejmTq-XXaYggYdWYjgmhk.Uge@listserv.bounces.google.com designates 209.85.211.144 as permitted sender) client-ip=209.85.211.144;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of 3VK4mSwcJCHQcZSWdafYeSad.UgejmTq-XXaYggYdWYjgmhk.Uge@listserv.bounces.google.com designates 209.85.211.144 as permitted sender) smtp.mail=3VK4mSwcJCHQcZSWdafYeSad.UgejmTq-XXaYggYdWYjgmhk.Uge@listserv.bounces.google.com
Received: by ywh8 with SMTP id 8sf9346619ywh.3
        for <headius@headius.com>; Mon, 14 Dec 2009 13:29:57 -0800 (PST)
Received: by 10.150.250.2 with SMTP id x2mr304455ybh.43.1260826196083;
        Mon, 14 Dec 2009 13:29:56 -0800 (PST)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.150.102.33 with SMTP id z33ls2913155ybb.2.p; Mon, 14 Dec 2009 
	13:29:55 -0800 (PST)
Received: by 10.150.183.20 with SMTP id g20mr6316091ybf.29.1260826195459;
        Mon, 14 Dec 2009 13:29:55 -0800 (PST)
Received: by 10.150.183.20 with SMTP id g20mr6316090ybf.29.1260826195435;
        Mon, 14 Dec 2009 13:29:55 -0800 (PST)
Return-Path: <khaelin@gmail.com>
Received: from mail-yx0-f147.google.com (mail-yx0-f147.google.com [209.85.210.147])
        by gmr-mx.google.com with ESMTP id 19si603902ywh.10.2009.12.14.13.29.55;
        Mon, 14 Dec 2009 13:29:55 -0800 (PST)
Received-SPF: pass (google.com: domain of khaelin@gmail.com designates 209.85.210.147 as permitted sender) client-ip=209.85.210.147;
Received: by mail-yx0-f147.google.com with SMTP id 11so8406583yxe.15
        for <ruby-ffi@googlegroups.com>; Mon, 14 Dec 2009 13:29:55 -0800 (PST)
MIME-Version: 1.0
Received: by 10.101.113.1 with SMTP id q1mr511731anm.37.1260826195389; Mon, 14 
	Dec 2009 13:29:55 -0800 (PST)
Date: Mon, 14 Dec 2009 13:29:55 -0800 (PST)
X-IP: 88.162.192.107
User-Agent: G2/1.0
X-HTTP-UserAgent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.5) 
	Gecko/20091106 Shiretoko/3.5.5,gzip(gfe),gzip(gfe)
Message-ID: <959630af-8bc0-4c13-8878-6ca8a9c20360@b15g2000yqd.googlegroups.com>
Subject: [ruby-ffi] Functions returning structures
From: galdor <khaelin@gmail.com>
To: ruby-ffi <ruby-ffi@googlegroups.com>
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of khaelin@gmail.com designates 209.85.210.147 as permitted sender) 
	smtp.mail=khaelin@gmail.com
X-Original-Sender: khaelin@gmail.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=>
X-Thread-Url: http://groups.google.com/group/ruby-ffi/t/ace0b94f7912799f
X-Message-Url: http://groups.google.com/group/ruby-ffi/msg/df67c83feed255c
Sender: ruby-ffi@googlegroups.com
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
Content-Type: text/plain; charset=ISO-8859-1

Hi,

Let's define a C function which returns a plain structure:

    typedef struct {
        int r, g, b, a;
    } ALLEGRO_COLOR;

    ALLEGRO_COLOR al_map_rgb(unsigned char r, unsigned char g,
unsigned char b);

Now we bind it:

    class ALLEGRO_COLOR < FFI::Struct
        layout :r, :float,
               :g, :float,
               :b, :float,
               :a, :float
    end

    attach_function :al_map_rgb, [:uchar, :uchar, :uchar],
ALLEGRO_COLOR

But the following ruby code doesn't work:

    bgcolor = al_map_rgb(20, 20, 20)
    fgcolor = al_map_rgb(20, 40, 80)
    al_clear_to_color(bgcolor)

The screen is cleared with rgb(20, 40, 80), instead of rgb(20, 20,
20).
I don't know how stack allocation is performed, I must be doing
something wrong.

How should I work with stack-allocated structures ?

Regards,

Nicolas Martyanoff
