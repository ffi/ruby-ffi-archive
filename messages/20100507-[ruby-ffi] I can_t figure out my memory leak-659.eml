Delivered-To: headius@headius.com
Received: by 10.150.226.5 with SMTP id y5cs30295ybg;
        Fri, 7 May 2010 09:26:56 -0700 (PDT)
Received: by 10.142.209.15 with SMTP id h15mr168813wfg.150.1273249615131;
        Fri, 07 May 2010 09:26:55 -0700 (PDT)
Return-Path: <ruby-ffi+bncCJ2jt8vbBhDL_pDfBBoEA0kIJQ@googlegroups.com>
Received: from mail-pw0-f62.google.com (mail-pw0-f62.google.com [209.85.160.62])
        by mx.google.com with ESMTP id 30si3288226pzk.1.2010.05.07.09.26.53;
        Fri, 07 May 2010 09:26:54 -0700 (PDT)
Received-SPF: pass (google.com: domain of ruby-ffi+bncCJ2jt8vbBhDL_pDfBBoEA0kIJQ@googlegroups.com designates 209.85.160.62 as permitted sender) client-ip=209.85.160.62;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of ruby-ffi+bncCJ2jt8vbBhDL_pDfBBoEA0kIJQ@googlegroups.com designates 209.85.160.62 as permitted sender) smtp.mail=ruby-ffi+bncCJ2jt8vbBhDL_pDfBBoEA0kIJQ@googlegroups.com; dkim=pass (test mode) header.i=@googlegroups.com
Received: by pwi10 with SMTP id 10sf394647pwi.7
        for <headius@headius.com>; Fri, 07 May 2010 09:26:53 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=beta;
        h=domainkey-signature:received:x-beenthere:received:received:received
         :received:received-spf:mime-version:received
         :x-proofpoint-spam-details:from:subject:date:message-id:to:x-mailer
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :sender:list-subscribe:list-unsubscribe:content-transfer-encoding
         :content-type;
        bh=FaL+bld6oli5YTg84tgJSpTsybqnHORKGlLO8lHqSqo=;
        b=7ObmViRo6u6o1MDX9jK0f8jQr7HJ3D/1Blz6xld0gGEFzWvq4PZ2xC1wP3p+P5cuYY
         VtIwgRdhmmtcEWnR/HjpFSG9n/STcCEGHAUbZmCidggPUmpibY3JJ+ZT3DBoyAfIRM7z
         dTzQ3nEKheaYybW+MMGzrrE+mKEOVj10iR8uQ=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlegroups.com; s=beta;
        h=x-beenthere:received-spf:mime-version:x-proofpoint-spam-details
         :from:subject:date:message-id:to:x-mailer
         :x-original-authentication-results:x-original-sender:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :sender:list-subscribe:list-unsubscribe:content-transfer-encoding
         :content-type;
        b=vTvPG/SF+8+Mu2Y9vnyFe3v2fA4Kk6CBgh66T4pd4Sn8G/N3kZoqLjP92oIYen/e/7
         FYXIST/9+ljkmLd/4uoUv561nJ63pRMEfTlIGUuLLffNDhAyG9zfSFoLLs5nF4pSWqRf
         UBBSr0d15KFJBUJRF0cNnW+CeltPXjYMiGCws=
Received: by 10.142.249.30 with SMTP id w30mr10408wfh.35.1273249611679;
        Fri, 07 May 2010 09:26:51 -0700 (PDT)
X-BeenThere: ruby-ffi@googlegroups.com
Received: by 10.142.250.36 with SMTP id x36ls8736518wfh.2.p; Fri, 07 May 2010 
	09:26:51 -0700 (PDT)
Received: by 10.142.67.1 with SMTP id p1mr62148wfa.0.1273249610554;
        Fri, 07 May 2010 09:26:50 -0700 (PDT)
Received: by 10.142.67.1 with SMTP id p1mr62147wfa.0.1273249610530;
        Fri, 07 May 2010 09:26:50 -0700 (PDT)
Return-Path: <cremes.devlist@mac.com>
Received: from asmtpout027.mac.com (asmtpout027.mac.com [17.148.16.102])
        by gmr-mx.google.com with ESMTP id 19si427040pzk.15.2010.05.07.09.26.50;
        Fri, 07 May 2010 09:26:50 -0700 (PDT)
Received-SPF: pass (google.com: domain of cremes.devlist@mac.com designates 17.148.16.102 as permitted sender) client-ip=17.148.16.102;
MIME-version: 1.0
Received: from [192.168.0.101] ([76.8.86.186])
 by asmtp027.mac.com (Sun Java(tm) System Messaging Server 6.3-8.01 (built Dec
 16 2008; 32bit)) with ESMTPSA id <0L2200ID95OFLO40@asmtp027.mac.com> for
 ruby-ffi@googlegroups.com; Fri, 07 May 2010 09:26:41 -0700 (PDT)
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 spamscore=0
 ipscore=0 phishscore=0 bulkscore=0 adultscore=0 classifier=spam adjust=0
 reason=mlx engine=5.0.0-0908210000 definitions=main-1005070093
From: Chuck Remes <cremes.devlist@mac.com>
Subject: [ruby-ffi] I can't figure out my memory leak
Date: Fri, 07 May 2010 11:26:37 -0500
Message-id: <DE55494E-6A74-4C70-AC33-9BA104DD2A7A@mac.com>
To: ruby-ffi@googlegroups.com
X-Mailer: Apple Mail (2.1078)
X-Original-Authentication-Results: gmr-mx.google.com; spf=pass (google.com: 
	domain of cremes.devlist@mac.com designates 17.148.16.102 as permitted 
	sender) smtp.mail=cremes.devlist@mac.com
X-Original-Sender: cremes.devlist@mac.com
Reply-To: ruby-ffi@googlegroups.com
Precedence: list
Mailing-list: list ruby-ffi@googlegroups.com; contact ruby-ffi+owners@googlegroups.com
List-ID: <ruby-ffi.googlegroups.com>
List-Post: <http://groups.google.com/group/ruby-ffi/post?hl=en_US>, 
	<mailto:ruby-ffi@googlegroups.com>
List-Help: <http://groups.google.com/support/?hl=en_US>, <mailto:ruby-ffi+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/ruby-ffi?hl=en_US>
Sender: ruby-ffi@googlegroups.com
List-Subscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/ruby-ffi/subscribe?hl=en_US>, 
	<mailto:ruby-ffi+unsubscribe@googlegroups.com>
Content-transfer-encoding: 7BIT
Content-type: text/plain; charset=us-ascii

http://github.com/chuckremes/ffi-rzmq

I have a tremendous memory leak in my FFI code. I'm pretty sure I know exactly where it is caused but I have no idea how to solve it. This gist shows the code in question.

http://gist.github.com/393627

The first gist block is where I think the memory leak lives. The second gist block is the definition of the leaking Struct and the definitions of the library functions.

Here's the sequence of events for the creation of a message where message is not nil (from the constructor).

1. Allocate the Msg_t Struct.

2. Create a MemoryPointer from the message string to create the Msg_t payload.

3. Hand off the Struct obj to the underlying library and tell the library the size needed to store the data.

4. Hand off the MemoryPointer pointing to the message data to the underlying library. The library should now *own* the memory allocated in step #2 and manage it from here on.


After a call is made to transmit OR receive the message obj, it calls Message#close. This makes a call to the underlying library to close the message and release its memory. This should release the memory that was allocated in #2 above. 

When I run a sample program, memory continually increases (under JRuby) and never gets collected. I know it is related to this code path because I can control the size of the messages being echoed back and forth. The code makes no other sizable memory allocation elsewhere, so I'm pretty confident the culprit is here.

Does anything look amiss? What is the difference between FFI::Pointer and FFI::MemoryPointer? 

Any suggestions on how to debug this?

cr



